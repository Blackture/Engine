id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: Engine
  commentId: N:Engine
  language: CSharp
  name:
    CSharp: Engine
    VB: Engine
  nameWithType:
    CSharp: Engine
    VB: Engine
  qualifiedName:
    CSharp: Engine
    VB: Engine
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Main
    commentId: T:Engine.Main
    language: CSharp
    name:
      CSharp: Main
      VB: Main
    nameWithType:
      CSharp: Main
      VB: Main
    qualifiedName:
      CSharp: Engine.Main
      VB: Engine.Main
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine
    source:
      id: Main
      path: ''
      startLine: 65
    syntax:
      content:
        CSharp: 'public class Main : Form'
        VB: >-
          Public Class Main

              Inherits Form
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Main.#ctor
      commentId: M:Engine.Main.#ctor
      language: CSharp
      name:
        CSharp: Main()
        VB: Main()
      nameWithType:
        CSharp: Main.Main()
        VB: Main.Main()
      qualifiedName:
        CSharp: Engine.Main.Main()
        VB: Engine.Main.Main()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine
      source:
        id: .ctor
        path: ''
        startLine: 39
      syntax:
        content:
          CSharp: public Main()
          VB: Public Sub New
      overload: Engine.Main.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Main.Dispose(System.Boolean)
      commentId: M:Engine.Main.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: Main.Dispose(Boolean)
        VB: Main.Dispose(Boolean)
      qualifiedName:
        CSharp: Engine.Main.Dispose(System.Boolean)
        VB: Engine.Main.Dispose(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine
      source:
        id: Dispose
        path: ''
        startLine: 76
      summary: "\nVerwendete Ressourcen bereinigen.\n"
      example: []
      syntax:
        content:
          CSharp: protected override void Dispose(bool disposing)
          VB: Protected Overrides Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
          description: True, wenn verwaltete Ressourcen gel√∂scht werden sollen; andernfalls False.
      overload: Engine.Main.Dispose*
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: Engine.Core
  commentId: N:Engine.Core
  language: CSharp
  name:
    CSharp: Engine.Core
    VB: Engine.Core
  nameWithType:
    CSharp: Engine.Core
    VB: Engine.Core
  qualifiedName:
    CSharp: Engine.Core
    VB: Engine.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.Component
    commentId: T:Engine.Core.Component
    language: CSharp
    name:
      CSharp: Component
      VB: Component
    nameWithType:
      CSharp: Component
      VB: Component
    qualifiedName:
      CSharp: Engine.Core.Component
      VB: Engine.Core.Component
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Component
      path: ''
      startLine: 135
    syntax:
      content:
        CSharp: public class Component
        VB: Public Class Component
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Component.Dependency
      commentId: P:Engine.Core.Component.Dependency
      language: CSharp
      name:
        CSharp: Dependency
        VB: Dependency
      nameWithType:
        CSharp: Component.Dependency
        VB: Component.Dependency
      qualifiedName:
        CSharp: Engine.Core.Component.Dependency
        VB: Engine.Core.Component.Dependency
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Dependency
        path: ''
        startLine: 138
      syntax:
        content:
          CSharp: public Object3D Dependency { get; set; }
          VB: Public Property Dependency As Object3D
        parameters: []
        return:
          type: Engine.Core.Object3D
      overload: Engine.Core.Component.Dependency*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Component.#ctor(Engine.Core.Object3D)
      commentId: M:Engine.Core.Component.#ctor(Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Component(Object3D)
        VB: Component(Object3D)
      nameWithType:
        CSharp: Component.Component(Object3D)
        VB: Component.Component(Object3D)
      qualifiedName:
        CSharp: Engine.Core.Component.Component(Engine.Core.Object3D)
        VB: Engine.Core.Component.Component(Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 140
      syntax:
        content:
          CSharp: public Component(Object3D dependency)
          VB: Public Sub New(dependency As Object3D)
        parameters:
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Component.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Layer
    commentId: T:Engine.Core.Layer
    language: CSharp
    name:
      CSharp: Layer
      VB: Layer
    nameWithType:
      CSharp: Layer
      VB: Layer
    qualifiedName:
      CSharp: Engine.Core.Layer
      VB: Engine.Core.Layer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Layer
      path: ''
      startLine: 159
    syntax:
      content:
        CSharp: public class Layer
        VB: Public Class Layer
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Layer.All
      commentId: F:Engine.Core.Layer.All
      language: CSharp
      name:
        CSharp: All
        VB: All
      nameWithType:
        CSharp: Layer.All
        VB: Layer.All
      qualifiedName:
        CSharp: Engine.Core.Layer.All
        VB: Engine.Core.Layer.All
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: All
        path: ''
        startLine: 161
      syntax:
        content:
          CSharp: public static readonly List<Layer> All
          VB: Public Shared ReadOnly All As List(Of Layer)
        return:
          type: System.Collections.Generic.List{Engine.Core.Layer}
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Layer.Item(System.Int32)
      commentId: P:Engine.Core.Layer.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: Layer.Item[Int32]
        VB: Layer.Item(Int32)
      qualifiedName:
        CSharp: Engine.Core.Layer.Item[System.Int32]
        VB: Engine.Core.Layer.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: this[]
        path: ''
        startLine: 166
      syntax:
        content:
          CSharp: public Layer this[int id] { get; set; }
          VB: Public Property Item(id As Integer) As Layer
        parameters:
        - id: id
          type: System.Int32
        return:
          type: Engine.Core.Layer
      overload: Engine.Core.Layer.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Layer.Name
      commentId: P:Engine.Core.Layer.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Layer.Name
        VB: Layer.Name
      qualifiedName:
        CSharp: Engine.Core.Layer.Name
        VB: Engine.Core.Layer.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Name
        path: ''
        startLine: 182
      summary: "\nThe layer&apos;s unique name\n"
      example: []
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: Engine.Core.Layer.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Layer.ID
      commentId: P:Engine.Core.Layer.ID
      language: CSharp
      name:
        CSharp: ID
        VB: ID
      nameWithType:
        CSharp: Layer.ID
        VB: Layer.ID
      qualifiedName:
        CSharp: Engine.Core.Layer.ID
        VB: Engine.Core.Layer.ID
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: ID
        path: ''
        startLine: 186
      summary: "\nThe layer&apos;s unique id for the layer listing\n"
      example: []
      syntax:
        content:
          CSharp: public int ID { get; }
          VB: Public ReadOnly Property ID As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Layer.ID*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Layer.Index
      commentId: P:Engine.Core.Layer.Index
      language: CSharp
      name:
        CSharp: Index
        VB: Index
      nameWithType:
        CSharp: Layer.Index
        VB: Layer.Index
      qualifiedName:
        CSharp: Engine.Core.Layer.Index
        VB: Engine.Core.Layer.Index
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Index
        path: ''
        startLine: 190
      summary: "\nThe layer&apos;s unique index indicating its position (that&apos;s neither its identification nor its position in the list).\n"
      example: []
      syntax:
        content:
          CSharp: public int Index { get; }
          VB: Public ReadOnly Property Index As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Layer.Index*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Layer.#ctor(System.String,System.Int32)
      commentId: M:Engine.Core.Layer.#ctor(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: Layer(String, Int32)
        VB: Layer(String, Int32)
      nameWithType:
        CSharp: Layer.Layer(String, Int32)
        VB: Layer.Layer(String, Int32)
      qualifiedName:
        CSharp: Engine.Core.Layer.Layer(System.String, System.Int32)
        VB: Engine.Core.Layer.Layer(System.String, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 192
      syntax:
        content:
          CSharp: public Layer(string name, int index)
          VB: Public Sub New(name As String, index As Integer)
        parameters:
        - id: name
          type: System.String
        - id: index
          type: System.Int32
      overload: Engine.Core.Layer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Layer.#ctor(System.String,System.Int32,System.Int32)
      commentId: M:Engine.Core.Layer.#ctor(System.String,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Layer(String, Int32, Int32)
        VB: Layer(String, Int32, Int32)
      nameWithType:
        CSharp: Layer.Layer(String, Int32, Int32)
        VB: Layer.Layer(String, Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Layer.Layer(System.String, System.Int32, System.Int32)
        VB: Engine.Core.Layer.Layer(System.String, System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 197
      syntax:
        content:
          CSharp: public Layer(string name, int id, int index)
          VB: Public Sub New(name As String, id As Integer, index As Integer)
        parameters:
        - id: name
          type: System.String
        - id: id
          type: System.Int32
        - id: index
          type: System.Int32
      overload: Engine.Core.Layer.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Layer.ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
      commentId: M:Engine.Core.Layer.ChangeLayer(System.Int32,System.String,System.Nullable{System.Int32})
      language: CSharp
      name:
        CSharp: ChangeLayer(Int32, String, Nullable<Int32>)
        VB: ChangeLayer(Int32, String, Nullable(Of Int32))
      nameWithType:
        CSharp: Layer.ChangeLayer(Int32, String, Nullable<Int32>)
        VB: Layer.ChangeLayer(Int32, String, Nullable(Of Int32))
      qualifiedName:
        CSharp: Engine.Core.Layer.ChangeLayer(System.Int32, System.String, System.Nullable<System.Int32>)
        VB: Engine.Core.Layer.ChangeLayer(System.Int32, System.String, System.Nullable(Of System.Int32))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: ChangeLayer
        path: ''
        startLine: 238
      syntax:
        content:
          CSharp: public static void ChangeLayer(int Id, string name, int? index)
          VB: Public Shared Sub ChangeLayer(Id As Integer, name As String, index As Integer?)
        parameters:
        - id: Id
          type: System.Int32
        - id: name
          type: System.String
        - id: index
          type: System.Nullable{System.Int32}
      overload: Engine.Core.Layer.ChangeLayer*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Object3D
    commentId: T:Engine.Core.Object3D
    language: CSharp
    name:
      CSharp: Object3D
      VB: Object3D
    nameWithType:
      CSharp: Object3D
      VB: Object3D
    qualifiedName:
      CSharp: Engine.Core.Object3D
      VB: Engine.Core.Object3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Object3D
      path: ''
      startLine: 273
    syntax:
      content:
        CSharp: public class Object3D
        VB: Public Class Object3D
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Object3D.Name
      commentId: F:Engine.Core.Object3D.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Object3D.Name
        VB: Object3D.Name
      qualifiedName:
        CSharp: Engine.Core.Object3D.Name
        VB: Engine.Core.Object3D.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Name
        path: ''
        startLine: 278
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.Components
      commentId: F:Engine.Core.Object3D.Components
      language: CSharp
      name:
        CSharp: Components
        VB: Components
      nameWithType:
        CSharp: Object3D.Components
        VB: Object3D.Components
      qualifiedName:
        CSharp: Engine.Core.Object3D.Components
        VB: Engine.Core.Object3D.Components
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Components
        path: ''
        startLine: 279
      syntax:
        content:
          CSharp: public List<Component> Components
          VB: Public Components As List(Of Component)
        return:
          type: System.Collections.Generic.List{Engine.Core.Component}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.Local
      commentId: P:Engine.Core.Object3D.Local
      language: CSharp
      name:
        CSharp: Local
        VB: Local
      nameWithType:
        CSharp: Object3D.Local
        VB: Object3D.Local
      qualifiedName:
        CSharp: Engine.Core.Object3D.Local
        VB: Engine.Core.Object3D.Local
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Local
        path: ''
        startLine: 283
      summary: "\nlocal coordinate system of the object\n"
      example: []
      syntax:
        content:
          CSharp: public LCS3 Local { get; }
          VB: Public ReadOnly Property Local As LCS3
        parameters: []
        return:
          type: LCS3
      overload: Engine.Core.Object3D.Local*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Object3D.Parent
      commentId: P:Engine.Core.Object3D.Parent
      language: CSharp
      name:
        CSharp: Parent
        VB: Parent
      nameWithType:
        CSharp: Object3D.Parent
        VB: Object3D.Parent
      qualifiedName:
        CSharp: Engine.Core.Object3D.Parent
        VB: Engine.Core.Object3D.Parent
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Parent
        path: ''
        startLine: 288
      summary: "\nThe set-accessor resets the local transformations the new parent ones. To keep this Object3D&apos;s transformation, use the method instead.\n"
      example: []
      syntax:
        content:
          CSharp: public Object3D Parent { get; set; }
          VB: Public Property Parent As Object3D
        parameters: []
        return:
          type: Engine.Core.Object3D
      overload: Engine.Core.Object3D.Parent*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Object3D.#ctor(System.Boolean)
      commentId: M:Engine.Core.Object3D.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Object3D(Boolean)
        VB: Object3D(Boolean)
      nameWithType:
        CSharp: Object3D.Object3D(Boolean)
        VB: Object3D.Object3D(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Object3D.Object3D(System.Boolean)
        VB: Engine.Core.Object3D.Object3D(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 294
      syntax:
        content:
          CSharp: public Object3D(bool global = false)
          VB: Public Sub New(global As Boolean = False)
        parameters:
        - id: global
          type: System.Boolean
      overload: Engine.Core.Object3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.#ctor(Vector3,System.Boolean)
      commentId: M:Engine.Core.Object3D.#ctor(Vector3,System.Boolean)
      language: CSharp
      name:
        CSharp: Object3D(Vector3, Boolean)
        VB: Object3D(Vector3, Boolean)
      nameWithType:
        CSharp: Object3D.Object3D(Vector3, Boolean)
        VB: Object3D.Object3D(Vector3, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Object3D.Object3D(Vector3, System.Boolean)
        VB: Engine.Core.Object3D.Object3D(Vector3, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 298
      syntax:
        content:
          CSharp: public Object3D(Vector3 position, bool global = false)
          VB: Public Sub New(position As Vector3, global As Boolean = False)
        parameters:
        - id: position
          type: Vector3
        - id: global
          type: System.Boolean
      overload: Engine.Core.Object3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.#ctor(Vector3,RotationVector3,System.Boolean)
      commentId: M:Engine.Core.Object3D.#ctor(Vector3,RotationVector3,System.Boolean)
      language: CSharp
      name:
        CSharp: Object3D(Vector3, RotationVector3, Boolean)
        VB: Object3D(Vector3, RotationVector3, Boolean)
      nameWithType:
        CSharp: Object3D.Object3D(Vector3, RotationVector3, Boolean)
        VB: Object3D.Object3D(Vector3, RotationVector3, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, System.Boolean)
        VB: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 302
      syntax:
        content:
          CSharp: public Object3D(Vector3 position, RotationVector3 rotation, bool global = false)
          VB: Public Sub New(position As Vector3, rotation As RotationVector3, global As Boolean = False)
        parameters:
        - id: position
          type: Vector3
        - id: rotation
          type: RotationVector3
        - id: global
          type: System.Boolean
      overload: Engine.Core.Object3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.#ctor(Vector3,RotationVector3,Vector3,System.Boolean)
      commentId: M:Engine.Core.Object3D.#ctor(Vector3,RotationVector3,Vector3,System.Boolean)
      language: CSharp
      name:
        CSharp: Object3D(Vector3, RotationVector3, Vector3, Boolean)
        VB: Object3D(Vector3, RotationVector3, Vector3, Boolean)
      nameWithType:
        CSharp: Object3D.Object3D(Vector3, RotationVector3, Vector3, Boolean)
        VB: Object3D.Object3D(Vector3, RotationVector3, Vector3, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, Vector3, System.Boolean)
        VB: Engine.Core.Object3D.Object3D(Vector3, RotationVector3, Vector3, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 306
      syntax:
        content:
          CSharp: public Object3D(Vector3 position, RotationVector3 rotation, Vector3 scale, bool global = false)
          VB: Public Sub New(position As Vector3, rotation As RotationVector3, scale As Vector3, global As Boolean = False)
        parameters:
        - id: position
          type: Vector3
        - id: rotation
          type: RotationVector3
        - id: scale
          type: Vector3
        - id: global
          type: System.Boolean
      overload: Engine.Core.Object3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.SetParent(Engine.Core.Object3D,System.Boolean)
      commentId: M:Engine.Core.Object3D.SetParent(Engine.Core.Object3D,System.Boolean)
      language: CSharp
      name:
        CSharp: SetParent(Object3D, Boolean)
        VB: SetParent(Object3D, Boolean)
      nameWithType:
        CSharp: Object3D.SetParent(Object3D, Boolean)
        VB: Object3D.SetParent(Object3D, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Object3D.SetParent(Engine.Core.Object3D, System.Boolean)
        VB: Engine.Core.Object3D.SetParent(Engine.Core.Object3D, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: SetParent
        path: ''
        startLine: 347
      syntax:
        content:
          CSharp: public void SetParent(Object3D parent, bool keepGlobalTransformation = false)
          VB: Public Sub SetParent(parent As Object3D, keepGlobalTransformation As Boolean = False)
        parameters:
        - id: parent
          type: Engine.Core.Object3D
        - id: keepGlobalTransformation
          type: System.Boolean
      overload: Engine.Core.Object3D.SetParent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.AddComponent``1(``0)
      commentId: M:Engine.Core.Object3D.AddComponent``1(``0)
      language: CSharp
      name:
        CSharp: AddComponent<T>(T)
        VB: AddComponent(Of T)(T)
      nameWithType:
        CSharp: Object3D.AddComponent<T>(T)
        VB: Object3D.AddComponent(Of T)(T)
      qualifiedName:
        CSharp: Engine.Core.Object3D.AddComponent<T>(T)
        VB: Engine.Core.Object3D.AddComponent(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: AddComponent
        path: ''
        startLine: 364
      syntax:
        content:
          CSharp: >-
            public T AddComponent<T>(T component)

                where T : Component
          VB: Public Function AddComponent(Of T As Component)(component As T) As T
        parameters:
        - id: component
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Engine.Core.Object3D.AddComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.RemoveComponent``1(``0)
      commentId: M:Engine.Core.Object3D.RemoveComponent``1(``0)
      language: CSharp
      name:
        CSharp: RemoveComponent<T>(T)
        VB: RemoveComponent(Of T)(T)
      nameWithType:
        CSharp: Object3D.RemoveComponent<T>(T)
        VB: Object3D.RemoveComponent(Of T)(T)
      qualifiedName:
        CSharp: Engine.Core.Object3D.RemoveComponent<T>(T)
        VB: Engine.Core.Object3D.RemoveComponent(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: RemoveComponent
        path: ''
        startLine: 371
      syntax:
        content:
          CSharp: >-
            public void RemoveComponent<T>(T component)

                where T : Component
          VB: Public Sub RemoveComponent(Of T As Component)(component As T)
        parameters:
        - id: component
          type: '{T}'
        typeParameters:
        - id: T
      overload: Engine.Core.Object3D.RemoveComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.GetComponent``1(``0)
      commentId: M:Engine.Core.Object3D.GetComponent``1(``0)
      language: CSharp
      name:
        CSharp: GetComponent<T>(T)
        VB: GetComponent(Of T)(T)
      nameWithType:
        CSharp: Object3D.GetComponent<T>(T)
        VB: Object3D.GetComponent(Of T)(T)
      qualifiedName:
        CSharp: Engine.Core.Object3D.GetComponent<T>(T)
        VB: Engine.Core.Object3D.GetComponent(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: GetComponent
        path: ''
        startLine: 380
      syntax:
        content:
          CSharp: >-
            public T GetComponent<T>(T component)

                where T : Component
          VB: Public Function GetComponent(Of T As Component)(component As T) As T
        parameters:
        - id: component
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Engine.Core.Object3D.GetComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.GetComponent``1
      commentId: M:Engine.Core.Object3D.GetComponent``1
      language: CSharp
      name:
        CSharp: GetComponent<T>()
        VB: GetComponent(Of T)()
      nameWithType:
        CSharp: Object3D.GetComponent<T>()
        VB: Object3D.GetComponent(Of T)()
      qualifiedName:
        CSharp: Engine.Core.Object3D.GetComponent<T>()
        VB: Engine.Core.Object3D.GetComponent(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: GetComponent
        path: ''
        startLine: 384
      syntax:
        content:
          CSharp: >-
            public T GetComponent<T>()

                where T : Component
          VB: Public Function GetComponent(Of T As Component) As T
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: Engine.Core.Object3D.GetComponent*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.GetComponents``1(``0)
      commentId: M:Engine.Core.Object3D.GetComponents``1(``0)
      language: CSharp
      name:
        CSharp: GetComponents<T>(T)
        VB: GetComponents(Of T)(T)
      nameWithType:
        CSharp: Object3D.GetComponents<T>(T)
        VB: Object3D.GetComponents(Of T)(T)
      qualifiedName:
        CSharp: Engine.Core.Object3D.GetComponents<T>(T)
        VB: Engine.Core.Object3D.GetComponents(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: GetComponents
        path: ''
        startLine: 389
      syntax:
        content:
          CSharp: >-
            public List<T> GetComponents<T>(T component)

                where T : Component
          VB: Public Function GetComponents(Of T As Component)(component As T) As List(Of T)
        parameters:
        - id: component
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: System.Collections.Generic.List{{T}}
      overload: Engine.Core.Object3D.GetComponents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.GetComponents``1
      commentId: M:Engine.Core.Object3D.GetComponents``1
      language: CSharp
      name:
        CSharp: GetComponents<T>()
        VB: GetComponents(Of T)()
      nameWithType:
        CSharp: Object3D.GetComponents<T>()
        VB: Object3D.GetComponents(Of T)()
      qualifiedName:
        CSharp: Engine.Core.Object3D.GetComponents<T>()
        VB: Engine.Core.Object3D.GetComponents(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: GetComponents
        path: ''
        startLine: 394
      syntax:
        content:
          CSharp: >-
            public List<T> GetComponents<T>()

                where T : Component
          VB: Public Function GetComponents(Of T As Component) As List(Of T)
        typeParameters:
        - id: T
        return:
          type: System.Collections.Generic.List{{T}}
      overload: Engine.Core.Object3D.GetComponents*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.FindChild(System.String)
      commentId: M:Engine.Core.Object3D.FindChild(System.String)
      language: CSharp
      name:
        CSharp: FindChild(String)
        VB: FindChild(String)
      nameWithType:
        CSharp: Object3D.FindChild(String)
        VB: Object3D.FindChild(String)
      qualifiedName:
        CSharp: Engine.Core.Object3D.FindChild(System.String)
        VB: Engine.Core.Object3D.FindChild(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: FindChild
        path: ''
        startLine: 404
      summary: "\nFinds and returns the first child found with the inputted <code data-dev-comment-type=\"paramref\" class=\"paramref\">name</code>.\n"
      example: []
      syntax:
        content:
          CSharp: public Object3D FindChild(string name)
          VB: Public Function FindChild(name As String) As Object3D
        parameters:
        - id: name
          type: System.String
          description: ''
        return:
          type: Engine.Core.Object3D
          description: ''
      overload: Engine.Core.Object3D.FindChild*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Object3D.op_Implicit(Engine.Core.Object3D)~LCS3
      commentId: M:Engine.Core.Object3D.op_Implicit(Engine.Core.Object3D)~LCS3
      language: CSharp
      name:
        CSharp: Implicit(Object3D to LCS3)
        VB: Widening(Object3D to LCS3)
      nameWithType:
        CSharp: Object3D.Implicit(Object3D to LCS3)
        VB: Object3D.Widening(Object3D to LCS3)
      qualifiedName:
        CSharp: Engine.Core.Object3D.Implicit(Engine.Core.Object3D to LCS3)
        VB: Engine.Core.Object3D.Widening(Engine.Core.Object3D to LCS3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: op_Implicit
        path: ''
        startLine: 417
      syntax:
        content:
          CSharp: public static implicit operator LCS3(Object3D o)
          VB: Public Shared Widening Operator CType(o As Object3D) As LCS3
        parameters:
        - id: o
          type: Engine.Core.Object3D
        return:
          type: LCS3
      overload: Engine.Core.Object3D.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Particle
    commentId: T:Engine.Core.Particle
    language: CSharp
    name:
      CSharp: Particle
      VB: Particle
    nameWithType:
      CSharp: Particle
      VB: Particle
    qualifiedName:
      CSharp: Engine.Core.Particle
      VB: Engine.Core.Particle
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Particle
      path: ''
      startLine: 433
    syntax:
      content:
        CSharp: public class Particle
        VB: Public Class Particle
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Particle.#ctor(System.Boolean)
      commentId: M:Engine.Core.Particle.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Particle(Boolean)
        VB: Particle(Boolean)
      nameWithType:
        CSharp: Particle.Particle(Boolean)
        VB: Particle.Particle(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Particle.Particle(System.Boolean)
        VB: Engine.Core.Particle.Particle(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 437
      syntax:
        content:
          CSharp: public Particle(bool destroyOnHit = false)
          VB: Public Sub New(destroyOnHit As Boolean = False)
        parameters:
        - id: destroyOnHit
          type: System.Boolean
      overload: Engine.Core.Particle.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Particle.SetPosition(Vector3)
      commentId: M:Engine.Core.Particle.SetPosition(Vector3)
      language: CSharp
      name:
        CSharp: SetPosition(Vector3)
        VB: SetPosition(Vector3)
      nameWithType:
        CSharp: Particle.SetPosition(Vector3)
        VB: Particle.SetPosition(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Particle.SetPosition(Vector3)
        VB: Engine.Core.Particle.SetPosition(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: SetPosition
        path: ''
        startLine: 442
      syntax:
        content:
          CSharp: public void SetPosition(Vector3 newPosition)
          VB: Public Sub SetPosition(newPosition As Vector3)
        parameters:
        - id: newPosition
          type: Vector3
      overload: Engine.Core.Particle.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Particle.CheckPosition
      commentId: M:Engine.Core.Particle.CheckPosition
      language: CSharp
      name:
        CSharp: CheckPosition()
        VB: CheckPosition()
      nameWithType:
        CSharp: Particle.CheckPosition()
        VB: Particle.CheckPosition()
      qualifiedName:
        CSharp: Engine.Core.Particle.CheckPosition()
        VB: Engine.Core.Particle.CheckPosition()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: CheckPosition
        path: ''
        startLine: 448
      syntax:
        content:
          CSharp: public void CheckPosition()
          VB: Public Sub CheckPosition
      overload: Engine.Core.Particle.CheckPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Pixel
    commentId: T:Engine.Core.Pixel
    language: CSharp
    name:
      CSharp: Pixel
      VB: Pixel
    nameWithType:
      CSharp: Pixel
      VB: Pixel
    qualifiedName:
      CSharp: Engine.Core.Pixel
      VB: Engine.Core.Pixel
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Pixel
      path: ''
      startLine: 464
    syntax:
      content:
        CSharp: public struct Pixel
        VB: Public Structure Pixel
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: Engine.Core.Pixel.x
      commentId: F:Engine.Core.Pixel.x
      language: CSharp
      name:
        CSharp: x
        VB: x
      nameWithType:
        CSharp: Pixel.x
        VB: Pixel.x
      qualifiedName:
        CSharp: Engine.Core.Pixel.x
        VB: Engine.Core.Pixel.x
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: x
        path: ''
        startLine: 466
      syntax:
        content:
          CSharp: public float x
          VB: Public x As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Pixel.y
      commentId: F:Engine.Core.Pixel.y
      language: CSharp
      name:
        CSharp: y
        VB: y
      nameWithType:
        CSharp: Pixel.y
        VB: Pixel.y
      qualifiedName:
        CSharp: Engine.Core.Pixel.y
        VB: Engine.Core.Pixel.y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: y
        path: ''
        startLine: 467
      syntax:
        content:
          CSharp: public float y
          VB: Public y As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Pixel.color
      commentId: F:Engine.Core.Pixel.color
      language: CSharp
      name:
        CSharp: color
        VB: color
      nameWithType:
        CSharp: Pixel.color
        VB: Pixel.color
      qualifiedName:
        CSharp: Engine.Core.Pixel.color
        VB: Engine.Core.Pixel.color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: color
        path: ''
        startLine: 469
      syntax:
        content:
          CSharp: public Color color
          VB: Public color As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Ray
    commentId: T:Engine.Core.Ray
    language: CSharp
    name:
      CSharp: Ray
      VB: Ray
    nameWithType:
      CSharp: Ray
      VB: Ray
    qualifiedName:
      CSharp: Engine.Core.Ray
      VB: Engine.Core.Ray
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core
    source:
      id: Ray
      path: ''
      startLine: 482
    syntax:
      content:
        CSharp: public class Ray
        VB: Public Class Ray
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Ray.#ctor(Straight,System.Single)
      commentId: M:Engine.Core.Ray.#ctor(Straight,System.Single)
      language: CSharp
      name:
        CSharp: Ray(Straight, Single)
        VB: Ray(Straight, Single)
      nameWithType:
        CSharp: Ray.Ray(Straight, Single)
        VB: Ray.Ray(Straight, Single)
      qualifiedName:
        CSharp: Engine.Core.Ray.Ray(Straight, System.Single)
        VB: Engine.Core.Ray.Ray(Straight, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 489
      syntax:
        content:
          CSharp: public Ray(Straight ray, float rayStart)
          VB: Public Sub New(ray As Straight, rayStart As Single)
        parameters:
        - id: ray
          type: Straight
        - id: rayStart
          type: System.Single
      overload: Engine.Core.Ray.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Ray.#ctor(Straight,System.Single,System.Single)
      commentId: M:Engine.Core.Ray.#ctor(Straight,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Ray(Straight, Single, Single)
        VB: Ray(Straight, Single, Single)
      nameWithType:
        CSharp: Ray.Ray(Straight, Single, Single)
        VB: Ray.Ray(Straight, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Ray.Ray(Straight, System.Single, System.Single)
        VB: Engine.Core.Ray.Ray(Straight, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: .ctor
        path: ''
        startLine: 495
      syntax:
        content:
          CSharp: public Ray(Straight ray, float rayStart, float samplingRate)
          VB: Public Sub New(ray As Straight, rayStart As Single, samplingRate As Single)
        parameters:
        - id: ray
          type: Straight
        - id: rayStart
          type: System.Single
        - id: samplingRate
          type: System.Single
      overload: Engine.Core.Ray.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Ray.Emit(System.Single)
      commentId: M:Engine.Core.Ray.Emit(System.Single)
      language: CSharp
      name:
        CSharp: Emit(Single)
        VB: Emit(Single)
      nameWithType:
        CSharp: Ray.Emit(Single)
        VB: Ray.Emit(Single)
      qualifiedName:
        CSharp: Engine.Core.Ray.Emit(System.Single)
        VB: Engine.Core.Ray.Emit(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core
      source:
        id: Emit
        path: ''
        startLine: 502
      syntax:
        content:
          CSharp: public Particle Emit(float distance)
          VB: Public Function Emit(distance As Single) As Particle
        parameters:
        - id: distance
          type: System.Single
        return:
          type: Engine.Core.Particle
      overload: Engine.Core.Ray.Emit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Engine.Core.Components
  commentId: N:Engine.Core.Components
  language: CSharp
  name:
    CSharp: Engine.Core.Components
    VB: Engine.Core.Components
  nameWithType:
    CSharp: Engine.Core.Components
    VB: Engine.Core.Components
  qualifiedName:
    CSharp: Engine.Core.Components
    VB: Engine.Core.Components
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.Components.Camera
    commentId: T:Engine.Core.Components.Camera
    language: CSharp
    name:
      CSharp: Camera
      VB: Camera
    nameWithType:
      CSharp: Camera
      VB: Camera
    qualifiedName:
      CSharp: Engine.Core.Components.Camera
      VB: Engine.Core.Components.Camera
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: Camera
      path: ''
      startLine: 528
    syntax:
      content:
        CSharp: 'public class Camera : Component'
        VB: >-
          Public Class Camera

              Inherits Component
    inheritance:
    - System.Object
    - Engine.Core.Component
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Camera.NearPlaneDistance
      commentId: P:Engine.Core.Components.Camera.NearPlaneDistance
      language: CSharp
      name:
        CSharp: NearPlaneDistance
        VB: NearPlaneDistance
      nameWithType:
        CSharp: Camera.NearPlaneDistance
        VB: Camera.NearPlaneDistance
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.NearPlaneDistance
        VB: Engine.Core.Components.Camera.NearPlaneDistance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: NearPlaneDistance
        path: ''
        startLine: 539
      syntax:
        content:
          CSharp: public float NearPlaneDistance { get; set; }
          VB: Public Property NearPlaneDistance As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Components.Camera.NearPlaneDistance*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.Camera.FarPlaneDistance
      commentId: P:Engine.Core.Components.Camera.FarPlaneDistance
      language: CSharp
      name:
        CSharp: FarPlaneDistance
        VB: FarPlaneDistance
      nameWithType:
        CSharp: Camera.FarPlaneDistance
        VB: Camera.FarPlaneDistance
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.FarPlaneDistance
        VB: Engine.Core.Components.Camera.FarPlaneDistance
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FarPlaneDistance
        path: ''
        startLine: 544
      syntax:
        content:
          CSharp: public float FarPlaneDistance { get; set; }
          VB: Public Property FarPlaneDistance As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Components.Camera.FarPlaneDistance*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.Camera.NearPlane
      commentId: P:Engine.Core.Components.Camera.NearPlane
      language: CSharp
      name:
        CSharp: NearPlane
        VB: NearPlane
      nameWithType:
        CSharp: Camera.NearPlane
        VB: Camera.NearPlane
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.NearPlane
        VB: Engine.Core.Components.Camera.NearPlane
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: NearPlane
        path: ''
        startLine: 549
      syntax:
        content:
          CSharp: public Camera.CameraPlane NearPlane { get; }
          VB: Public ReadOnly Property NearPlane As Camera.CameraPlane
        parameters: []
        return:
          type: Engine.Core.Components.Camera.CameraPlane
      overload: Engine.Core.Components.Camera.NearPlane*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.FarPlane
      commentId: P:Engine.Core.Components.Camera.FarPlane
      language: CSharp
      name:
        CSharp: FarPlane
        VB: FarPlane
      nameWithType:
        CSharp: Camera.FarPlane
        VB: Camera.FarPlane
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.FarPlane
        VB: Engine.Core.Components.Camera.FarPlane
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FarPlane
        path: ''
        startLine: 550
      syntax:
        content:
          CSharp: public Camera.CameraPlane FarPlane { get; }
          VB: Public ReadOnly Property FarPlane As Camera.CameraPlane
        parameters: []
        return:
          type: Engine.Core.Components.Camera.CameraPlane
      overload: Engine.Core.Components.Camera.FarPlane*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.ImagePlane
      commentId: P:Engine.Core.Components.Camera.ImagePlane
      language: CSharp
      name:
        CSharp: ImagePlane
        VB: ImagePlane
      nameWithType:
        CSharp: Camera.ImagePlane
        VB: Camera.ImagePlane
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.ImagePlane
        VB: Engine.Core.Components.Camera.ImagePlane
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: ImagePlane
        path: ''
        startLine: 551
      syntax:
        content:
          CSharp: public Camera.CameraPlane ImagePlane { get; }
          VB: Public ReadOnly Property ImagePlane As Camera.CameraPlane
        parameters: []
        return:
          type: Engine.Core.Components.Camera.CameraPlane
      overload: Engine.Core.Components.Camera.ImagePlane*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.#ctor(Engine.Core.Object3D,System.Single,System.Single)
      commentId: M:Engine.Core.Components.Camera.#ctor(Engine.Core.Object3D,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Camera(Object3D, Single, Single)
        VB: Camera(Object3D, Single, Single)
      nameWithType:
        CSharp: Camera.Camera(Object3D, Single, Single)
        VB: Camera.Camera(Object3D, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.Camera(Engine.Core.Object3D, System.Single, System.Single)
        VB: Engine.Core.Components.Camera.Camera(Engine.Core.Object3D, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 553
      syntax:
        content:
          CSharp: public Camera(Object3D dependency, float distanceToNearPlane = 0.25F, float distanceToFarPlane = 1000F)
          VB: Public Sub New(dependency As Object3D, distanceToNearPlane As Single = 0.25F, distanceToFarPlane As Single = 1000F)
        parameters:
        - id: dependency
          type: Engine.Core.Object3D
        - id: distanceToNearPlane
          type: System.Single
        - id: distanceToFarPlane
          type: System.Single
      overload: Engine.Core.Components.Camera.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Camera.RenderPoint(System.Single,System.Single)
      commentId: M:Engine.Core.Components.Camera.RenderPoint(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: RenderPoint(Single, Single)
        VB: RenderPoint(Single, Single)
      nameWithType:
        CSharp: Camera.RenderPoint(Single, Single)
        VB: Camera.RenderPoint(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.RenderPoint(System.Single, System.Single)
        VB: Engine.Core.Components.Camera.RenderPoint(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: RenderPoint
        path: ''
        startLine: 564
      syntax:
        content:
          CSharp: public Pixel RenderPoint(float ds, float dt)
          VB: Public Function RenderPoint(ds As Single, dt As Single) As Pixel
        parameters:
        - id: ds
          type: System.Single
        - id: dt
          type: System.Single
        return:
          type: Engine.Core.Pixel
      overload: Engine.Core.Components.Camera.RenderPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Camera.AnyLightSource(System.Collections.Generic.List{LightSource}@)
      commentId: M:Engine.Core.Components.Camera.AnyLightSource(System.Collections.Generic.List{LightSource}@)
      language: CSharp
      name:
        CSharp: AnyLightSource(out List<LightSource>)
        VB: AnyLightSource(ByRef List(Of LightSource))
      nameWithType:
        CSharp: Camera.AnyLightSource(out List<LightSource>)
        VB: Camera.AnyLightSource(ByRef List(Of LightSource))
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.AnyLightSource(out System.Collections.Generic.List<LightSource>)
        VB: Engine.Core.Components.Camera.AnyLightSource(ByRef System.Collections.Generic.List(Of LightSource))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AnyLightSource
        path: ''
        startLine: 739
      summary: "\nTrue if any light source affects the scene part that is rendered.\nOutputs all light sources that affect the scene.\n"
      example: []
      syntax:
        content:
          CSharp: >-
            [Obsolete("Not implemented")]

            public bool AnyLightSource(out List<LightSource> lightSources)
          VB: >-
            <Obsolete("Not implemented")>

            Public Function AnyLightSource(ByRef lightSources As List(Of LightSource)) As Boolean
        parameters:
        - id: lightSources
          type: System.Collections.Generic.List{LightSource}
        return:
          type: System.Boolean
          description: ''
      overload: Engine.Core.Components.Camera.AnyLightSource*
      attributes:
      - type: System.ObsoleteAttribute
        ctor: System.ObsoleteAttribute.#ctor(System.String)
        arguments:
        - type: System.String
          value: Not implemented
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Components.Camera.CameraPlane
    commentId: T:Engine.Core.Components.Camera.CameraPlane
    language: CSharp
    name:
      CSharp: Camera.CameraPlane
      VB: Camera.CameraPlane
    nameWithType:
      CSharp: Camera.CameraPlane
      VB: Camera.CameraPlane
    qualifiedName:
      CSharp: Engine.Core.Components.Camera.CameraPlane
      VB: Engine.Core.Components.Camera.CameraPlane
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: CameraPlane
      path: ''
      startLine: 581
    syntax:
      content:
        CSharp: public class CameraPlane
        VB: Public Class CameraPlane
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Camera.CameraPlane.plane
      commentId: P:Engine.Core.Components.Camera.CameraPlane.plane
      language: CSharp
      name:
        CSharp: plane
        VB: plane
      nameWithType:
        CSharp: Camera.CameraPlane.plane
        VB: Camera.CameraPlane.plane
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.plane
        VB: Engine.Core.Components.Camera.CameraPlane.plane
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: plane
        path: ''
        startLine: 590
      syntax:
        content:
          CSharp: public Plane plane { get; }
          VB: Public ReadOnly Property plane As Plane
        parameters: []
        return:
          type: Plane
      overload: Engine.Core.Components.Camera.CameraPlane.plane*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.GlobalVertical
      commentId: P:Engine.Core.Components.Camera.CameraPlane.GlobalVertical
      language: CSharp
      name:
        CSharp: GlobalVertical
        VB: GlobalVertical
      nameWithType:
        CSharp: Camera.CameraPlane.GlobalVertical
        VB: Camera.CameraPlane.GlobalVertical
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.GlobalVertical
        VB: Engine.Core.Components.Camera.CameraPlane.GlobalVertical
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalVertical
        path: ''
        startLine: 591
      syntax:
        content:
          CSharp: public Vector3 GlobalVertical { get; }
          VB: Public ReadOnly Property GlobalVertical As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Camera.CameraPlane.GlobalVertical*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
      commentId: P:Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
      language: CSharp
      name:
        CSharp: GlobalHorizontal
        VB: GlobalHorizontal
      nameWithType:
        CSharp: Camera.CameraPlane.GlobalHorizontal
        VB: Camera.CameraPlane.GlobalHorizontal
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
        VB: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalHorizontal
        path: ''
        startLine: 592
      syntax:
        content:
          CSharp: public Vector3 GlobalHorizontal { get; }
          VB: Public ReadOnly Property GlobalHorizontal As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.Normal
      commentId: P:Engine.Core.Components.Camera.CameraPlane.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: Camera.CameraPlane.Normal
        VB: Camera.CameraPlane.Normal
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.Normal
        VB: Engine.Core.Components.Camera.CameraPlane.Normal
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Normal
        path: ''
        startLine: 593
      syntax:
        content:
          CSharp: public Vector3 Normal { get; }
          VB: Public ReadOnly Property Normal As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Camera.CameraPlane.Normal*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.BoundaryS
      commentId: P:Engine.Core.Components.Camera.CameraPlane.BoundaryS
      language: CSharp
      name:
        CSharp: BoundaryS
        VB: BoundaryS
      nameWithType:
        CSharp: Camera.CameraPlane.BoundaryS
        VB: Camera.CameraPlane.BoundaryS
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.BoundaryS
        VB: Engine.Core.Components.Camera.CameraPlane.BoundaryS
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: BoundaryS
        path: ''
        startLine: 598
      syntax:
        content:
          CSharp: public float[] BoundaryS { get; }
          VB: Public ReadOnly Property BoundaryS As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: Engine.Core.Components.Camera.CameraPlane.BoundaryS*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.BoundaryT
      commentId: P:Engine.Core.Components.Camera.CameraPlane.BoundaryT
      language: CSharp
      name:
        CSharp: BoundaryT
        VB: BoundaryT
      nameWithType:
        CSharp: Camera.CameraPlane.BoundaryT
        VB: Camera.CameraPlane.BoundaryT
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.BoundaryT
        VB: Engine.Core.Components.Camera.CameraPlane.BoundaryT
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: BoundaryT
        path: ''
        startLine: 599
      syntax:
        content:
          CSharp: public float[] BoundaryT { get; }
          VB: Public ReadOnly Property BoundaryT As Single()
        parameters: []
        return:
          type: System.Single[]
      overload: Engine.Core.Components.Camera.CameraPlane.BoundaryT*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Camera.CameraPlane.#ctor(System.Single,Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Camera.CameraPlane.#ctor(System.Single,Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: CameraPlane(Single, Object3D)
        VB: CameraPlane(Single, Object3D)
      nameWithType:
        CSharp: Camera.CameraPlane.CameraPlane(Single, Object3D)
        VB: Camera.CameraPlane.CameraPlane(Single, Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.CameraPlane(System.Single, Engine.Core.Object3D)
        VB: Engine.Core.Components.Camera.CameraPlane.CameraPlane(System.Single, Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 601
      syntax:
        content:
          CSharp: public CameraPlane(float distance, Object3D dependency)
          VB: Public Sub New(distance As Single, dependency As Object3D)
        parameters:
        - id: distance
          type: System.Single
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Camera.CameraPlane.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Camera.CameraPlane.GetPoint(System.Single,System.Single)
      commentId: M:Engine.Core.Components.Camera.CameraPlane.GetPoint(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetPoint(Single, Single)
        VB: GetPoint(Single, Single)
      nameWithType:
        CSharp: Camera.CameraPlane.GetPoint(Single, Single)
        VB: Camera.CameraPlane.GetPoint(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Components.Camera.CameraPlane.GetPoint(System.Single, System.Single)
        VB: Engine.Core.Components.Camera.CameraPlane.GetPoint(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetPoint
        path: ''
        startLine: 723
      syntax:
        content:
          CSharp: public Vector3 GetPoint(float s, float t)
          VB: Public Function GetPoint(s As Single, t As Single) As Vector3
        parameters:
        - id: s
          type: System.Single
        - id: t
          type: System.Single
        return:
          type: Vector3
      overload: Engine.Core.Components.Camera.CameraPlane.GetPoint*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Components.Edge
    commentId: T:Engine.Core.Components.Edge
    language: CSharp
    name:
      CSharp: Edge
      VB: Edge
    nameWithType:
      CSharp: Edge
      VB: Edge
    qualifiedName:
      CSharp: Engine.Core.Components.Edge
      VB: Engine.Core.Components.Edge
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: Edge
      path: ''
      startLine: 758
    syntax:
      content:
        CSharp: 'public class Edge : Component'
        VB: >-
          Public Class Edge

              Inherits Component
    inheritance:
    - System.Object
    - Engine.Core.Component
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Edge.A
      commentId: F:Engine.Core.Components.Edge.A
      language: CSharp
      name:
        CSharp: A
        VB: A
      nameWithType:
        CSharp: Edge.A
        VB: Edge.A
      qualifiedName:
        CSharp: Engine.Core.Components.Edge.A
        VB: Engine.Core.Components.Edge.A
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: A
        path: ''
        startLine: 760
      syntax:
        content:
          CSharp: public Vertex A
          VB: Public A As Vertex
        return:
          type: Engine.Core.Components.Vertex
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Edge.B
      commentId: F:Engine.Core.Components.Edge.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: Edge.B
        VB: Edge.B
      qualifiedName:
        CSharp: Engine.Core.Components.Edge.B
        VB: Engine.Core.Components.Edge.B
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: B
        path: ''
        startLine: 761
      syntax:
        content:
          CSharp: public Vertex B
          VB: Public B As Vertex
        return:
          type: Engine.Core.Components.Vertex
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Edge.#ctor(Engine.Core.Components.Vertex,Engine.Core.Components.Vertex,Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Edge.#ctor(Engine.Core.Components.Vertex,Engine.Core.Components.Vertex,Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Edge(Vertex, Vertex, Object3D)
        VB: Edge(Vertex, Vertex, Object3D)
      nameWithType:
        CSharp: Edge.Edge(Vertex, Vertex, Object3D)
        VB: Edge.Edge(Vertex, Vertex, Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Edge.Edge(Engine.Core.Components.Vertex, Engine.Core.Components.Vertex, Engine.Core.Object3D)
        VB: Engine.Core.Components.Edge.Edge(Engine.Core.Components.Vertex, Engine.Core.Components.Vertex, Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 765
      syntax:
        content:
          CSharp: public Edge(Vertex A, Vertex B, Object3D dependency)
          VB: Public Sub New(A As Vertex, B As Vertex, dependency As Object3D)
        parameters:
        - id: A
          type: Engine.Core.Components.Vertex
        - id: B
          type: Engine.Core.Components.Vertex
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Edge.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Edge.GetVertexOnEdge(System.Single)
      commentId: M:Engine.Core.Components.Edge.GetVertexOnEdge(System.Single)
      language: CSharp
      name:
        CSharp: GetVertexOnEdge(Single)
        VB: GetVertexOnEdge(Single)
      nameWithType:
        CSharp: Edge.GetVertexOnEdge(Single)
        VB: Edge.GetVertexOnEdge(Single)
      qualifiedName:
        CSharp: Engine.Core.Components.Edge.GetVertexOnEdge(System.Single)
        VB: Engine.Core.Components.Edge.GetVertexOnEdge(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetVertexOnEdge
        path: ''
        startLine: 777
      summary: "\nGets a position vector on the edge\nt needs to be a value between 0 and 1\n"
      example: []
      syntax:
        content:
          CSharp: public Vertex GetVertexOnEdge(float t)
          VB: Public Function GetVertexOnEdge(t As Single) As Vertex
        parameters:
        - id: t
          type: System.Single
          description: ''
        return:
          type: Engine.Core.Components.Vertex
          description: Returns a <xref href="Engine.Core.Components.Vertex" data-throw-if-not-resolved="false"></xref>.
      overload: Engine.Core.Components.Edge.GetVertexOnEdge*
      exceptions:
      - type: System.ArgumentOutOfRangeException
        commentId: T:System.ArgumentOutOfRangeException
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        Engine.Core.Components.Vertex: 
        System.ArgumentOutOfRangeException: 
  - id: Engine.Core.Components.Face
    commentId: T:Engine.Core.Components.Face
    language: CSharp
    name:
      CSharp: Face
      VB: Face
    nameWithType:
      CSharp: Face
      VB: Face
    qualifiedName:
      CSharp: Engine.Core.Components.Face
      VB: Engine.Core.Components.Face
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: Face
      path: ''
      startLine: 797
    syntax:
      content:
        CSharp: 'public class Face : Component'
        VB: >-
          Public Class Face

              Inherits Component
    inheritance:
    - System.Object
    - Engine.Core.Component
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Face.NormalVector
      commentId: P:Engine.Core.Components.Face.NormalVector
      language: CSharp
      name:
        CSharp: NormalVector
        VB: NormalVector
      nameWithType:
        CSharp: Face.NormalVector
        VB: Face.NormalVector
      qualifiedName:
        CSharp: Engine.Core.Components.Face.NormalVector
        VB: Engine.Core.Components.Face.NormalVector
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: NormalVector
        path: ''
        startLine: 804
      syntax:
        content:
          CSharp: public Vector3 NormalVector { get; }
          VB: Public ReadOnly Property NormalVector As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Face.NormalVector*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Face.#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Face.#ctor(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[],Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Face(Vertex[], Edge[], Object3D)
        VB: Face(Vertex(), Edge(), Object3D)
      nameWithType:
        CSharp: Face.Face(Vertex[], Edge[], Object3D)
        VB: Face.Face(Vertex(), Edge(), Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Face.Face(Engine.Core.Components.Vertex[], Engine.Core.Components.Edge[], Engine.Core.Object3D)
        VB: Engine.Core.Components.Face.Face(Engine.Core.Components.Vertex(), Engine.Core.Components.Edge(), Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 806
      syntax:
        content:
          CSharp: public Face(Vertex[] vertices, Edge[] edges, Object3D dependency)
          VB: Public Sub New(vertices As Vertex(), edges As Edge(), dependency As Object3D)
        parameters:
        - id: vertices
          type: Engine.Core.Components.Vertex[]
        - id: edges
          type: Engine.Core.Components.Edge[]
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Face.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Face.GetVertexOnFace(System.Single,System.Single)
      commentId: M:Engine.Core.Components.Face.GetVertexOnFace(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetVertexOnFace(Single, Single)
        VB: GetVertexOnFace(Single, Single)
      nameWithType:
        CSharp: Face.GetVertexOnFace(Single, Single)
        VB: Face.GetVertexOnFace(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Components.Face.GetVertexOnFace(System.Single, System.Single)
        VB: Engine.Core.Components.Face.GetVertexOnFace(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetVertexOnFace
        path: ''
        startLine: 814
      syntax:
        content:
          CSharp: public Vertex GetVertexOnFace(float s, float t)
          VB: Public Function GetVertexOnFace(s As Single, t As Single) As Vertex
        parameters:
        - id: s
          type: System.Single
        - id: t
          type: System.Single
        return:
          type: Engine.Core.Components.Vertex
      overload: Engine.Core.Components.Face.GetVertexOnFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
      commentId: M:Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
      language: CSharp
      name:
        CSharp: SetFace(Vertex[], Edge[])
        VB: SetFace(Vertex(), Edge())
      nameWithType:
        CSharp: Face.SetFace(Vertex[], Edge[])
        VB: Face.SetFace(Vertex(), Edge())
      qualifiedName:
        CSharp: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex[], Engine.Core.Components.Edge[])
        VB: Engine.Core.Components.Face.SetFace(Engine.Core.Components.Vertex(), Engine.Core.Components.Edge())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: SetFace
        path: ''
        startLine: 830
      summary: "\nSetups the face and returns if the operation was successfull\n"
      example: []
      syntax:
        content:
          CSharp: public bool SetFace(Vertex[] vertices, Edge[] edges)
          VB: Public Function SetFace(vertices As Vertex(), edges As Edge()) As Boolean
        parameters:
        - id: vertices
          type: Engine.Core.Components.Vertex[]
          description: ''
        - id: edges
          type: Engine.Core.Components.Edge[]
          description: ''
        return:
          type: System.Boolean
          description: Returns true if the face is set correctly
      overload: Engine.Core.Components.Face.SetFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Components.LCS3
    commentId: T:Engine.Core.Components.LCS3
    language: CSharp
    name:
      CSharp: LCS3
      VB: LCS3
    nameWithType:
      CSharp: LCS3
      VB: LCS3
    qualifiedName:
      CSharp: Engine.Core.Components.LCS3
      VB: Engine.Core.Components.LCS3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: LCS3
      path: ''
      startLine: 889
    syntax:
      content:
        CSharp: 'public class LCS3 : Component, IEnumerable<LCS3>, IEnumerable, IEnumerator<LCS3>, IEnumerator, IDisposable'
        VB: >-
          Public Class LCS3

              Inherits Component

              Implements IEnumerable(Of LCS3), IEnumerable, IEnumerator(Of LCS3), IEnumerator, IDisposable
    inheritance:
    - System.Object
    - Engine.Core.Component
    implements:
    - System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}
    - System.Collections.IEnumerable
    - System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}
    - System.Collections.IEnumerator
    - System.IDisposable
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.LCS3.axis
      commentId: F:Engine.Core.Components.LCS3.axis
      language: CSharp
      name:
        CSharp: axis
        VB: axis
      nameWithType:
        CSharp: LCS3.axis
        VB: LCS3.axis
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.axis
        VB: Engine.Core.Components.LCS3.axis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: axis
        path: ''
        startLine: 891
      syntax:
        content:
          CSharp: public readonly Straight[] axis
          VB: Public ReadOnly axis As Straight()
        return:
          type: Straight[]
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.LCS3.Current
      commentId: P:Engine.Core.Components.LCS3.Current
      language: CSharp
      name:
        CSharp: Current
        VB: Current
      nameWithType:
        CSharp: LCS3.Current
        VB: LCS3.Current
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.Current
        VB: Engine.Core.Components.LCS3.Current
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Current
        path: ''
        startLine: 893
      syntax:
        content:
          CSharp: public LCS3 Current { get; }
          VB: Public ReadOnly Property Current As LCS3
        parameters: []
        return:
          type: Engine.Core.Components.LCS3
      overload: Engine.Core.Components.LCS3.Current*
      implements:
      - System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}.Current
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.LCS3.GlobalPosition
      commentId: P:Engine.Core.Components.LCS3.GlobalPosition
      language: CSharp
      name:
        CSharp: GlobalPosition
        VB: GlobalPosition
      nameWithType:
        CSharp: LCS3.GlobalPosition
        VB: LCS3.GlobalPosition
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.GlobalPosition
        VB: Engine.Core.Components.LCS3.GlobalPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalPosition
        path: ''
        startLine: 910
      syntax:
        content:
          CSharp: public Vector3 GlobalPosition { get; set; }
          VB: Public Property GlobalPosition As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.LCS3.GlobalPosition*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.GlobalRotation
      commentId: P:Engine.Core.Components.LCS3.GlobalRotation
      language: CSharp
      name:
        CSharp: GlobalRotation
        VB: GlobalRotation
      nameWithType:
        CSharp: LCS3.GlobalRotation
        VB: LCS3.GlobalRotation
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.GlobalRotation
        VB: Engine.Core.Components.LCS3.GlobalRotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalRotation
        path: ''
        startLine: 911
      syntax:
        content:
          CSharp: public RotationVector3 GlobalRotation { get; set; }
          VB: Public Property GlobalRotation As RotationVector3
        parameters: []
        return:
          type: RotationVector3
      overload: Engine.Core.Components.LCS3.GlobalRotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.GlobalScale
      commentId: P:Engine.Core.Components.LCS3.GlobalScale
      language: CSharp
      name:
        CSharp: GlobalScale
        VB: GlobalScale
      nameWithType:
        CSharp: LCS3.GlobalScale
        VB: LCS3.GlobalScale
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.GlobalScale
        VB: Engine.Core.Components.LCS3.GlobalScale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalScale
        path: ''
        startLine: 912
      syntax:
        content:
          CSharp: public Vector3 GlobalScale { get; set; }
          VB: Public Property GlobalScale As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.LCS3.GlobalScale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.LocalPosition
      commentId: P:Engine.Core.Components.LCS3.LocalPosition
      language: CSharp
      name:
        CSharp: LocalPosition
        VB: LocalPosition
      nameWithType:
        CSharp: LCS3.LocalPosition
        VB: LCS3.LocalPosition
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.LocalPosition
        VB: Engine.Core.Components.LCS3.LocalPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: LocalPosition
        path: ''
        startLine: 913
      syntax:
        content:
          CSharp: public Vector3 LocalPosition { get; set; }
          VB: Public Property LocalPosition As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.LCS3.LocalPosition*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.LocalRotation
      commentId: P:Engine.Core.Components.LCS3.LocalRotation
      language: CSharp
      name:
        CSharp: LocalRotation
        VB: LocalRotation
      nameWithType:
        CSharp: LCS3.LocalRotation
        VB: LCS3.LocalRotation
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.LocalRotation
        VB: Engine.Core.Components.LCS3.LocalRotation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: LocalRotation
        path: ''
        startLine: 914
      syntax:
        content:
          CSharp: public RotationVector3 LocalRotation { get; set; }
          VB: Public Property LocalRotation As RotationVector3
        parameters: []
        return:
          type: RotationVector3
      overload: Engine.Core.Components.LCS3.LocalRotation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.LocalScale
      commentId: P:Engine.Core.Components.LCS3.LocalScale
      language: CSharp
      name:
        CSharp: LocalScale
        VB: LocalScale
      nameWithType:
        CSharp: LCS3.LocalScale
        VB: LCS3.LocalScale
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.LocalScale
        VB: Engine.Core.Components.LCS3.LocalScale
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: LocalScale
        path: ''
        startLine: 915
      syntax:
        content:
          CSharp: public Vector3 LocalScale { get; set; }
          VB: Public Property LocalScale As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.LCS3.LocalScale*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.children
      commentId: F:Engine.Core.Components.LCS3.children
      language: CSharp
      name:
        CSharp: children
        VB: children
      nameWithType:
        CSharp: LCS3.children
        VB: LCS3.children
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.children
        VB: Engine.Core.Components.LCS3.children
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: children
        path: ''
        startLine: 924
      syntax:
        content:
          CSharp: protected List<LCS3> children
          VB: Protected children As List(Of LCS3)
        return:
          type: System.Collections.Generic.List{Engine.Core.Components.LCS3}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: Engine.Core.Components.LCS3.#ctor(Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.LCS3.#ctor(Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: LCS3(Object3D)
        VB: LCS3(Object3D)
      nameWithType:
        CSharp: LCS3.LCS3(Object3D)
        VB: LCS3.LCS3(Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.LCS3(Engine.Core.Object3D)
        VB: Engine.Core.Components.LCS3.LCS3(Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 928
      syntax:
        content:
          CSharp: public LCS3(Object3D dependency)
          VB: Public Sub New(dependency As Object3D)
        parameters:
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.LCS3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.CalculateGlobals
      commentId: M:Engine.Core.Components.LCS3.CalculateGlobals
      language: CSharp
      name:
        CSharp: CalculateGlobals()
        VB: CalculateGlobals()
      nameWithType:
        CSharp: LCS3.CalculateGlobals()
        VB: LCS3.CalculateGlobals()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.CalculateGlobals()
        VB: Engine.Core.Components.LCS3.CalculateGlobals()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: CalculateGlobals
        path: ''
        startLine: 938
      syntax:
        content:
          CSharp: public void CalculateGlobals()
          VB: Public Sub CalculateGlobals
      overload: Engine.Core.Components.LCS3.CalculateGlobals*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.GetChilds
      commentId: M:Engine.Core.Components.LCS3.GetChilds
      language: CSharp
      name:
        CSharp: GetChilds()
        VB: GetChilds()
      nameWithType:
        CSharp: LCS3.GetChilds()
        VB: LCS3.GetChilds()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.GetChilds()
        VB: Engine.Core.Components.LCS3.GetChilds()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetChilds
        path: ''
        startLine: 942
      syntax:
        content:
          CSharp: public List<LCS3> GetChilds()
          VB: Public Function GetChilds As List(Of LCS3)
        return:
          type: System.Collections.Generic.List{Engine.Core.Components.LCS3}
      overload: Engine.Core.Components.LCS3.GetChilds*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors
      commentId: M:Engine.Core.Components.LCS3.AxisToGlobalUnitVectors
      language: CSharp
      name:
        CSharp: AxisToGlobalUnitVectors()
        VB: AxisToGlobalUnitVectors()
      nameWithType:
        CSharp: LCS3.AxisToGlobalUnitVectors()
        VB: LCS3.AxisToGlobalUnitVectors()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors()
        VB: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AxisToGlobalUnitVectors
        path: ''
        startLine: 956
      syntax:
        content:
          CSharp: public Vector3[] AxisToGlobalUnitVectors()
          VB: Public Function AxisToGlobalUnitVectors As Vector3()
        return:
          type: Vector3[]
      overload: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.GetEnumerator
      commentId: M:Engine.Core.Components.LCS3.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: LCS3.GetEnumerator()
        VB: LCS3.GetEnumerator()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.GetEnumerator()
        VB: Engine.Core.Components.LCS3.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetEnumerator
        path: ''
        startLine: 980
      syntax:
        content:
          CSharp: public IEnumerator<LCS3> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of LCS3)
        return:
          type: System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}
      overload: Engine.Core.Components.LCS3.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.MoveNext
      commentId: M:Engine.Core.Components.LCS3.MoveNext
      language: CSharp
      name:
        CSharp: MoveNext()
        VB: MoveNext()
      nameWithType:
        CSharp: LCS3.MoveNext()
        VB: LCS3.MoveNext()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.MoveNext()
        VB: Engine.Core.Components.LCS3.MoveNext()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: MoveNext
        path: ''
        startLine: 989
      syntax:
        content:
          CSharp: public bool MoveNext()
          VB: Public Function MoveNext As Boolean
        return:
          type: System.Boolean
      overload: Engine.Core.Components.LCS3.MoveNext*
      implements:
      - System.Collections.IEnumerator.MoveNext
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.Reset
      commentId: M:Engine.Core.Components.LCS3.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: LCS3.Reset()
        VB: LCS3.Reset()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.Reset()
        VB: Engine.Core.Components.LCS3.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Reset
        path: ''
        startLine: 995
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: Engine.Core.Components.LCS3.Reset*
      implements:
      - System.Collections.IEnumerator.Reset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.Dispose(System.Boolean)
      commentId: M:Engine.Core.Components.LCS3.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: LCS3.Dispose(Boolean)
        VB: LCS3.Dispose(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.Dispose(System.Boolean)
        VB: Engine.Core.Components.LCS3.Dispose(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Dispose
        path: ''
        startLine: 1001
      syntax:
        content:
          CSharp: protected virtual void Dispose(bool disposing)
          VB: Protected Overridable Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
      overload: Engine.Core.Components.LCS3.Dispose*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Engine.Core.Components.LCS3.Dispose
      commentId: M:Engine.Core.Components.LCS3.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: LCS3.Dispose()
        VB: LCS3.Dispose()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.Dispose()
        VB: Engine.Core.Components.LCS3.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Dispose
        path: ''
        startLine: 1017
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Engine.Core.Components.LCS3.Dispose*
      implements:
      - System.IDisposable.Dispose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.LCS3.Finalize
      commentId: M:Engine.Core.Components.LCS3.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: LCS3.Finalize()
        VB: LCS3.Finalize()
      qualifiedName:
        CSharp: Engine.Core.Components.LCS3.Finalize()
        VB: Engine.Core.Components.LCS3.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: Finalize
        path: ''
        startLine: 1024
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: Engine.Core.Components.LCS3.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Engine.Core.Components.Mesh
    commentId: T:Engine.Core.Components.Mesh
    language: CSharp
    name:
      CSharp: Mesh
      VB: Mesh
    nameWithType:
      CSharp: Mesh
      VB: Mesh
    qualifiedName:
      CSharp: Engine.Core.Components.Mesh
      VB: Engine.Core.Components.Mesh
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: Mesh
      path: ''
      startLine: 1039
    syntax:
      content:
        CSharp: 'public class Mesh : Component'
        VB: >-
          Public Class Mesh

              Inherits Component
    inheritance:
    - System.Object
    - Engine.Core.Component
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Mesh.VerticesCount
      commentId: P:Engine.Core.Components.Mesh.VerticesCount
      language: CSharp
      name:
        CSharp: VerticesCount
        VB: VerticesCount
      nameWithType:
        CSharp: Mesh.VerticesCount
        VB: Mesh.VerticesCount
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.VerticesCount
        VB: Engine.Core.Components.Mesh.VerticesCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: VerticesCount
        path: ''
        startLine: 1046
      syntax:
        content:
          CSharp: public int VerticesCount { get; }
          VB: Public ReadOnly Property VerticesCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.VerticesCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Mesh.EdgesCount
      commentId: P:Engine.Core.Components.Mesh.EdgesCount
      language: CSharp
      name:
        CSharp: EdgesCount
        VB: EdgesCount
      nameWithType:
        CSharp: Mesh.EdgesCount
        VB: Mesh.EdgesCount
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.EdgesCount
        VB: Engine.Core.Components.Mesh.EdgesCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: EdgesCount
        path: ''
        startLine: 1047
      syntax:
        content:
          CSharp: public int EdgesCount { get; }
          VB: Public ReadOnly Property EdgesCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.EdgesCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Mesh.FacesCount
      commentId: P:Engine.Core.Components.Mesh.FacesCount
      language: CSharp
      name:
        CSharp: FacesCount
        VB: FacesCount
      nameWithType:
        CSharp: Mesh.FacesCount
        VB: Mesh.FacesCount
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FacesCount
        VB: Engine.Core.Components.Mesh.FacesCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FacesCount
        path: ''
        startLine: 1048
      syntax:
        content:
          CSharp: public int FacesCount { get; }
          VB: Public ReadOnly Property FacesCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.FacesCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Mesh.#ctor(Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Mesh.#ctor(Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Mesh(Object3D)
        VB: Mesh(Object3D)
      nameWithType:
        CSharp: Mesh.Mesh(Object3D)
        VB: Mesh.Mesh(Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.Mesh(Engine.Core.Object3D)
        VB: Engine.Core.Components.Mesh.Mesh(Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 1050
      syntax:
        content:
          CSharp: public Mesh(Object3D dependency)
          VB: Public Sub New(dependency As Object3D)
        parameters:
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Mesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.#ctor(System.Collections.Generic.List{Engine.Core.Components.Vertex},System.Collections.Generic.List{Engine.Core.Components.Edge},System.Collections.Generic.List{Engine.Core.Components.Face},Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Mesh.#ctor(System.Collections.Generic.List{Engine.Core.Components.Vertex},System.Collections.Generic.List{Engine.Core.Components.Edge},System.Collections.Generic.List{Engine.Core.Components.Face},Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Mesh(List<Vertex>, List<Edge>, List<Face>, Object3D)
        VB: Mesh(List(Of Vertex), List(Of Edge), List(Of Face), Object3D)
      nameWithType:
        CSharp: Mesh.Mesh(List<Vertex>, List<Edge>, List<Face>, Object3D)
        VB: Mesh.Mesh(List(Of Vertex), List(Of Edge), List(Of Face), Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.Mesh(System.Collections.Generic.List<Engine.Core.Components.Vertex>, System.Collections.Generic.List<Engine.Core.Components.Edge>, System.Collections.Generic.List<Engine.Core.Components.Face>, Engine.Core.Object3D)
        VB: Engine.Core.Components.Mesh.Mesh(System.Collections.Generic.List(Of Engine.Core.Components.Vertex), System.Collections.Generic.List(Of Engine.Core.Components.Edge), System.Collections.Generic.List(Of Engine.Core.Components.Face), Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 1057
      syntax:
        content:
          CSharp: public Mesh(List<Vertex> vertices, List<Edge> edges, List<Face> faces, Object3D dependency)
          VB: Public Sub New(vertices As List(Of Vertex), edges As List(Of Edge), faces As List(Of Face), dependency As Object3D)
        parameters:
        - id: vertices
          type: System.Collections.Generic.List{Engine.Core.Components.Vertex}
        - id: edges
          type: System.Collections.Generic.List{Engine.Core.Components.Edge}
        - id: faces
          type: System.Collections.Generic.List{Engine.Core.Components.Face}
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Mesh.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddVertex(Engine.Core.Components.Vertex)
      commentId: M:Engine.Core.Components.Mesh.AddVertex(Engine.Core.Components.Vertex)
      language: CSharp
      name:
        CSharp: AddVertex(Vertex)
        VB: AddVertex(Vertex)
      nameWithType:
        CSharp: Mesh.AddVertex(Vertex)
        VB: Mesh.AddVertex(Vertex)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddVertex(Engine.Core.Components.Vertex)
        VB: Engine.Core.Components.Mesh.AddVertex(Engine.Core.Components.Vertex)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddVertex
        path: ''
        startLine: 1064
      syntax:
        content:
          CSharp: public void AddVertex(Vertex vertex)
          VB: Public Sub AddVertex(vertex As Vertex)
        parameters:
        - id: vertex
          type: Engine.Core.Components.Vertex
      overload: Engine.Core.Components.Mesh.AddVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Edge)
      commentId: M:Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Edge)
      language: CSharp
      name:
        CSharp: AddEdge(Edge)
        VB: AddEdge(Edge)
      nameWithType:
        CSharp: Mesh.AddEdge(Edge)
        VB: Mesh.AddEdge(Edge)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Edge)
        VB: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Edge)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddEdge
        path: ''
        startLine: 1069
      syntax:
        content:
          CSharp: public void AddEdge(Edge edge)
          VB: Public Sub AddEdge(edge As Edge)
        parameters:
        - id: edge
          type: Engine.Core.Components.Edge
      overload: Engine.Core.Components.Mesh.AddEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex,Engine.Core.Components.Vertex)
      commentId: M:Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex,Engine.Core.Components.Vertex)
      language: CSharp
      name:
        CSharp: AddEdge(Vertex, Vertex)
        VB: AddEdge(Vertex, Vertex)
      nameWithType:
        CSharp: Mesh.AddEdge(Vertex, Vertex)
        VB: Mesh.AddEdge(Vertex, Vertex)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex, Engine.Core.Components.Vertex)
        VB: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex, Engine.Core.Components.Vertex)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddEdge
        path: ''
        startLine: 1073
      syntax:
        content:
          CSharp: public void AddEdge(Vertex v1, Vertex v2)
          VB: Public Sub AddEdge(v1 As Vertex, v2 As Vertex)
        parameters:
        - id: v1
          type: Engine.Core.Components.Vertex
        - id: v2
          type: Engine.Core.Components.Vertex
      overload: Engine.Core.Components.Mesh.AddEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex[])
      commentId: M:Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex[])
      language: CSharp
      name:
        CSharp: AddEdge(Vertex[])
        VB: AddEdge(Vertex())
      nameWithType:
        CSharp: Mesh.AddEdge(Vertex[])
        VB: Mesh.AddEdge(Vertex())
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex[])
        VB: Engine.Core.Components.Mesh.AddEdge(Engine.Core.Components.Vertex())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddEdge
        path: ''
        startLine: 1078
      syntax:
        content:
          CSharp: public void AddEdge(Vertex[] vertices)
          VB: Public Sub AddEdge(vertices As Vertex())
        parameters:
        - id: vertices
          type: Engine.Core.Components.Vertex[]
      overload: Engine.Core.Components.Mesh.AddEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Face)
      commentId: M:Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Face)
      language: CSharp
      name:
        CSharp: AddFace(Face)
        VB: AddFace(Face)
      nameWithType:
        CSharp: Mesh.AddFace(Face)
        VB: Mesh.AddFace(Face)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Face)
        VB: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Face)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddFace
        path: ''
        startLine: 1088
      syntax:
        content:
          CSharp: public void AddFace(Face face)
          VB: Public Sub AddFace(face As Face)
        parameters:
        - id: face
          type: Engine.Core.Components.Face
      overload: Engine.Core.Components.Mesh.AddFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
      commentId: M:Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[],Engine.Core.Components.Edge[])
      language: CSharp
      name:
        CSharp: AddFace(Vertex[], Edge[])
        VB: AddFace(Vertex(), Edge())
      nameWithType:
        CSharp: Mesh.AddFace(Vertex[], Edge[])
        VB: Mesh.AddFace(Vertex(), Edge())
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[], Engine.Core.Components.Edge[])
        VB: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex(), Engine.Core.Components.Edge())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddFace
        path: ''
        startLine: 1092
      syntax:
        content:
          CSharp: public void AddFace(Vertex[] vertices, Edge[] edges)
          VB: Public Sub AddFace(vertices As Vertex(), edges As Edge())
        parameters:
        - id: vertices
          type: Engine.Core.Components.Vertex[]
        - id: edges
          type: Engine.Core.Components.Edge[]
      overload: Engine.Core.Components.Mesh.AddFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[])
      commentId: M:Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[])
      language: CSharp
      name:
        CSharp: AddFace(Vertex[])
        VB: AddFace(Vertex())
      nameWithType:
        CSharp: Mesh.AddFace(Vertex[])
        VB: Mesh.AddFace(Vertex())
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex[])
        VB: Engine.Core.Components.Mesh.AddFace(Engine.Core.Components.Vertex())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: AddFace
        path: ''
        startLine: 1097
      syntax:
        content:
          CSharp: public void AddFace(Vertex[] vertices)
          VB: Public Sub AddFace(vertices As Vertex())
        parameters:
        - id: vertices
          type: Engine.Core.Components.Vertex[]
      overload: Engine.Core.Components.Mesh.AddFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.GetVertex(System.Int32)
      commentId: M:Engine.Core.Components.Mesh.GetVertex(System.Int32)
      language: CSharp
      name:
        CSharp: GetVertex(Int32)
        VB: GetVertex(Int32)
      nameWithType:
        CSharp: Mesh.GetVertex(Int32)
        VB: Mesh.GetVertex(Int32)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.GetVertex(System.Int32)
        VB: Engine.Core.Components.Mesh.GetVertex(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetVertex
        path: ''
        startLine: 1108
      syntax:
        content:
          CSharp: public Vertex GetVertex(int index)
          VB: Public Function GetVertex(index As Integer) As Vertex
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Engine.Core.Components.Vertex
      overload: Engine.Core.Components.Mesh.GetVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindVertex(Engine.Core.Components.Vertex)
      commentId: M:Engine.Core.Components.Mesh.FindVertex(Engine.Core.Components.Vertex)
      language: CSharp
      name:
        CSharp: FindVertex(Vertex)
        VB: FindVertex(Vertex)
      nameWithType:
        CSharp: Mesh.FindVertex(Vertex)
        VB: Mesh.FindVertex(Vertex)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindVertex(Engine.Core.Components.Vertex)
        VB: Engine.Core.Components.Mesh.FindVertex(Engine.Core.Components.Vertex)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindVertex
        path: ''
        startLine: 1109
      syntax:
        content:
          CSharp: public Vertex FindVertex(Vertex vertex)
          VB: Public Function FindVertex(vertex As Vertex) As Vertex
        parameters:
        - id: vertex
          type: Engine.Core.Components.Vertex
        return:
          type: Engine.Core.Components.Vertex
      overload: Engine.Core.Components.Mesh.FindVertex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.GetEdge(System.Int32)
      commentId: M:Engine.Core.Components.Mesh.GetEdge(System.Int32)
      language: CSharp
      name:
        CSharp: GetEdge(Int32)
        VB: GetEdge(Int32)
      nameWithType:
        CSharp: Mesh.GetEdge(Int32)
        VB: Mesh.GetEdge(Int32)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.GetEdge(System.Int32)
        VB: Engine.Core.Components.Mesh.GetEdge(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetEdge
        path: ''
        startLine: 1110
      syntax:
        content:
          CSharp: public Edge GetEdge(int index)
          VB: Public Function GetEdge(index As Integer) As Edge
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Engine.Core.Components.Edge
      overload: Engine.Core.Components.Mesh.GetEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindEdge(Engine.Core.Components.Edge)
      commentId: M:Engine.Core.Components.Mesh.FindEdge(Engine.Core.Components.Edge)
      language: CSharp
      name:
        CSharp: FindEdge(Edge)
        VB: FindEdge(Edge)
      nameWithType:
        CSharp: Mesh.FindEdge(Edge)
        VB: Mesh.FindEdge(Edge)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindEdge(Engine.Core.Components.Edge)
        VB: Engine.Core.Components.Mesh.FindEdge(Engine.Core.Components.Edge)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindEdge
        path: ''
        startLine: 1111
      syntax:
        content:
          CSharp: public Edge FindEdge(Edge edge)
          VB: Public Function FindEdge(edge As Edge) As Edge
        parameters:
        - id: edge
          type: Engine.Core.Components.Edge
        return:
          type: Engine.Core.Components.Edge
      overload: Engine.Core.Components.Mesh.FindEdge*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.GetFace(System.Int32)
      commentId: M:Engine.Core.Components.Mesh.GetFace(System.Int32)
      language: CSharp
      name:
        CSharp: GetFace(Int32)
        VB: GetFace(Int32)
      nameWithType:
        CSharp: Mesh.GetFace(Int32)
        VB: Mesh.GetFace(Int32)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.GetFace(System.Int32)
        VB: Engine.Core.Components.Mesh.GetFace(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GetFace
        path: ''
        startLine: 1112
      syntax:
        content:
          CSharp: public Face GetFace(int index)
          VB: Public Function GetFace(index As Integer) As Face
        parameters:
        - id: index
          type: System.Int32
        return:
          type: Engine.Core.Components.Face
      overload: Engine.Core.Components.Mesh.GetFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindFace(Engine.Core.Components.Face)
      commentId: M:Engine.Core.Components.Mesh.FindFace(Engine.Core.Components.Face)
      language: CSharp
      name:
        CSharp: FindFace(Face)
        VB: FindFace(Face)
      nameWithType:
        CSharp: Mesh.FindFace(Face)
        VB: Mesh.FindFace(Face)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindFace(Engine.Core.Components.Face)
        VB: Engine.Core.Components.Mesh.FindFace(Engine.Core.Components.Face)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindFace
        path: ''
        startLine: 1113
      syntax:
        content:
          CSharp: public Face FindFace(Face face)
          VB: Public Function FindFace(face As Face) As Face
        parameters:
        - id: face
          type: Engine.Core.Components.Face
        return:
          type: Engine.Core.Components.Face
      overload: Engine.Core.Components.Mesh.FindFace*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Vertex)
      commentId: M:Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Vertex)
      language: CSharp
      name:
        CSharp: FindIndex(Vertex)
        VB: FindIndex(Vertex)
      nameWithType:
        CSharp: Mesh.FindIndex(Vertex)
        VB: Mesh.FindIndex(Vertex)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Vertex)
        VB: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Vertex)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindIndex
        path: ''
        startLine: 1114
      syntax:
        content:
          CSharp: public int FindIndex(Vertex vertex)
          VB: Public Function FindIndex(vertex As Vertex) As Integer
        parameters:
        - id: vertex
          type: Engine.Core.Components.Vertex
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.FindIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Edge)
      commentId: M:Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Edge)
      language: CSharp
      name:
        CSharp: FindIndex(Edge)
        VB: FindIndex(Edge)
      nameWithType:
        CSharp: Mesh.FindIndex(Edge)
        VB: Mesh.FindIndex(Edge)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Edge)
        VB: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Edge)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindIndex
        path: ''
        startLine: 1115
      syntax:
        content:
          CSharp: public int FindIndex(Edge edge)
          VB: Public Function FindIndex(edge As Edge) As Integer
        parameters:
        - id: edge
          type: Engine.Core.Components.Edge
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.FindIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Face)
      commentId: M:Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Face)
      language: CSharp
      name:
        CSharp: FindIndex(Face)
        VB: FindIndex(Face)
      nameWithType:
        CSharp: Mesh.FindIndex(Face)
        VB: Mesh.FindIndex(Face)
      qualifiedName:
        CSharp: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Face)
        VB: Engine.Core.Components.Mesh.FindIndex(Engine.Core.Components.Face)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: FindIndex
        path: ''
        startLine: 1116
      syntax:
        content:
          CSharp: public int FindIndex(Face face)
          VB: Public Function FindIndex(face As Face) As Integer
        parameters:
        - id: face
          type: Engine.Core.Components.Face
        return:
          type: System.Int32
      overload: Engine.Core.Components.Mesh.FindIndex*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Components.Vertex
    commentId: T:Engine.Core.Components.Vertex
    language: CSharp
    name:
      CSharp: Vertex
      VB: Vertex
    nameWithType:
      CSharp: Vertex
      VB: Vertex
    qualifiedName:
      CSharp: Engine.Core.Components.Vertex
      VB: Engine.Core.Components.Vertex
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Components
    source:
      id: Vertex
      path: ''
      startLine: 1129
    syntax:
      content:
        CSharp: 'public class Vertex : Component'
        VB: >-
          Public Class Vertex

              Inherits Component
    inheritance:
    - System.Object
    - Engine.Core.Component
    inheritedMembers:
    - Engine.Core.Component.Dependency
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Components.Vertex.LocalPosition
      commentId: P:Engine.Core.Components.Vertex.LocalPosition
      language: CSharp
      name:
        CSharp: LocalPosition
        VB: LocalPosition
      nameWithType:
        CSharp: Vertex.LocalPosition
        VB: Vertex.LocalPosition
      qualifiedName:
        CSharp: Engine.Core.Components.Vertex.LocalPosition
        VB: Engine.Core.Components.Vertex.LocalPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: LocalPosition
        path: ''
        startLine: 1134
      syntax:
        content:
          CSharp: public Vector3 LocalPosition { get; set; }
          VB: Public Property LocalPosition As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Vertex.LocalPosition*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Components.Vertex.GlobalPosition
      commentId: P:Engine.Core.Components.Vertex.GlobalPosition
      language: CSharp
      name:
        CSharp: GlobalPosition
        VB: GlobalPosition
      nameWithType:
        CSharp: Vertex.GlobalPosition
        VB: Vertex.GlobalPosition
      qualifiedName:
        CSharp: Engine.Core.Components.Vertex.GlobalPosition
        VB: Engine.Core.Components.Vertex.GlobalPosition
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: GlobalPosition
        path: ''
        startLine: 1135
      syntax:
        content:
          CSharp: public Vector3 GlobalPosition { get; }
          VB: Public ReadOnly Property GlobalPosition As Vector3
        parameters: []
        return:
          type: Vector3
      overload: Engine.Core.Components.Vertex.GlobalPosition*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Components.Vertex.#ctor(Vector3,Engine.Core.Object3D)
      commentId: M:Engine.Core.Components.Vertex.#ctor(Vector3,Engine.Core.Object3D)
      language: CSharp
      name:
        CSharp: Vertex(Vector3, Object3D)
        VB: Vertex(Vector3, Object3D)
      nameWithType:
        CSharp: Vertex.Vertex(Vector3, Object3D)
        VB: Vertex.Vertex(Vector3, Object3D)
      qualifiedName:
        CSharp: Engine.Core.Components.Vertex.Vertex(Vector3, Engine.Core.Object3D)
        VB: Engine.Core.Components.Vertex.Vertex(Vector3, Engine.Core.Object3D)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: .ctor
        path: ''
        startLine: 1137
      syntax:
        content:
          CSharp: public Vertex(Vector3 localPosition, Object3D dependency)
          VB: Public Sub New(localPosition As Vector3, dependency As Object3D)
        parameters:
        - id: localPosition
          type: Vector3
        - id: dependency
          type: Engine.Core.Object3D
      overload: Engine.Core.Components.Vertex.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Components.Vertex.SetPosition(Vector3)
      commentId: M:Engine.Core.Components.Vertex.SetPosition(Vector3)
      language: CSharp
      name:
        CSharp: SetPosition(Vector3)
        VB: SetPosition(Vector3)
      nameWithType:
        CSharp: Vertex.SetPosition(Vector3)
        VB: Vertex.SetPosition(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Components.Vertex.SetPosition(Vector3)
        VB: Engine.Core.Components.Vertex.SetPosition(Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Components
      source:
        id: SetPosition
        path: ''
        startLine: 1143
      syntax:
        content:
          CSharp: public void SetPosition(Vector3 localPosition)
          VB: Public Sub SetPosition(localPosition As Vector3)
        parameters:
        - id: localPosition
          type: Vector3
      overload: Engine.Core.Components.Vertex.SetPosition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Engine.Core.Maths
  commentId: N:Engine.Core.Maths
  language: CSharp
  name:
    CSharp: Engine.Core.Maths
    VB: Engine.Core.Maths
  nameWithType:
    CSharp: Engine.Core.Maths
    VB: Engine.Core.Maths
  qualifiedName:
    CSharp: Engine.Core.Maths
    VB: Engine.Core.Maths
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.Maths.AffineTransformationMatrix
    commentId: T:Engine.Core.Maths.AffineTransformationMatrix
    language: CSharp
    name:
      CSharp: AffineTransformationMatrix
      VB: AffineTransformationMatrix
    nameWithType:
      CSharp: AffineTransformationMatrix
      VB: AffineTransformationMatrix
    qualifiedName:
      CSharp: Engine.Core.Maths.AffineTransformationMatrix
      VB: Engine.Core.Maths.AffineTransformationMatrix
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: AffineTransformationMatrix
      path: ''
      startLine: 1159
    syntax:
      content:
        CSharp: public abstract class AffineTransformationMatrix
        VB: Public MustInherit Class AffineTransformationMatrix
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items: []
  - id: Engine.Core.Maths.AffineTransformationMatrix4x4
    commentId: T:Engine.Core.Maths.AffineTransformationMatrix4x4
    language: CSharp
    name:
      CSharp: AffineTransformationMatrix4x4
      VB: AffineTransformationMatrix4x4
    nameWithType:
      CSharp: AffineTransformationMatrix4x4
      VB: AffineTransformationMatrix4x4
    qualifiedName:
      CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4
      VB: Engine.Core.Maths.AffineTransformationMatrix4x4
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: AffineTransformationMatrix4x4
      path: ''
      startLine: 1174
    syntax:
      content:
        CSharp: 'public class AffineTransformationMatrix4x4 : AffineTransformationMatrix'
        VB: >-
          Public Class AffineTransformationMatrix4x4

              Inherits AffineTransformationMatrix
    inheritance:
    - System.Object
    - Engine.Core.Maths.AffineTransformationMatrix
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.translationVector
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.translationVector
      language: CSharp
      name:
        CSharp: translationVector
        VB: translationVector
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.translationVector
        VB: AffineTransformationMatrix4x4.translationVector
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.translationVector
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.translationVector
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: translationVector
        path: ''
        startLine: 1176
      syntax:
        content:
          CSharp: public Vector3 translationVector
          VB: Public translationVector As Vector3
        return:
          type: Engine.Core.Maths.Vector3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationSub
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.rotationSub
      language: CSharp
      name:
        CSharp: rotationSub
        VB: rotationSub
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.rotationSub
        VB: AffineTransformationMatrix4x4.rotationSub
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationSub
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationSub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: rotationSub
        path: ''
        startLine: 1178
      syntax:
        content:
          CSharp: public RotationMatrix3x3 rotationSub
          VB: Public rotationSub As RotationMatrix3x3
        return:
          type: Engine.Core.Maths.RotationMatrix3x3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationQ
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.rotationQ
      language: CSharp
      name:
        CSharp: rotationQ
        VB: rotationQ
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.rotationQ
        VB: AffineTransformationMatrix4x4.rotationQ
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationQ
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.rotationQ
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: rotationQ
        path: ''
        startLine: 1179
      syntax:
        content:
          CSharp: public Quaternion rotationQ
          VB: Public rotationQ As Quaternion
        return:
          type: Engine.Core.Maths.Quaternion
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.dilationSub
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.dilationSub
      language: CSharp
      name:
        CSharp: dilationSub
        VB: dilationSub
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.dilationSub
        VB: AffineTransformationMatrix4x4.dilationSub
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.dilationSub
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.dilationSub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: dilationSub
        path: ''
        startLine: 1180
      syntax:
        content:
          CSharp: public DilationMatrix3x3 dilationSub
          VB: Public dilationSub As DilationMatrix3x3
        return:
          type: Engine.Core.Maths.DilationMatrix3x3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.shearSub
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.shearSub
      language: CSharp
      name:
        CSharp: shearSub
        VB: shearSub
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.shearSub
        VB: AffineTransformationMatrix4x4.shearSub
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.shearSub
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.shearSub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: shearSub
        path: ''
        startLine: 1181
      syntax:
        content:
          CSharp: public ShearMatrix3D shearSub
          VB: Public shearSub As ShearMatrix3D
        return:
          type: Engine.Core.Maths.ShearMatrix3D
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.TConvention
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.TConvention
      language: CSharp
      name:
        CSharp: TConvention
        VB: TConvention
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.TConvention
        VB: AffineTransformationMatrix4x4.TConvention
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.TConvention
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.TConvention
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TConvention
        path: ''
        startLine: 1183
      syntax:
        content:
          CSharp: public TransformationConvention TConvention
          VB: Public TConvention As TransformationConvention
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.ATM4x4
      commentId: F:Engine.Core.Maths.AffineTransformationMatrix4x4.ATM4x4
      language: CSharp
      name:
        CSharp: ATM4x4
        VB: ATM4x4
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.ATM4x4
        VB: AffineTransformationMatrix4x4.ATM4x4
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.ATM4x4
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.ATM4x4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ATM4x4
        path: ''
        startLine: 1184
      syntax:
        content:
          CSharp: public MatrixMxN ATM4x4
          VB: Public ATM4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor
      commentId: M:Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor
      language: CSharp
      name:
        CSharp: AffineTransformationMatrix4x4()
        VB: AffineTransformationMatrix4x4()
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4()
        VB: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4()
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4()
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1186
      syntax:
        content:
          CSharp: public AffineTransformationMatrix4x4()
          VB: Public Sub New
      overload: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor(Engine.Core.Maths.TransformationConvention,Engine.Core.Maths.RotationConvention)
      commentId: M:Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor(Engine.Core.Maths.TransformationConvention,Engine.Core.Maths.RotationConvention)
      language: CSharp
      name:
        CSharp: AffineTransformationMatrix4x4(TransformationConvention, RotationConvention)
        VB: AffineTransformationMatrix4x4(TransformationConvention, RotationConvention)
      nameWithType:
        CSharp: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4(TransformationConvention, RotationConvention)
        VB: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4(TransformationConvention, RotationConvention)
      qualifiedName:
        CSharp: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4(Engine.Core.Maths.TransformationConvention, Engine.Core.Maths.RotationConvention)
        VB: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4(Engine.Core.Maths.TransformationConvention, Engine.Core.Maths.RotationConvention)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1191
      syntax:
        content:
          CSharp: public AffineTransformationMatrix4x4(TransformationConvention TConvention, RotationConvention RConvention)
          VB: Public Sub New(TConvention As TransformationConvention, RConvention As RotationConvention)
        parameters:
        - id: TConvention
          type: Engine.Core.Maths.TransformationConvention
        - id: RConvention
          type: Engine.Core.Maths.RotationConvention
      overload: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.AugmentedMatrix
    commentId: T:Engine.Core.Maths.AugmentedMatrix
    language: CSharp
    name:
      CSharp: AugmentedMatrix
      VB: AugmentedMatrix
    nameWithType:
      CSharp: AugmentedMatrix
      VB: AugmentedMatrix
    qualifiedName:
      CSharp: Engine.Core.Maths.AugmentedMatrix
      VB: Engine.Core.Maths.AugmentedMatrix
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: AugmentedMatrix
      path: ''
      startLine: 1227
    syntax:
      content:
        CSharp: public class AugmentedMatrix
        VB: Public Class AugmentedMatrix
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.AugmentedMatrix.Matrix
      commentId: P:Engine.Core.Maths.AugmentedMatrix.Matrix
      language: CSharp
      name:
        CSharp: Matrix
        VB: Matrix
      nameWithType:
        CSharp: AugmentedMatrix.Matrix
        VB: AugmentedMatrix.Matrix
      qualifiedName:
        CSharp: Engine.Core.Maths.AugmentedMatrix.Matrix
        VB: Engine.Core.Maths.AugmentedMatrix.Matrix
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Matrix
        path: ''
        startLine: 1232
      syntax:
        content:
          CSharp: public IMatrix Matrix { get; set; }
          VB: Public Property Matrix As IMatrix
        parameters: []
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.AugmentedMatrix.Matrix*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.AugmentedMatrix.Augmentation
      commentId: P:Engine.Core.Maths.AugmentedMatrix.Augmentation
      language: CSharp
      name:
        CSharp: Augmentation
        VB: Augmentation
      nameWithType:
        CSharp: AugmentedMatrix.Augmentation
        VB: AugmentedMatrix.Augmentation
      qualifiedName:
        CSharp: Engine.Core.Maths.AugmentedMatrix.Augmentation
        VB: Engine.Core.Maths.AugmentedMatrix.Augmentation
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Augmentation
        path: ''
        startLine: 1237
      syntax:
        content:
          CSharp: public IMatrix Augmentation { get; set; }
          VB: Public Property Augmentation As IMatrix
        parameters: []
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.AugmentedMatrix.Augmentation*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.AugmentedMatrix.#ctor(Engine.Core.Maths.IMatrix,Engine.Core.Maths.IMatrix)
      commentId: M:Engine.Core.Maths.AugmentedMatrix.#ctor(Engine.Core.Maths.IMatrix,Engine.Core.Maths.IMatrix)
      language: CSharp
      name:
        CSharp: AugmentedMatrix(IMatrix, IMatrix)
        VB: AugmentedMatrix(IMatrix, IMatrix)
      nameWithType:
        CSharp: AugmentedMatrix.AugmentedMatrix(IMatrix, IMatrix)
        VB: AugmentedMatrix.AugmentedMatrix(IMatrix, IMatrix)
      qualifiedName:
        CSharp: Engine.Core.Maths.AugmentedMatrix.AugmentedMatrix(Engine.Core.Maths.IMatrix, Engine.Core.Maths.IMatrix)
        VB: Engine.Core.Maths.AugmentedMatrix.AugmentedMatrix(Engine.Core.Maths.IMatrix, Engine.Core.Maths.IMatrix)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1243
      syntax:
        content:
          CSharp: public AugmentedMatrix(IMatrix matrix, IMatrix augmentation)
          VB: Public Sub New(matrix As IMatrix, augmentation As IMatrix)
        parameters:
        - id: matrix
          type: Engine.Core.Maths.IMatrix
        - id: augmentation
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.AugmentedMatrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AugmentedMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.AugmentedMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: AugmentedMatrix.RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: AugmentedMatrix.RowOperation(Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.AugmentedMatrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.AugmentedMatrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 1258
      summary: "\nresult = target operation source (eg. target row + source row = new target row)\nIf the operation is a scalar operation then use float f and input something random into source as it won&apos;t be used.\n"
      example: []
      syntax:
        content:
          CSharp: public void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: target
          type: System.Int32
          description: ''
        - id: source
          type: System.Int32
          description: ''
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
          description: ''
        - id: f
          type: System.Single
          description: ''
      overload: Engine.Core.Maths.AugmentedMatrix.RowOperation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.AugmentedMatrix.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.AugmentedMatrix.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: AugmentedMatrix.SwapRows(Int32, Int32)
        VB: AugmentedMatrix.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.AugmentedMatrix.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.AugmentedMatrix.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SwapRows
        path: ''
        startLine: 1263
      syntax:
        content:
          CSharp: public void SwapRows(int from, int to)
          VB: Public Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.AugmentedMatrix.SwapRows*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.DilationMatrix2x2
    commentId: T:Engine.Core.Maths.DilationMatrix2x2
    language: CSharp
    name:
      CSharp: DilationMatrix2x2
      VB: DilationMatrix2x2
    nameWithType:
      CSharp: DilationMatrix2x2
      VB: DilationMatrix2x2
    qualifiedName:
      CSharp: Engine.Core.Maths.DilationMatrix2x2
      VB: Engine.Core.Maths.DilationMatrix2x2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: DilationMatrix2x2
      path: ''
      startLine: 1279
    syntax:
      content:
        CSharp: public class DilationMatrix2x2
        VB: Public Class DilationMatrix2x2
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.DilationMatrix2x2.D2x2
      commentId: F:Engine.Core.Maths.DilationMatrix2x2.D2x2
      language: CSharp
      name:
        CSharp: D2x2
        VB: D2x2
      nameWithType:
        CSharp: DilationMatrix2x2.D2x2
        VB: DilationMatrix2x2.D2x2
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix2x2.D2x2
        VB: Engine.Core.Maths.DilationMatrix2x2.D2x2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: D2x2
        path: ''
        startLine: 1281
      syntax:
        content:
          CSharp: public readonly MatrixMxN D2x2
          VB: Public ReadOnly D2x2 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.DilationMatrix2x2.#ctor(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.DilationMatrix2x2.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: DilationMatrix2x2(Single, Single)
        VB: DilationMatrix2x2(Single, Single)
      nameWithType:
        CSharp: DilationMatrix2x2.DilationMatrix2x2(Single, Single)
        VB: DilationMatrix2x2.DilationMatrix2x2(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix2x2.DilationMatrix2x2(System.Single, System.Single)
        VB: Engine.Core.Maths.DilationMatrix2x2.DilationMatrix2x2(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1283
      syntax:
        content:
          CSharp: public DilationMatrix2x2(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
      overload: Engine.Core.Maths.DilationMatrix2x2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.DilationMatrix2x2.op_Implicit(Engine.Core.Maths.DilationMatrix2x2)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.DilationMatrix2x2.op_Implicit(Engine.Core.Maths.DilationMatrix2x2)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(DilationMatrix2x2 to MatrixMxN)
        VB: Widening(DilationMatrix2x2 to MatrixMxN)
      nameWithType:
        CSharp: DilationMatrix2x2.Implicit(DilationMatrix2x2 to MatrixMxN)
        VB: DilationMatrix2x2.Widening(DilationMatrix2x2 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix2x2.Implicit(Engine.Core.Maths.DilationMatrix2x2 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.DilationMatrix2x2.Widening(Engine.Core.Maths.DilationMatrix2x2 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 1292
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(DilationMatrix2x2 d)
          VB: Public Shared Widening Operator CType(d As DilationMatrix2x2) As MatrixMxN
        parameters:
        - id: d
          type: Engine.Core.Maths.DilationMatrix2x2
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.DilationMatrix2x2.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.DilationMatrix3x3
    commentId: T:Engine.Core.Maths.DilationMatrix3x3
    language: CSharp
    name:
      CSharp: DilationMatrix3x3
      VB: DilationMatrix3x3
    nameWithType:
      CSharp: DilationMatrix3x3
      VB: DilationMatrix3x3
    qualifiedName:
      CSharp: Engine.Core.Maths.DilationMatrix3x3
      VB: Engine.Core.Maths.DilationMatrix3x3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: DilationMatrix3x3
      path: ''
      startLine: 1307
    syntax:
      content:
        CSharp: public class DilationMatrix3x3
        VB: Public Class DilationMatrix3x3
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.DilationMatrix3x3.D3x3
      commentId: F:Engine.Core.Maths.DilationMatrix3x3.D3x3
      language: CSharp
      name:
        CSharp: D3x3
        VB: D3x3
      nameWithType:
        CSharp: DilationMatrix3x3.D3x3
        VB: DilationMatrix3x3.D3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix3x3.D3x3
        VB: Engine.Core.Maths.DilationMatrix3x3.D3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: D3x3
        path: ''
        startLine: 1309
      syntax:
        content:
          CSharp: public readonly Matrix3x3 D3x3
          VB: Public ReadOnly D3x3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.DilationMatrix3x3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Engine.Core.Maths.DilationMatrix3x3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: DilationMatrix3x3(Single, Single, Single)
        VB: DilationMatrix3x3(Single, Single, Single)
      nameWithType:
        CSharp: DilationMatrix3x3.DilationMatrix3x3(Single, Single, Single)
        VB: DilationMatrix3x3.DilationMatrix3x3(Single, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix3x3.DilationMatrix3x3(System.Single, System.Single, System.Single)
        VB: Engine.Core.Maths.DilationMatrix3x3.DilationMatrix3x3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1310
      syntax:
        content:
          CSharp: public DilationMatrix3x3(float x1, float x2, float x3)
          VB: Public Sub New(x1 As Single, x2 As Single, x3 As Single)
        parameters:
        - id: x1
          type: System.Single
        - id: x2
          type: System.Single
        - id: x3
          type: System.Single
      overload: Engine.Core.Maths.DilationMatrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4
      commentId: M:Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4
      language: CSharp
      name:
        CSharp: ToMatrix4x4()
        VB: ToMatrix4x4()
      nameWithType:
        CSharp: DilationMatrix3x3.ToMatrix4x4()
        VB: DilationMatrix3x3.ToMatrix4x4()
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4()
        VB: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix4x4
        path: ''
        startLine: 1315
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix4x4()
          VB: Public Function ToMatrix4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.DilationMatrix3x3.op_Implicit(Engine.Core.Maths.DilationMatrix3x3)~Engine.Core.Maths.Matrix3x3
      commentId: M:Engine.Core.Maths.DilationMatrix3x3.op_Implicit(Engine.Core.Maths.DilationMatrix3x3)~Engine.Core.Maths.Matrix3x3
      language: CSharp
      name:
        CSharp: Implicit(DilationMatrix3x3 to Matrix3x3)
        VB: Widening(DilationMatrix3x3 to Matrix3x3)
      nameWithType:
        CSharp: DilationMatrix3x3.Implicit(DilationMatrix3x3 to Matrix3x3)
        VB: DilationMatrix3x3.Widening(DilationMatrix3x3 to Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.DilationMatrix3x3.Implicit(Engine.Core.Maths.DilationMatrix3x3 to Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.DilationMatrix3x3.Widening(Engine.Core.Maths.DilationMatrix3x3 to Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 1331
      syntax:
        content:
          CSharp: public static implicit operator Matrix3x3(DilationMatrix3x3 d)
          VB: Public Shared Widening Operator CType(d As DilationMatrix3x3) As Matrix3x3
        parameters:
        - id: d
          type: Engine.Core.Maths.DilationMatrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.DilationMatrix3x3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.MatrixOperation
    commentId: T:Engine.Core.Maths.MatrixOperation
    language: CSharp
    name:
      CSharp: MatrixOperation
      VB: MatrixOperation
    nameWithType:
      CSharp: MatrixOperation
      VB: MatrixOperation
    qualifiedName:
      CSharp: Engine.Core.Maths.MatrixOperation
      VB: Engine.Core.Maths.MatrixOperation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: MatrixOperation
      path: ''
      startLine: 1346
    syntax:
      content:
        CSharp: public enum MatrixOperation
        VB: Public Enum MatrixOperation
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.MatrixOperation.Addition
      commentId: F:Engine.Core.Maths.MatrixOperation.Addition
      language: CSharp
      name:
        CSharp: Addition
        VB: Addition
      nameWithType:
        CSharp: MatrixOperation.Addition
        VB: MatrixOperation.Addition
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixOperation.Addition
        VB: Engine.Core.Maths.MatrixOperation.Addition
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 1348
      syntax:
        content:
          CSharp: Addition = 0
          VB: Addition = 0
        return:
          type: Engine.Core.Maths.MatrixOperation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.MatrixOperation.Substraction
      commentId: F:Engine.Core.Maths.MatrixOperation.Substraction
      language: CSharp
      name:
        CSharp: Substraction
        VB: Substraction
      nameWithType:
        CSharp: MatrixOperation.Substraction
        VB: MatrixOperation.Substraction
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixOperation.Substraction
        VB: Engine.Core.Maths.MatrixOperation.Substraction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 1349
      syntax:
        content:
          CSharp: Substraction = 1
          VB: Substraction = 1
        return:
          type: Engine.Core.Maths.MatrixOperation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.MatrixOperation.Multiplication
      commentId: F:Engine.Core.Maths.MatrixOperation.Multiplication
      language: CSharp
      name:
        CSharp: Multiplication
        VB: Multiplication
      nameWithType:
        CSharp: MatrixOperation.Multiplication
        VB: MatrixOperation.Multiplication
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixOperation.Multiplication
        VB: Engine.Core.Maths.MatrixOperation.Multiplication
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiplication
        path: ''
        startLine: 1350
      syntax:
        content:
          CSharp: Multiplication = 2
          VB: Multiplication = 2
        return:
          type: Engine.Core.Maths.MatrixOperation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.MatrixOperation.ScalarMultiplication
      commentId: F:Engine.Core.Maths.MatrixOperation.ScalarMultiplication
      language: CSharp
      name:
        CSharp: ScalarMultiplication
        VB: ScalarMultiplication
      nameWithType:
        CSharp: MatrixOperation.ScalarMultiplication
        VB: MatrixOperation.ScalarMultiplication
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixOperation.ScalarMultiplication
        VB: Engine.Core.Maths.MatrixOperation.ScalarMultiplication
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarMultiplication
        path: ''
        startLine: 1351
      syntax:
        content:
          CSharp: ScalarMultiplication = 3
          VB: ScalarMultiplication = 3
        return:
          type: Engine.Core.Maths.MatrixOperation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.MatrixOperation.ScalarDivision
      commentId: F:Engine.Core.Maths.MatrixOperation.ScalarDivision
      language: CSharp
      name:
        CSharp: ScalarDivision
        VB: ScalarDivision
      nameWithType:
        CSharp: MatrixOperation.ScalarDivision
        VB: MatrixOperation.ScalarDivision
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixOperation.ScalarDivision
        VB: Engine.Core.Maths.MatrixOperation.ScalarDivision
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarDivision
        path: ''
        startLine: 1352
      syntax:
        content:
          CSharp: ScalarDivision = 4
          VB: ScalarDivision = 4
        return:
          type: Engine.Core.Maths.MatrixOperation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.Axis
    commentId: T:Engine.Core.Maths.Axis
    language: CSharp
    name:
      CSharp: Axis
      VB: Axis
    nameWithType:
      CSharp: Axis
      VB: Axis
    qualifiedName:
      CSharp: Engine.Core.Maths.Axis
      VB: Engine.Core.Maths.Axis
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Axis
      path: ''
      startLine: 1355
    syntax:
      content:
        CSharp: public enum Axis
        VB: Public Enum Axis
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.Axis.X1
      commentId: F:Engine.Core.Maths.Axis.X1
      language: CSharp
      name:
        CSharp: X1
        VB: X1
      nameWithType:
        CSharp: Axis.X1
        VB: Axis.X1
      qualifiedName:
        CSharp: Engine.Core.Maths.Axis.X1
        VB: Engine.Core.Maths.Axis.X1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1
        path: ''
        startLine: 1357
      syntax:
        content:
          CSharp: X1 = 0
          VB: X1 = 0
        return:
          type: Engine.Core.Maths.Axis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Axis.X2
      commentId: F:Engine.Core.Maths.Axis.X2
      language: CSharp
      name:
        CSharp: X2
        VB: X2
      nameWithType:
        CSharp: Axis.X2
        VB: Axis.X2
      qualifiedName:
        CSharp: Engine.Core.Maths.Axis.X2
        VB: Engine.Core.Maths.Axis.X2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2
        path: ''
        startLine: 1358
      syntax:
        content:
          CSharp: X2 = 1
          VB: X2 = 1
        return:
          type: Engine.Core.Maths.Axis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Axis.X3
      commentId: F:Engine.Core.Maths.Axis.X3
      language: CSharp
      name:
        CSharp: X3
        VB: X3
      nameWithType:
        CSharp: Axis.X3
        VB: Axis.X3
      qualifiedName:
        CSharp: Engine.Core.Maths.Axis.X3
        VB: Engine.Core.Maths.Axis.X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X3
        path: ''
        startLine: 1359
      syntax:
        content:
          CSharp: X3 = 2
          VB: X3 = 2
        return:
          type: Engine.Core.Maths.Axis
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.RotationConvention
    commentId: T:Engine.Core.Maths.RotationConvention
    language: CSharp
    name:
      CSharp: RotationConvention
      VB: RotationConvention
    nameWithType:
      CSharp: RotationConvention
      VB: RotationConvention
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationConvention
      VB: Engine.Core.Maths.RotationConvention
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationConvention
      path: ''
      startLine: 1362
    syntax:
      content:
        CSharp: public enum RotationConvention
        VB: Public Enum RotationConvention
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.RotationConvention.X1X2X3
      commentId: F:Engine.Core.Maths.RotationConvention.X1X2X3
      language: CSharp
      name:
        CSharp: X1X2X3
        VB: X1X2X3
      nameWithType:
        CSharp: RotationConvention.X1X2X3
        VB: RotationConvention.X1X2X3
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X1X2X3
        VB: Engine.Core.Maths.RotationConvention.X1X2X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1X2X3
        path: ''
        startLine: 1364
      syntax:
        content:
          CSharp: X1X2X3 = 0
          VB: X1X2X3 = 0
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationConvention.X1X3X2
      commentId: F:Engine.Core.Maths.RotationConvention.X1X3X2
      language: CSharp
      name:
        CSharp: X1X3X2
        VB: X1X3X2
      nameWithType:
        CSharp: RotationConvention.X1X3X2
        VB: RotationConvention.X1X3X2
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X1X3X2
        VB: Engine.Core.Maths.RotationConvention.X1X3X2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1X3X2
        path: ''
        startLine: 1365
      syntax:
        content:
          CSharp: X1X3X2 = 1
          VB: X1X3X2 = 1
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationConvention.X2X1X3
      commentId: F:Engine.Core.Maths.RotationConvention.X2X1X3
      language: CSharp
      name:
        CSharp: X2X1X3
        VB: X2X1X3
      nameWithType:
        CSharp: RotationConvention.X2X1X3
        VB: RotationConvention.X2X1X3
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X2X1X3
        VB: Engine.Core.Maths.RotationConvention.X2X1X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2X1X3
        path: ''
        startLine: 1366
      syntax:
        content:
          CSharp: X2X1X3 = 2
          VB: X2X1X3 = 2
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationConvention.X2X3X1
      commentId: F:Engine.Core.Maths.RotationConvention.X2X3X1
      language: CSharp
      name:
        CSharp: X2X3X1
        VB: X2X3X1
      nameWithType:
        CSharp: RotationConvention.X2X3X1
        VB: RotationConvention.X2X3X1
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X2X3X1
        VB: Engine.Core.Maths.RotationConvention.X2X3X1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2X3X1
        path: ''
        startLine: 1367
      syntax:
        content:
          CSharp: X2X3X1 = 3
          VB: X2X3X1 = 3
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationConvention.X3X1X2
      commentId: F:Engine.Core.Maths.RotationConvention.X3X1X2
      language: CSharp
      name:
        CSharp: X3X1X2
        VB: X3X1X2
      nameWithType:
        CSharp: RotationConvention.X3X1X2
        VB: RotationConvention.X3X1X2
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X3X1X2
        VB: Engine.Core.Maths.RotationConvention.X3X1X2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X3X1X2
        path: ''
        startLine: 1368
      syntax:
        content:
          CSharp: X3X1X2 = 4
          VB: X3X1X2 = 4
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationConvention.X3X2X1
      commentId: F:Engine.Core.Maths.RotationConvention.X3X2X1
      language: CSharp
      name:
        CSharp: X3X2X1
        VB: X3X2X1
      nameWithType:
        CSharp: RotationConvention.X3X2X1
        VB: RotationConvention.X3X2X1
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationConvention.X3X2X1
        VB: Engine.Core.Maths.RotationConvention.X3X2X1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X3X2X1
        path: ''
        startLine: 1369
      syntax:
        content:
          CSharp: X3X2X1 = 5
          VB: X3X2X1 = 5
        return:
          type: Engine.Core.Maths.RotationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.ShearConvention
    commentId: T:Engine.Core.Maths.ShearConvention
    language: CSharp
    name:
      CSharp: ShearConvention
      VB: ShearConvention
    nameWithType:
      CSharp: ShearConvention
      VB: ShearConvention
    qualifiedName:
      CSharp: Engine.Core.Maths.ShearConvention
      VB: Engine.Core.Maths.ShearConvention
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: ShearConvention
      path: ''
      startLine: 1372
    syntax:
      content:
        CSharp: public enum ShearConvention
        VB: Public Enum ShearConvention
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.ShearConvention.SymmetricTan
      commentId: F:Engine.Core.Maths.ShearConvention.SymmetricTan
      language: CSharp
      name:
        CSharp: SymmetricTan
        VB: SymmetricTan
      nameWithType:
        CSharp: ShearConvention.SymmetricTan
        VB: ShearConvention.SymmetricTan
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearConvention.SymmetricTan
        VB: Engine.Core.Maths.ShearConvention.SymmetricTan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SymmetricTan
        path: ''
        startLine: 1374
      syntax:
        content:
          CSharp: SymmetricTan = 0
          VB: SymmetricTan = 0
        return:
          type: Engine.Core.Maths.ShearConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.ShearConvention.SymmetricCot
      commentId: F:Engine.Core.Maths.ShearConvention.SymmetricCot
      language: CSharp
      name:
        CSharp: SymmetricCot
        VB: SymmetricCot
      nameWithType:
        CSharp: ShearConvention.SymmetricCot
        VB: ShearConvention.SymmetricCot
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearConvention.SymmetricCot
        VB: Engine.Core.Maths.ShearConvention.SymmetricCot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SymmetricCot
        path: ''
        startLine: 1375
      syntax:
        content:
          CSharp: SymmetricCot = 1
          VB: SymmetricCot = 1
        return:
          type: Engine.Core.Maths.ShearConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.ShearConvention.AsymmetricTan
      commentId: F:Engine.Core.Maths.ShearConvention.AsymmetricTan
      language: CSharp
      name:
        CSharp: AsymmetricTan
        VB: AsymmetricTan
      nameWithType:
        CSharp: ShearConvention.AsymmetricTan
        VB: ShearConvention.AsymmetricTan
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearConvention.AsymmetricTan
        VB: Engine.Core.Maths.ShearConvention.AsymmetricTan
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AsymmetricTan
        path: ''
        startLine: 1376
      syntax:
        content:
          CSharp: AsymmetricTan = 2
          VB: AsymmetricTan = 2
        return:
          type: Engine.Core.Maths.ShearConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.ShearConvention.AsymmetricCot
      commentId: F:Engine.Core.Maths.ShearConvention.AsymmetricCot
      language: CSharp
      name:
        CSharp: AsymmetricCot
        VB: AsymmetricCot
      nameWithType:
        CSharp: ShearConvention.AsymmetricCot
        VB: ShearConvention.AsymmetricCot
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearConvention.AsymmetricCot
        VB: Engine.Core.Maths.ShearConvention.AsymmetricCot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AsymmetricCot
        path: ''
        startLine: 1377
      syntax:
        content:
          CSharp: AsymmetricCot = 3
          VB: AsymmetricCot = 3
        return:
          type: Engine.Core.Maths.ShearConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.RotationType
    commentId: T:Engine.Core.Maths.RotationType
    language: CSharp
    name:
      CSharp: RotationType
      VB: RotationType
    nameWithType:
      CSharp: RotationType
      VB: RotationType
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationType
      VB: Engine.Core.Maths.RotationType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationType
      path: ''
      startLine: 1380
    syntax:
      content:
        CSharp: public enum RotationType
        VB: Public Enum RotationType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.RotationType.RotationMatrix
      commentId: F:Engine.Core.Maths.RotationType.RotationMatrix
      language: CSharp
      name:
        CSharp: RotationMatrix
        VB: RotationMatrix
      nameWithType:
        CSharp: RotationType.RotationMatrix
        VB: RotationType.RotationMatrix
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationType.RotationMatrix
        VB: Engine.Core.Maths.RotationType.RotationMatrix
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RotationMatrix
        path: ''
        startLine: 1382
      syntax:
        content:
          CSharp: RotationMatrix = 0
          VB: RotationMatrix = 0
        return:
          type: Engine.Core.Maths.RotationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationType.Quaternion
      commentId: F:Engine.Core.Maths.RotationType.Quaternion
      language: CSharp
      name:
        CSharp: Quaternion
        VB: Quaternion
      nameWithType:
        CSharp: RotationType.Quaternion
        VB: RotationType.Quaternion
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationType.Quaternion
        VB: Engine.Core.Maths.RotationType.Quaternion
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Quaternion
        path: ''
        startLine: 1383
      syntax:
        content:
          CSharp: Quaternion = 1
          VB: Quaternion = 1
        return:
          type: Engine.Core.Maths.RotationType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.BasePlane
    commentId: T:Engine.Core.Maths.BasePlane
    language: CSharp
    name:
      CSharp: BasePlane
      VB: BasePlane
    nameWithType:
      CSharp: BasePlane
      VB: BasePlane
    qualifiedName:
      CSharp: Engine.Core.Maths.BasePlane
      VB: Engine.Core.Maths.BasePlane
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: BasePlane
      path: ''
      startLine: 1386
    syntax:
      content:
        CSharp: public enum BasePlane
        VB: Public Enum BasePlane
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.BasePlane.X1X2
      commentId: F:Engine.Core.Maths.BasePlane.X1X2
      language: CSharp
      name:
        CSharp: X1X2
        VB: X1X2
      nameWithType:
        CSharp: BasePlane.X1X2
        VB: BasePlane.X1X2
      qualifiedName:
        CSharp: Engine.Core.Maths.BasePlane.X1X2
        VB: Engine.Core.Maths.BasePlane.X1X2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1X2
        path: ''
        startLine: 1388
      syntax:
        content:
          CSharp: X1X2 = 0
          VB: X1X2 = 0
        return:
          type: Engine.Core.Maths.BasePlane
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.BasePlane.X2X3
      commentId: F:Engine.Core.Maths.BasePlane.X2X3
      language: CSharp
      name:
        CSharp: X2X3
        VB: X2X3
      nameWithType:
        CSharp: BasePlane.X2X3
        VB: BasePlane.X2X3
      qualifiedName:
        CSharp: Engine.Core.Maths.BasePlane.X2X3
        VB: Engine.Core.Maths.BasePlane.X2X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2X3
        path: ''
        startLine: 1389
      syntax:
        content:
          CSharp: X2X3 = 1
          VB: X2X3 = 1
        return:
          type: Engine.Core.Maths.BasePlane
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.BasePlane.X1X3
      commentId: F:Engine.Core.Maths.BasePlane.X1X3
      language: CSharp
      name:
        CSharp: X1X3
        VB: X1X3
      nameWithType:
        CSharp: BasePlane.X1X3
        VB: BasePlane.X1X3
      qualifiedName:
        CSharp: Engine.Core.Maths.BasePlane.X1X3
        VB: Engine.Core.Maths.BasePlane.X1X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1X3
        path: ''
        startLine: 1390
      syntax:
        content:
          CSharp: X1X3 = 2
          VB: X1X3 = 2
        return:
          type: Engine.Core.Maths.BasePlane
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.BaseDirections2D
    commentId: T:Engine.Core.Maths.BaseDirections2D
    language: CSharp
    name:
      CSharp: BaseDirections2D
      VB: BaseDirections2D
    nameWithType:
      CSharp: BaseDirections2D
      VB: BaseDirections2D
    qualifiedName:
      CSharp: Engine.Core.Maths.BaseDirections2D
      VB: Engine.Core.Maths.BaseDirections2D
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: BaseDirections2D
      path: ''
      startLine: 1393
    syntax:
      content:
        CSharp: public enum BaseDirections2D
        VB: Public Enum BaseDirections2D
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.BaseDirections2D.Horizontal
      commentId: F:Engine.Core.Maths.BaseDirections2D.Horizontal
      language: CSharp
      name:
        CSharp: Horizontal
        VB: Horizontal
      nameWithType:
        CSharp: BaseDirections2D.Horizontal
        VB: BaseDirections2D.Horizontal
      qualifiedName:
        CSharp: Engine.Core.Maths.BaseDirections2D.Horizontal
        VB: Engine.Core.Maths.BaseDirections2D.Horizontal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Horizontal
        path: ''
        startLine: 1395
      syntax:
        content:
          CSharp: Horizontal = 0
          VB: Horizontal = 0
        return:
          type: Engine.Core.Maths.BaseDirections2D
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.BaseDirections2D.Vertical
      commentId: F:Engine.Core.Maths.BaseDirections2D.Vertical
      language: CSharp
      name:
        CSharp: Vertical
        VB: Vertical
      nameWithType:
        CSharp: BaseDirections2D.Vertical
        VB: BaseDirections2D.Vertical
      qualifiedName:
        CSharp: Engine.Core.Maths.BaseDirections2D.Vertical
        VB: Engine.Core.Maths.BaseDirections2D.Vertical
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Vertical
        path: ''
        startLine: 1396
      syntax:
        content:
          CSharp: Vertical = 1
          VB: Vertical = 1
        return:
          type: Engine.Core.Maths.BaseDirections2D
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.TransformationConvention
    commentId: T:Engine.Core.Maths.TransformationConvention
    language: CSharp
    name:
      CSharp: TransformationConvention
      VB: TransformationConvention
    nameWithType:
      CSharp: TransformationConvention
      VB: TransformationConvention
    qualifiedName:
      CSharp: Engine.Core.Maths.TransformationConvention
      VB: Engine.Core.Maths.TransformationConvention
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: TransformationConvention
      path: ''
      startLine: 1399
    syntax:
      content:
        CSharp: public enum TransformationConvention
        VB: Public Enum TransformationConvention
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.TransformationConvention.TDRS
      commentId: F:Engine.Core.Maths.TransformationConvention.TDRS
      language: CSharp
      name:
        CSharp: TDRS
        VB: TDRS
      nameWithType:
        CSharp: TransformationConvention.TDRS
        VB: TransformationConvention.TDRS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TDRS
        VB: Engine.Core.Maths.TransformationConvention.TDRS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TDRS
        path: ''
        startLine: 1401
      syntax:
        content:
          CSharp: TDRS = 0
          VB: TDRS = 0
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.TRDS
      commentId: F:Engine.Core.Maths.TransformationConvention.TRDS
      language: CSharp
      name:
        CSharp: TRDS
        VB: TRDS
      nameWithType:
        CSharp: TransformationConvention.TRDS
        VB: TransformationConvention.TRDS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TRDS
        VB: Engine.Core.Maths.TransformationConvention.TRDS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TRDS
        path: ''
        startLine: 1402
      syntax:
        content:
          CSharp: TRDS = 1
          VB: TRDS = 1
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.TDSR
      commentId: F:Engine.Core.Maths.TransformationConvention.TDSR
      language: CSharp
      name:
        CSharp: TDSR
        VB: TDSR
      nameWithType:
        CSharp: TransformationConvention.TDSR
        VB: TransformationConvention.TDSR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TDSR
        VB: Engine.Core.Maths.TransformationConvention.TDSR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TDSR
        path: ''
        startLine: 1403
      syntax:
        content:
          CSharp: TDSR = 2
          VB: TDSR = 2
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.TRSD
      commentId: F:Engine.Core.Maths.TransformationConvention.TRSD
      language: CSharp
      name:
        CSharp: TRSD
        VB: TRSD
      nameWithType:
        CSharp: TransformationConvention.TRSD
        VB: TransformationConvention.TRSD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TRSD
        VB: Engine.Core.Maths.TransformationConvention.TRSD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TRSD
        path: ''
        startLine: 1404
      syntax:
        content:
          CSharp: TRSD = 3
          VB: TRSD = 3
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.TSRD
      commentId: F:Engine.Core.Maths.TransformationConvention.TSRD
      language: CSharp
      name:
        CSharp: TSRD
        VB: TSRD
      nameWithType:
        CSharp: TransformationConvention.TSRD
        VB: TransformationConvention.TSRD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TSRD
        VB: Engine.Core.Maths.TransformationConvention.TSRD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TSRD
        path: ''
        startLine: 1405
      syntax:
        content:
          CSharp: TSRD = 4
          VB: TSRD = 4
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.TSDR
      commentId: F:Engine.Core.Maths.TransformationConvention.TSDR
      language: CSharp
      name:
        CSharp: TSDR
        VB: TSDR
      nameWithType:
        CSharp: TransformationConvention.TSDR
        VB: TransformationConvention.TSDR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.TSDR
        VB: Engine.Core.Maths.TransformationConvention.TSDR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: TSDR
        path: ''
        startLine: 1406
      syntax:
        content:
          CSharp: TSDR = 5
          VB: TSDR = 5
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DTRS
      commentId: F:Engine.Core.Maths.TransformationConvention.DTRS
      language: CSharp
      name:
        CSharp: DTRS
        VB: DTRS
      nameWithType:
        CSharp: TransformationConvention.DTRS
        VB: TransformationConvention.DTRS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DTRS
        VB: Engine.Core.Maths.TransformationConvention.DTRS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DTRS
        path: ''
        startLine: 1408
      syntax:
        content:
          CSharp: DTRS = 6
          VB: DTRS = 6
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RTDS
      commentId: F:Engine.Core.Maths.TransformationConvention.RTDS
      language: CSharp
      name:
        CSharp: RTDS
        VB: RTDS
      nameWithType:
        CSharp: TransformationConvention.RTDS
        VB: TransformationConvention.RTDS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RTDS
        VB: Engine.Core.Maths.TransformationConvention.RTDS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RTDS
        path: ''
        startLine: 1409
      syntax:
        content:
          CSharp: RTDS = 7
          VB: RTDS = 7
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DTSR
      commentId: F:Engine.Core.Maths.TransformationConvention.DTSR
      language: CSharp
      name:
        CSharp: DTSR
        VB: DTSR
      nameWithType:
        CSharp: TransformationConvention.DTSR
        VB: TransformationConvention.DTSR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DTSR
        VB: Engine.Core.Maths.TransformationConvention.DTSR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DTSR
        path: ''
        startLine: 1410
      syntax:
        content:
          CSharp: DTSR = 8
          VB: DTSR = 8
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RTSD
      commentId: F:Engine.Core.Maths.TransformationConvention.RTSD
      language: CSharp
      name:
        CSharp: RTSD
        VB: RTSD
      nameWithType:
        CSharp: TransformationConvention.RTSD
        VB: TransformationConvention.RTSD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RTSD
        VB: Engine.Core.Maths.TransformationConvention.RTSD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RTSD
        path: ''
        startLine: 1411
      syntax:
        content:
          CSharp: RTSD = 9
          VB: RTSD = 9
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.STRD
      commentId: F:Engine.Core.Maths.TransformationConvention.STRD
      language: CSharp
      name:
        CSharp: STRD
        VB: STRD
      nameWithType:
        CSharp: TransformationConvention.STRD
        VB: TransformationConvention.STRD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.STRD
        VB: Engine.Core.Maths.TransformationConvention.STRD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: STRD
        path: ''
        startLine: 1412
      syntax:
        content:
          CSharp: STRD = 10
          VB: STRD = 10
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.STDR
      commentId: F:Engine.Core.Maths.TransformationConvention.STDR
      language: CSharp
      name:
        CSharp: STDR
        VB: STDR
      nameWithType:
        CSharp: TransformationConvention.STDR
        VB: TransformationConvention.STDR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.STDR
        VB: Engine.Core.Maths.TransformationConvention.STDR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: STDR
        path: ''
        startLine: 1413
      syntax:
        content:
          CSharp: STDR = 11
          VB: STDR = 11
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DRTS
      commentId: F:Engine.Core.Maths.TransformationConvention.DRTS
      language: CSharp
      name:
        CSharp: DRTS
        VB: DRTS
      nameWithType:
        CSharp: TransformationConvention.DRTS
        VB: TransformationConvention.DRTS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DRTS
        VB: Engine.Core.Maths.TransformationConvention.DRTS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DRTS
        path: ''
        startLine: 1415
      syntax:
        content:
          CSharp: DRTS = 12
          VB: DRTS = 12
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RDTS
      commentId: F:Engine.Core.Maths.TransformationConvention.RDTS
      language: CSharp
      name:
        CSharp: RDTS
        VB: RDTS
      nameWithType:
        CSharp: TransformationConvention.RDTS
        VB: TransformationConvention.RDTS
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RDTS
        VB: Engine.Core.Maths.TransformationConvention.RDTS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RDTS
        path: ''
        startLine: 1416
      syntax:
        content:
          CSharp: RDTS = 13
          VB: RDTS = 13
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DSTR
      commentId: F:Engine.Core.Maths.TransformationConvention.DSTR
      language: CSharp
      name:
        CSharp: DSTR
        VB: DSTR
      nameWithType:
        CSharp: TransformationConvention.DSTR
        VB: TransformationConvention.DSTR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DSTR
        VB: Engine.Core.Maths.TransformationConvention.DSTR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DSTR
        path: ''
        startLine: 1417
      syntax:
        content:
          CSharp: DSTR = 14
          VB: DSTR = 14
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RSTD
      commentId: F:Engine.Core.Maths.TransformationConvention.RSTD
      language: CSharp
      name:
        CSharp: RSTD
        VB: RSTD
      nameWithType:
        CSharp: TransformationConvention.RSTD
        VB: TransformationConvention.RSTD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RSTD
        VB: Engine.Core.Maths.TransformationConvention.RSTD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RSTD
        path: ''
        startLine: 1418
      syntax:
        content:
          CSharp: RSTD = 15
          VB: RSTD = 15
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.SRTD
      commentId: F:Engine.Core.Maths.TransformationConvention.SRTD
      language: CSharp
      name:
        CSharp: SRTD
        VB: SRTD
      nameWithType:
        CSharp: TransformationConvention.SRTD
        VB: TransformationConvention.SRTD
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.SRTD
        VB: Engine.Core.Maths.TransformationConvention.SRTD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SRTD
        path: ''
        startLine: 1419
      syntax:
        content:
          CSharp: SRTD = 16
          VB: SRTD = 16
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.SDTR
      commentId: F:Engine.Core.Maths.TransformationConvention.SDTR
      language: CSharp
      name:
        CSharp: SDTR
        VB: SDTR
      nameWithType:
        CSharp: TransformationConvention.SDTR
        VB: TransformationConvention.SDTR
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.SDTR
        VB: Engine.Core.Maths.TransformationConvention.SDTR
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SDTR
        path: ''
        startLine: 1420
      syntax:
        content:
          CSharp: SDTR = 17
          VB: SDTR = 17
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DRST
      commentId: F:Engine.Core.Maths.TransformationConvention.DRST
      language: CSharp
      name:
        CSharp: DRST
        VB: DRST
      nameWithType:
        CSharp: TransformationConvention.DRST
        VB: TransformationConvention.DRST
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DRST
        VB: Engine.Core.Maths.TransformationConvention.DRST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DRST
        path: ''
        startLine: 1422
      syntax:
        content:
          CSharp: DRST = 18
          VB: DRST = 18
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RDST
      commentId: F:Engine.Core.Maths.TransformationConvention.RDST
      language: CSharp
      name:
        CSharp: RDST
        VB: RDST
      nameWithType:
        CSharp: TransformationConvention.RDST
        VB: TransformationConvention.RDST
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RDST
        VB: Engine.Core.Maths.TransformationConvention.RDST
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RDST
        path: ''
        startLine: 1423
      syntax:
        content:
          CSharp: RDST = 19
          VB: RDST = 19
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.DSRT
      commentId: F:Engine.Core.Maths.TransformationConvention.DSRT
      language: CSharp
      name:
        CSharp: DSRT
        VB: DSRT
      nameWithType:
        CSharp: TransformationConvention.DSRT
        VB: TransformationConvention.DSRT
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.DSRT
        VB: Engine.Core.Maths.TransformationConvention.DSRT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DSRT
        path: ''
        startLine: 1424
      syntax:
        content:
          CSharp: DSRT = 20
          VB: DSRT = 20
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.RSDT
      commentId: F:Engine.Core.Maths.TransformationConvention.RSDT
      language: CSharp
      name:
        CSharp: RSDT
        VB: RSDT
      nameWithType:
        CSharp: TransformationConvention.RSDT
        VB: TransformationConvention.RSDT
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.RSDT
        VB: Engine.Core.Maths.TransformationConvention.RSDT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RSDT
        path: ''
        startLine: 1425
      syntax:
        content:
          CSharp: RSDT = 21
          VB: RSDT = 21
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.SRDT
      commentId: F:Engine.Core.Maths.TransformationConvention.SRDT
      language: CSharp
      name:
        CSharp: SRDT
        VB: SRDT
      nameWithType:
        CSharp: TransformationConvention.SRDT
        VB: TransformationConvention.SRDT
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.SRDT
        VB: Engine.Core.Maths.TransformationConvention.SRDT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SRDT
        path: ''
        startLine: 1426
      syntax:
        content:
          CSharp: SRDT = 22
          VB: SRDT = 22
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.TransformationConvention.SDRT
      commentId: F:Engine.Core.Maths.TransformationConvention.SDRT
      language: CSharp
      name:
        CSharp: SDRT
        VB: SDRT
      nameWithType:
        CSharp: TransformationConvention.SDRT
        VB: TransformationConvention.SDRT
      qualifiedName:
        CSharp: Engine.Core.Maths.TransformationConvention.SDRT
        VB: Engine.Core.Maths.TransformationConvention.SDRT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SDRT
        path: ''
        startLine: 1427
      syntax:
        content:
          CSharp: SDRT = 23
          VB: SDRT = 23
        return:
          type: Engine.Core.Maths.TransformationConvention
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.RotationMeasure
    commentId: T:Engine.Core.Maths.RotationMeasure
    language: CSharp
    name:
      CSharp: RotationMeasure
      VB: RotationMeasure
    nameWithType:
      CSharp: RotationMeasure
      VB: RotationMeasure
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationMeasure
      VB: Engine.Core.Maths.RotationMeasure
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationMeasure
      path: ''
      startLine: 1430
    syntax:
      content:
        CSharp: public enum RotationMeasure
        VB: Public Enum RotationMeasure
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.RotationMeasure.RAD
      commentId: F:Engine.Core.Maths.RotationMeasure.RAD
      language: CSharp
      name:
        CSharp: RAD
        VB: RAD
      nameWithType:
        CSharp: RotationMeasure.RAD
        VB: RotationMeasure.RAD
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMeasure.RAD
        VB: Engine.Core.Maths.RotationMeasure.RAD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RAD
        path: ''
        startLine: 1432
      syntax:
        content:
          CSharp: RAD = 0
          VB: RAD = 0
        return:
          type: Engine.Core.Maths.RotationMeasure
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.RotationMeasure.DEG
      commentId: F:Engine.Core.Maths.RotationMeasure.DEG
      language: CSharp
      name:
        CSharp: DEG
        VB: DEG
      nameWithType:
        CSharp: RotationMeasure.DEG
        VB: RotationMeasure.DEG
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMeasure.DEG
        VB: Engine.Core.Maths.RotationMeasure.DEG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DEG
        path: ''
        startLine: 1433
      syntax:
        content:
          CSharp: DEG = 1
          VB: DEG = 1
        return:
          type: Engine.Core.Maths.RotationMeasure
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.FloatEnumerator
    commentId: T:Engine.Core.Maths.FloatEnumerator
    language: CSharp
    name:
      CSharp: FloatEnumerator
      VB: FloatEnumerator
    nameWithType:
      CSharp: FloatEnumerator
      VB: FloatEnumerator
    qualifiedName:
      CSharp: Engine.Core.Maths.FloatEnumerator
      VB: Engine.Core.Maths.FloatEnumerator
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: FloatEnumerator
      path: ''
      startLine: 1446
    syntax:
      content:
        CSharp: 'public class FloatEnumerator : IEnumerator<float>, IEnumerator, IDisposable'
        VB: >-
          Public Class FloatEnumerator

              Implements IEnumerator(Of Single), IEnumerator, IDisposable
    inheritance:
    - System.Object
    implements:
    - System.Collections.Generic.IEnumerator{System.Single}
    - System.Collections.IEnumerator
    - System.IDisposable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.FloatEnumerator.Current
      commentId: P:Engine.Core.Maths.FloatEnumerator.Current
      language: CSharp
      name:
        CSharp: Current
        VB: Current
      nameWithType:
        CSharp: FloatEnumerator.Current
        VB: FloatEnumerator.Current
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.Current
        VB: Engine.Core.Maths.FloatEnumerator.Current
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Current
        path: ''
        startLine: 1452
      syntax:
        content:
          CSharp: public float Current { get; }
          VB: Public ReadOnly Property Current As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.FloatEnumerator.Current*
      implements:
      - System.Collections.Generic.IEnumerator{System.Single}.Current
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.FloatEnumerator.#ctor(System.Single[])
      commentId: M:Engine.Core.Maths.FloatEnumerator.#ctor(System.Single[])
      language: CSharp
      name:
        CSharp: FloatEnumerator(Single[])
        VB: FloatEnumerator(Single())
      nameWithType:
        CSharp: FloatEnumerator.FloatEnumerator(Single[])
        VB: FloatEnumerator.FloatEnumerator(Single())
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.FloatEnumerator(System.Single[])
        VB: Engine.Core.Maths.FloatEnumerator.FloatEnumerator(System.Single())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1469
      syntax:
        content:
          CSharp: public FloatEnumerator(float[] data)
          VB: Public Sub New(data As Single())
        parameters:
        - id: data
          type: System.Single[]
      overload: Engine.Core.Maths.FloatEnumerator.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.FloatEnumerator.MoveNext
      commentId: M:Engine.Core.Maths.FloatEnumerator.MoveNext
      language: CSharp
      name:
        CSharp: MoveNext()
        VB: MoveNext()
      nameWithType:
        CSharp: FloatEnumerator.MoveNext()
        VB: FloatEnumerator.MoveNext()
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.MoveNext()
        VB: Engine.Core.Maths.FloatEnumerator.MoveNext()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: MoveNext
        path: ''
        startLine: 1474
      syntax:
        content:
          CSharp: public bool MoveNext()
          VB: Public Function MoveNext As Boolean
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.FloatEnumerator.MoveNext*
      implements:
      - System.Collections.IEnumerator.MoveNext
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.FloatEnumerator.Reset
      commentId: M:Engine.Core.Maths.FloatEnumerator.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: FloatEnumerator.Reset()
        VB: FloatEnumerator.Reset()
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.Reset()
        VB: Engine.Core.Maths.FloatEnumerator.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Reset
        path: ''
        startLine: 1480
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: Engine.Core.Maths.FloatEnumerator.Reset*
      implements:
      - System.Collections.IEnumerator.Reset
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
      commentId: M:Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
      language: CSharp
      name:
        CSharp: Dispose(Boolean)
        VB: Dispose(Boolean)
      nameWithType:
        CSharp: FloatEnumerator.Dispose(Boolean)
        VB: FloatEnumerator.Dispose(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
        VB: Engine.Core.Maths.FloatEnumerator.Dispose(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dispose
        path: ''
        startLine: 1486
      syntax:
        content:
          CSharp: protected virtual void Dispose(bool disposing)
          VB: Protected Overridable Sub Dispose(disposing As Boolean)
        parameters:
        - id: disposing
          type: System.Boolean
      overload: Engine.Core.Maths.FloatEnumerator.Dispose*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: Engine.Core.Maths.FloatEnumerator.Dispose
      commentId: M:Engine.Core.Maths.FloatEnumerator.Dispose
      language: CSharp
      name:
        CSharp: Dispose()
        VB: Dispose()
      nameWithType:
        CSharp: FloatEnumerator.Dispose()
        VB: FloatEnumerator.Dispose()
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.Dispose()
        VB: Engine.Core.Maths.FloatEnumerator.Dispose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dispose
        path: ''
        startLine: 1502
      syntax:
        content:
          CSharp: public void Dispose()
          VB: Public Sub Dispose
      overload: Engine.Core.Maths.FloatEnumerator.Dispose*
      implements:
      - System.IDisposable.Dispose
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.FloatEnumerator.Finalize
      commentId: M:Engine.Core.Maths.FloatEnumerator.Finalize
      language: CSharp
      name:
        CSharp: Finalize()
        VB: Finalize()
      nameWithType:
        CSharp: FloatEnumerator.Finalize()
        VB: FloatEnumerator.Finalize()
      qualifiedName:
        CSharp: Engine.Core.Maths.FloatEnumerator.Finalize()
        VB: Engine.Core.Maths.FloatEnumerator.Finalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Finalize
        path: ''
        startLine: 1509
      syntax:
        content:
          CSharp: protected void Finalize()
          VB: Protected Sub Finalize
      overload: Engine.Core.Maths.FloatEnumerator.Finalize*
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
  - id: Engine.Core.Maths.Gauss
    commentId: T:Engine.Core.Maths.Gauss
    language: CSharp
    name:
      CSharp: Gauss
      VB: Gauss
    nameWithType:
      CSharp: Gauss
      VB: Gauss
    qualifiedName:
      CSharp: Engine.Core.Maths.Gauss
      VB: Engine.Core.Maths.Gauss
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Gauss
      path: ''
      startLine: 1524
    syntax:
      content:
        CSharp: public class Gauss
        VB: Public Class Gauss
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Gauss.GaussianElimination(Engine.Core.Maths.AugmentedMatrix,Engine.Core.Maths.Gauss.EliminationResult@)
      commentId: M:Engine.Core.Maths.Gauss.GaussianElimination(Engine.Core.Maths.AugmentedMatrix,Engine.Core.Maths.Gauss.EliminationResult@)
      language: CSharp
      name:
        CSharp: GaussianElimination(AugmentedMatrix, out Gauss.EliminationResult)
        VB: GaussianElimination(AugmentedMatrix, ByRef Gauss.EliminationResult)
      nameWithType:
        CSharp: Gauss.GaussianElimination(AugmentedMatrix, out Gauss.EliminationResult)
        VB: Gauss.GaussianElimination(AugmentedMatrix, ByRef Gauss.EliminationResult)
      qualifiedName:
        CSharp: Engine.Core.Maths.Gauss.GaussianElimination(Engine.Core.Maths.AugmentedMatrix, out Engine.Core.Maths.Gauss.EliminationResult)
        VB: Engine.Core.Maths.Gauss.GaussianElimination(Engine.Core.Maths.AugmentedMatrix, ByRef Engine.Core.Maths.Gauss.EliminationResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GaussianElimination
        path: ''
        startLine: 1532
      summary: "\nTakes only 3x3 Matrix and 3x1 Augmentation\n"
      example: []
      syntax:
        content:
          CSharp: public static bool GaussianElimination(AugmentedMatrix matrix, out Gauss.EliminationResult result)
          VB: Public Shared Function GaussianElimination(matrix As AugmentedMatrix, ByRef result As Gauss.EliminationResult) As Boolean
        parameters:
        - id: matrix
          type: Engine.Core.Maths.AugmentedMatrix
          description: ''
        - id: result
          type: Engine.Core.Maths.Gauss.EliminationResult
          description: ''
        return:
          type: System.Boolean
          description: ''
      overload: Engine.Core.Maths.Gauss.GaussianElimination*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.Gauss.EliminationResult
    commentId: T:Engine.Core.Maths.Gauss.EliminationResult
    language: CSharp
    name:
      CSharp: Gauss.EliminationResult
      VB: Gauss.EliminationResult
    nameWithType:
      CSharp: Gauss.EliminationResult
      VB: Gauss.EliminationResult
    qualifiedName:
      CSharp: Engine.Core.Maths.Gauss.EliminationResult
      VB: Engine.Core.Maths.Gauss.EliminationResult
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: EliminationResult
      path: ''
      startLine: 1639
    syntax:
      content:
        CSharp: public class EliminationResult
        VB: Public Class EliminationResult
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Gauss.EliminationResult.Floats
      commentId: F:Engine.Core.Maths.Gauss.EliminationResult.Floats
      language: CSharp
      name:
        CSharp: Floats
        VB: Floats
      nameWithType:
        CSharp: Gauss.EliminationResult.Floats
        VB: Gauss.EliminationResult.Floats
      qualifiedName:
        CSharp: Engine.Core.Maths.Gauss.EliminationResult.Floats
        VB: Engine.Core.Maths.Gauss.EliminationResult.Floats
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Floats
        path: ''
        startLine: 1641
      syntax:
        content:
          CSharp: public List<float> Floats
          VB: Public Floats As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Gauss.EliminationResult.Straight
      commentId: F:Engine.Core.Maths.Gauss.EliminationResult.Straight
      language: CSharp
      name:
        CSharp: Straight
        VB: Straight
      nameWithType:
        CSharp: Gauss.EliminationResult.Straight
        VB: Gauss.EliminationResult.Straight
      qualifiedName:
        CSharp: Engine.Core.Maths.Gauss.EliminationResult.Straight
        VB: Engine.Core.Maths.Gauss.EliminationResult.Straight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Straight
        path: ''
        startLine: 1642
      syntax:
        content:
          CSharp: public Straight Straight
          VB: Public Straight As Straight
        return:
          type: Engine.Core.Maths.Straight
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Gauss.EliminationResult.Plane
      commentId: F:Engine.Core.Maths.Gauss.EliminationResult.Plane
      language: CSharp
      name:
        CSharp: Plane
        VB: Plane
      nameWithType:
        CSharp: Gauss.EliminationResult.Plane
        VB: Gauss.EliminationResult.Plane
      qualifiedName:
        CSharp: Engine.Core.Maths.Gauss.EliminationResult.Plane
        VB: Engine.Core.Maths.Gauss.EliminationResult.Plane
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Plane
        path: ''
        startLine: 1643
      syntax:
        content:
          CSharp: public Plane Plane
          VB: Public Plane As Plane
        return:
          type: Engine.Core.Maths.Plane
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.GCS3
    commentId: T:Engine.Core.Maths.GCS3
    language: CSharp
    name:
      CSharp: GCS3
      VB: GCS3
    nameWithType:
      CSharp: GCS3
      VB: GCS3
    qualifiedName:
      CSharp: Engine.Core.Maths.GCS3
      VB: Engine.Core.Maths.GCS3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: GCS3
      path: ''
      startLine: 1660
    syntax:
      content:
        CSharp: public class GCS3
        VB: Public Class GCS3
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.GCS3.Axes
      commentId: F:Engine.Core.Maths.GCS3.Axes
      language: CSharp
      name:
        CSharp: Axes
        VB: Axes
      nameWithType:
        CSharp: GCS3.Axes
        VB: GCS3.Axes
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.Axes
        VB: Engine.Core.Maths.GCS3.Axes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Axes
        path: ''
        startLine: 1662
      syntax:
        content:
          CSharp: public static readonly Straight[] Axes
          VB: Public Shared ReadOnly Axes As Straight()
        return:
          type: Engine.Core.Maths.Straight[]
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.GCS3.LocalSystems
      commentId: F:Engine.Core.Maths.GCS3.LocalSystems
      language: CSharp
      name:
        CSharp: LocalSystems
        VB: LocalSystems
      nameWithType:
        CSharp: GCS3.LocalSystems
        VB: GCS3.LocalSystems
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.LocalSystems
        VB: Engine.Core.Maths.GCS3.LocalSystems
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: LocalSystems
        path: ''
        startLine: 1664
      syntax:
        content:
          CSharp: public List<LCS3> LocalSystems
          VB: Public LocalSystems As List(Of LCS3)
        return:
          type: System.Collections.Generic.List{LCS3}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.LightSources
      commentId: F:Engine.Core.Maths.GCS3.LightSources
      language: CSharp
      name:
        CSharp: LightSources
        VB: LightSources
      nameWithType:
        CSharp: GCS3.LightSources
        VB: GCS3.LightSources
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.LightSources
        VB: Engine.Core.Maths.GCS3.LightSources
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: LightSources
        path: ''
        startLine: 1665
      syntax:
        content:
          CSharp: public List<LightSource> LightSources
          VB: Public LightSources As List(Of LightSource)
        return:
          type: System.Collections.Generic.List{LightSource}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.#ctor
      commentId: M:Engine.Core.Maths.GCS3.#ctor
      language: CSharp
      name:
        CSharp: GCS3()
        VB: GCS3()
      nameWithType:
        CSharp: GCS3.GCS3()
        VB: GCS3.GCS3()
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.GCS3()
        VB: Engine.Core.Maths.GCS3.GCS3()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 1667
      syntax:
        content:
          CSharp: public GCS3()
          VB: Public Sub New
      overload: Engine.Core.Maths.GCS3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.Add(LCS3)
      commentId: M:Engine.Core.Maths.GCS3.Add(LCS3)
      language: CSharp
      name:
        CSharp: Add(LCS3)
        VB: Add(LCS3)
      nameWithType:
        CSharp: GCS3.Add(LCS3)
        VB: GCS3.Add(LCS3)
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.Add(LCS3)
        VB: Engine.Core.Maths.GCS3.Add(LCS3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Add
        path: ''
        startLine: 1672
      syntax:
        content:
          CSharp: public void Add(LCS3 system)
          VB: Public Sub Add(system As LCS3)
        parameters:
        - id: system
          type: LCS3
      overload: Engine.Core.Maths.GCS3.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.Remove(LCS3)
      commentId: M:Engine.Core.Maths.GCS3.Remove(LCS3)
      language: CSharp
      name:
        CSharp: Remove(LCS3)
        VB: Remove(LCS3)
      nameWithType:
        CSharp: GCS3.Remove(LCS3)
        VB: GCS3.Remove(LCS3)
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.Remove(LCS3)
        VB: Engine.Core.Maths.GCS3.Remove(LCS3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Remove
        path: ''
        startLine: 1677
      syntax:
        content:
          CSharp: public void Remove(LCS3 system)
          VB: Public Sub Remove(system As LCS3)
        parameters:
        - id: system
          type: LCS3
      overload: Engine.Core.Maths.GCS3.Remove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.Add(LightSource)
      commentId: M:Engine.Core.Maths.GCS3.Add(LightSource)
      language: CSharp
      name:
        CSharp: Add(LightSource)
        VB: Add(LightSource)
      nameWithType:
        CSharp: GCS3.Add(LightSource)
        VB: GCS3.Add(LightSource)
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.Add(LightSource)
        VB: Engine.Core.Maths.GCS3.Add(LightSource)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Add
        path: ''
        startLine: 1682
      syntax:
        content:
          CSharp: public void Add(LightSource light)
          VB: Public Sub Add(light As LightSource)
        parameters:
        - id: light
          type: LightSource
      overload: Engine.Core.Maths.GCS3.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.GCS3.Remove(LightSource)
      commentId: M:Engine.Core.Maths.GCS3.Remove(LightSource)
      language: CSharp
      name:
        CSharp: Remove(LightSource)
        VB: Remove(LightSource)
      nameWithType:
        CSharp: GCS3.Remove(LightSource)
        VB: GCS3.Remove(LightSource)
      qualifiedName:
        CSharp: Engine.Core.Maths.GCS3.Remove(LightSource)
        VB: Engine.Core.Maths.GCS3.Remove(LightSource)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Remove
        path: ''
        startLine: 1687
      syntax:
        content:
          CSharp: public void Remove(LightSource light)
          VB: Public Sub Remove(light As LightSource)
        parameters:
        - id: light
          type: LightSource
      overload: Engine.Core.Maths.GCS3.Remove*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.IMatrix
    commentId: T:Engine.Core.Maths.IMatrix
    language: CSharp
    name:
      CSharp: IMatrix
      VB: IMatrix
    nameWithType:
      CSharp: IMatrix
      VB: IMatrix
    qualifiedName:
      CSharp: Engine.Core.Maths.IMatrix
      VB: Engine.Core.Maths.IMatrix
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: IMatrix
      path: ''
      startLine: 1703
    syntax:
      content:
        CSharp: public interface IMatrix
        VB: Public Interface IMatrix
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: Engine.Core.Maths.IMatrix.RowCount
      commentId: P:Engine.Core.Maths.IMatrix.RowCount
      language: CSharp
      name:
        CSharp: RowCount
        VB: RowCount
      nameWithType:
        CSharp: IMatrix.RowCount
        VB: IMatrix.RowCount
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.RowCount
        VB: Engine.Core.Maths.IMatrix.RowCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowCount
        path: ''
        startLine: 1705
      syntax:
        content:
          CSharp: int RowCount { get; }
          VB: ReadOnly Property RowCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.IMatrix.RowCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Engine.Core.Maths.IMatrix.ColumnCount
      commentId: P:Engine.Core.Maths.IMatrix.ColumnCount
      language: CSharp
      name:
        CSharp: ColumnCount
        VB: ColumnCount
      nameWithType:
        CSharp: IMatrix.ColumnCount
        VB: IMatrix.ColumnCount
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.ColumnCount
        VB: Engine.Core.Maths.IMatrix.ColumnCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ColumnCount
        path: ''
        startLine: 1706
      syntax:
        content:
          CSharp: int ColumnCount { get; }
          VB: ReadOnly Property ColumnCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.IMatrix.ColumnCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
      commentId: P:Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: IMatrix.Item[Int32, Int32]
        VB: IMatrix.Item(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.Item[System.Int32, System.Int32]
        VB: Engine.Core.Maths.IMatrix.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 1708
      syntax:
        content:
          CSharp: float this[int r, int c] { get; set; }
          VB: Property Item(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.IMatrix.Item*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: IMatrix.RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: IMatrix.RowOperation(Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.IMatrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 1709
      syntax:
        content:
          CSharp: void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
          VB: Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.IMatrix.RowOperation*
      modifiers:
        CSharp: []
        VB: []
    - id: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: IMatrix.SwapRows(Int32, Int32)
        VB: IMatrix.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.IMatrix.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SwapRows
        path: ''
        startLine: 1710
      syntax:
        content:
          CSharp: void SwapRows(int from, int to)
          VB: Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.IMatrix.SwapRows*
      modifiers:
        CSharp: []
        VB: []
    - id: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(IMatrix, MatrixOperation, Single)
        VB: Operation(IMatrix, MatrixOperation, Single)
      nameWithType:
        CSharp: IMatrix.Operation(IMatrix, MatrixOperation, Single)
        VB: IMatrix.Operation(IMatrix, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 1711
      syntax:
        content:
          CSharp: IMatrix Operation(IMatrix m, MatrixOperation operation, float f = 0F)
          VB: Function Operation(m As IMatrix, operation As MatrixOperation, f As Single = 0F) As IMatrix
        parameters:
        - id: m
          type: Engine.Core.Maths.IMatrix
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.IMatrix.Operation*
      modifiers:
        CSharp: []
        VB: []
  - id: Engine.Core.Maths.Mathf
    commentId: T:Engine.Core.Maths.Mathf
    language: CSharp
    name:
      CSharp: Mathf
      VB: Mathf
    nameWithType:
      CSharp: Mathf
      VB: Mathf
    qualifiedName:
      CSharp: Engine.Core.Maths.Mathf
      VB: Engine.Core.Maths.Mathf
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Mathf
      path: ''
      startLine: 1725
    syntax:
      content:
        CSharp: public static class Mathf
        VB: Public Module Mathf
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Engine.Core.Maths.Mathf.PiQuarter
      commentId: F:Engine.Core.Maths.Mathf.PiQuarter
      language: CSharp
      name:
        CSharp: PiQuarter
        VB: PiQuarter
      nameWithType:
        CSharp: Mathf.PiQuarter
        VB: Mathf.PiQuarter
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.PiQuarter
        VB: Engine.Core.Maths.Mathf.PiQuarter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: PiQuarter
        path: ''
        startLine: 1727
      syntax:
        content:
          CSharp: public static readonly float PiQuarter
          VB: Public Shared ReadOnly PiQuarter As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Mathf.PiHalf
      commentId: F:Engine.Core.Maths.Mathf.PiHalf
      language: CSharp
      name:
        CSharp: PiHalf
        VB: PiHalf
      nameWithType:
        CSharp: Mathf.PiHalf
        VB: Mathf.PiHalf
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.PiHalf
        VB: Engine.Core.Maths.Mathf.PiHalf
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: PiHalf
        path: ''
        startLine: 1728
      syntax:
        content:
          CSharp: public static readonly float PiHalf
          VB: Public Shared ReadOnly PiHalf As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Mathf.SinePiQuarter
      commentId: F:Engine.Core.Maths.Mathf.SinePiQuarter
      language: CSharp
      name:
        CSharp: SinePiQuarter
        VB: SinePiQuarter
      nameWithType:
        CSharp: Mathf.SinePiQuarter
        VB: Mathf.SinePiQuarter
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.SinePiQuarter
        VB: Engine.Core.Maths.Mathf.SinePiQuarter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SinePiQuarter
        path: ''
        startLine: 1730
      syntax:
        content:
          CSharp: public static readonly float SinePiQuarter
          VB: Public Shared ReadOnly SinePiQuarter As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Mathf.CosinePiQuarter
      commentId: F:Engine.Core.Maths.Mathf.CosinePiQuarter
      language: CSharp
      name:
        CSharp: CosinePiQuarter
        VB: CosinePiQuarter
      nameWithType:
        CSharp: Mathf.CosinePiQuarter
        VB: Mathf.CosinePiQuarter
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.CosinePiQuarter
        VB: Engine.Core.Maths.Mathf.CosinePiQuarter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CosinePiQuarter
        path: ''
        startLine: 1731
      syntax:
        content:
          CSharp: public static readonly float CosinePiQuarter
          VB: Public Shared ReadOnly CosinePiQuarter As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Mathf.e
      commentId: F:Engine.Core.Maths.Mathf.e
      language: CSharp
      name:
        CSharp: e
        VB: e
      nameWithType:
        CSharp: Mathf.e
        VB: Mathf.e
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.e
        VB: Engine.Core.Maths.Mathf.e
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: e
        path: ''
        startLine: 1733
      syntax:
        content:
          CSharp: public const float e = 2.71828175F
          VB: Public Const e As Single = 2.71828175F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Mathf.pi
      commentId: F:Engine.Core.Maths.Mathf.pi
      language: CSharp
      name:
        CSharp: pi
        VB: pi
      nameWithType:
        CSharp: Mathf.pi
        VB: Mathf.pi
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.pi
        VB: Engine.Core.Maths.Mathf.pi
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: pi
        path: ''
        startLine: 1734
      syntax:
        content:
          CSharp: public const float pi = 3.14159274F
          VB: Public Const pi As Single = 3.14159274F
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Mathf.Acos(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Acos(System.Single)
      language: CSharp
      name:
        CSharp: Acos(Single)
        VB: Acos(Single)
      nameWithType:
        CSharp: Mathf.Acos(Single)
        VB: Mathf.Acos(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Acos(System.Single)
        VB: Engine.Core.Maths.Mathf.Acos(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Acos
        path: ''
        startLine: 1745
      syntax:
        content:
          CSharp: public static float Acos(float f)
          VB: Public Shared Function Acos(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Acos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Asin(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Asin(System.Single)
      language: CSharp
      name:
        CSharp: Asin(Single)
        VB: Asin(Single)
      nameWithType:
        CSharp: Mathf.Asin(Single)
        VB: Mathf.Asin(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Asin(System.Single)
        VB: Engine.Core.Maths.Mathf.Asin(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Asin
        path: ''
        startLine: 1750
      syntax:
        content:
          CSharp: public static float Asin(float f)
          VB: Public Shared Function Asin(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Asin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Atan(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Atan(System.Single)
      language: CSharp
      name:
        CSharp: Atan(Single)
        VB: Atan(Single)
      nameWithType:
        CSharp: Mathf.Atan(Single)
        VB: Mathf.Atan(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Atan(System.Single)
        VB: Engine.Core.Maths.Mathf.Atan(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Atan
        path: ''
        startLine: 1755
      syntax:
        content:
          CSharp: public static float Atan(float f)
          VB: Public Shared Function Atan(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Atan*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Abs(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Abs(System.Single)
      language: CSharp
      name:
        CSharp: Abs(Single)
        VB: Abs(Single)
      nameWithType:
        CSharp: Mathf.Abs(Single)
        VB: Mathf.Abs(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Abs(System.Single)
        VB: Engine.Core.Maths.Mathf.Abs(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Abs
        path: ''
        startLine: 1760
      syntax:
        content:
          CSharp: public static float Abs(float f)
          VB: Public Shared Function Abs(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Abs*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Atan2(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Atan2(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Atan2(Single, Single)
        VB: Atan2(Single, Single)
      nameWithType:
        CSharp: Mathf.Atan2(Single, Single)
        VB: Mathf.Atan2(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Atan2(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Atan2(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Atan2
        path: ''
        startLine: 1765
      syntax:
        content:
          CSharp: public static float Atan2(float x, float y)
          VB: Public Shared Function Atan2(x As Single, y As Single) As Single
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Atan2*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Ceiling(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Ceiling(System.Single)
      language: CSharp
      name:
        CSharp: Ceiling(Single)
        VB: Ceiling(Single)
      nameWithType:
        CSharp: Mathf.Ceiling(Single)
        VB: Mathf.Ceiling(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Ceiling(System.Single)
        VB: Engine.Core.Maths.Mathf.Ceiling(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Ceiling
        path: ''
        startLine: 1770
      syntax:
        content:
          CSharp: public static float Ceiling(float f)
          VB: Public Shared Function Ceiling(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Ceiling*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Cos(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Cos(System.Single)
      language: CSharp
      name:
        CSharp: Cos(Single)
        VB: Cos(Single)
      nameWithType:
        CSharp: Mathf.Cos(Single)
        VB: Mathf.Cos(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Cos(System.Single)
        VB: Engine.Core.Maths.Mathf.Cos(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Cos
        path: ''
        startLine: 1775
      syntax:
        content:
          CSharp: public static float Cos(float f)
          VB: Public Shared Function Cos(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Cos*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Cosh(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Cosh(System.Single)
      language: CSharp
      name:
        CSharp: Cosh(Single)
        VB: Cosh(Single)
      nameWithType:
        CSharp: Mathf.Cosh(Single)
        VB: Mathf.Cosh(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Cosh(System.Single)
        VB: Engine.Core.Maths.Mathf.Cosh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Cosh
        path: ''
        startLine: 1780
      syntax:
        content:
          CSharp: public static float Cosh(float f)
          VB: Public Shared Function Cosh(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Cosh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Cot(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Cot(System.Single)
      language: CSharp
      name:
        CSharp: Cot(Single)
        VB: Cot(Single)
      nameWithType:
        CSharp: Mathf.Cot(Single)
        VB: Mathf.Cot(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Cot(System.Single)
        VB: Engine.Core.Maths.Mathf.Cot(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Cot
        path: ''
        startLine: 1785
      syntax:
        content:
          CSharp: public static float Cot(float f)
          VB: Public Shared Function Cot(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Cot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sec(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sec(System.Single)
      language: CSharp
      name:
        CSharp: Sec(Single)
        VB: Sec(Single)
      nameWithType:
        CSharp: Mathf.Sec(Single)
        VB: Mathf.Sec(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sec(System.Single)
        VB: Engine.Core.Maths.Mathf.Sec(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sec
        path: ''
        startLine: 1790
      syntax:
        content:
          CSharp: public static float Sec(float f)
          VB: Public Shared Function Sec(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sec*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Csc(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Csc(System.Single)
      language: CSharp
      name:
        CSharp: Csc(Single)
        VB: Csc(Single)
      nameWithType:
        CSharp: Mathf.Csc(Single)
        VB: Mathf.Csc(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Csc(System.Single)
        VB: Engine.Core.Maths.Mathf.Csc(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Csc
        path: ''
        startLine: 1794
      syntax:
        content:
          CSharp: public static float Csc(float f)
          VB: Public Shared Function Csc(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Csc*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Exp(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Exp(System.Single)
      language: CSharp
      name:
        CSharp: Exp(Single)
        VB: Exp(Single)
      nameWithType:
        CSharp: Mathf.Exp(Single)
        VB: Mathf.Exp(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Exp(System.Single)
        VB: Engine.Core.Maths.Mathf.Exp(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Exp
        path: ''
        startLine: 1799
      syntax:
        content:
          CSharp: public static float Exp(float f)
          VB: Public Shared Function Exp(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Exp*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Floor(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Floor(System.Single)
      language: CSharp
      name:
        CSharp: Floor(Single)
        VB: Floor(Single)
      nameWithType:
        CSharp: Mathf.Floor(Single)
        VB: Mathf.Floor(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Floor(System.Single)
        VB: Engine.Core.Maths.Mathf.Floor(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Floor
        path: ''
        startLine: 1804
      syntax:
        content:
          CSharp: public static float Floor(float f)
          VB: Public Shared Function Floor(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Floor*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.IEEERemainder(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.IEEERemainder(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: IEEERemainder(Single, Single)
        VB: IEEERemainder(Single, Single)
      nameWithType:
        CSharp: Mathf.IEEERemainder(Single, Single)
        VB: Mathf.IEEERemainder(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.IEEERemainder(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.IEEERemainder(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IEEERemainder
        path: ''
        startLine: 1809
      syntax:
        content:
          CSharp: public static float IEEERemainder(float x, float y)
          VB: Public Shared Function IEEERemainder(x As Single, y As Single) As Single
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.IEEERemainder*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Log(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Log(System.Single)
      language: CSharp
      name:
        CSharp: Log(Single)
        VB: Log(Single)
      nameWithType:
        CSharp: Mathf.Log(Single)
        VB: Mathf.Log(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Log(System.Single)
        VB: Engine.Core.Maths.Mathf.Log(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Log
        path: ''
        startLine: 1814
      syntax:
        content:
          CSharp: public static float Log(float f)
          VB: Public Shared Function Log(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Log*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Log(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Log(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Log(Single, Single)
        VB: Log(Single, Single)
      nameWithType:
        CSharp: Mathf.Log(Single, Single)
        VB: Mathf.Log(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Log(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Log(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Log
        path: ''
        startLine: 1819
      syntax:
        content:
          CSharp: public static float Log(float f, float newBase)
          VB: Public Shared Function Log(f As Single, newBase As Single) As Single
        parameters:
        - id: f
          type: System.Single
        - id: newBase
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Log*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Log10(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Log10(System.Single)
      language: CSharp
      name:
        CSharp: Log10(Single)
        VB: Log10(Single)
      nameWithType:
        CSharp: Mathf.Log10(Single)
        VB: Mathf.Log10(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Log10(System.Single)
        VB: Engine.Core.Maths.Mathf.Log10(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Log10
        path: ''
        startLine: 1824
      syntax:
        content:
          CSharp: public static float Log10(float f)
          VB: Public Shared Function Log10(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Log10*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Max(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Max(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Max(Single, Single)
        VB: Max(Single, Single)
      nameWithType:
        CSharp: Mathf.Max(Single, Single)
        VB: Mathf.Max(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Max(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Max(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Max
        path: ''
        startLine: 1829
      syntax:
        content:
          CSharp: public static float Max(float val1, float val2)
          VB: Public Shared Function Max(val1 As Single, val2 As Single) As Single
        parameters:
        - id: val1
          type: System.Single
        - id: val2
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Max*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Min(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Min(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Min(Single, Single)
        VB: Min(Single, Single)
      nameWithType:
        CSharp: Mathf.Min(Single, Single)
        VB: Mathf.Min(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Min(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Min(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Min
        path: ''
        startLine: 1834
      syntax:
        content:
          CSharp: public static float Min(float val1, float val2)
          VB: Public Shared Function Min(val1 As Single, val2 As Single) As Single
        parameters:
        - id: val1
          type: System.Single
        - id: val2
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Min*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Pow(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Pow(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Pow(Single, Single)
        VB: Pow(Single, Single)
      nameWithType:
        CSharp: Mathf.Pow(Single, Single)
        VB: Mathf.Pow(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Pow(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Pow(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Pow
        path: ''
        startLine: 1839
      syntax:
        content:
          CSharp: public static float Pow(float b, float p)
          VB: Public Shared Function Pow(b As Single, p As Single) As Single
        parameters:
        - id: b
          type: System.Single
        - id: p
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Pow*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Round(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Round(System.Single)
      language: CSharp
      name:
        CSharp: Round(Single)
        VB: Round(Single)
      nameWithType:
        CSharp: Mathf.Round(Single)
        VB: Mathf.Round(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Round(System.Single)
        VB: Engine.Core.Maths.Mathf.Round(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Round
        path: ''
        startLine: 1844
      syntax:
        content:
          CSharp: public static float Round(float f)
          VB: Public Shared Function Round(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Round(System.Single,System.Int32)
      commentId: M:Engine.Core.Maths.Mathf.Round(System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: Round(Single, Int32)
        VB: Round(Single, Int32)
      nameWithType:
        CSharp: Mathf.Round(Single, Int32)
        VB: Mathf.Round(Single, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Round(System.Single, System.Int32)
        VB: Engine.Core.Maths.Mathf.Round(System.Single, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Round
        path: ''
        startLine: 1849
      syntax:
        content:
          CSharp: public static float Round(float f, int digits)
          VB: Public Shared Function Round(f As Single, digits As Integer) As Single
        parameters:
        - id: f
          type: System.Single
        - id: digits
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Round(System.Single,System.Int32,System.MidpointRounding)
      commentId: M:Engine.Core.Maths.Mathf.Round(System.Single,System.Int32,System.MidpointRounding)
      language: CSharp
      name:
        CSharp: Round(Single, Int32, MidpointRounding)
        VB: Round(Single, Int32, MidpointRounding)
      nameWithType:
        CSharp: Mathf.Round(Single, Int32, MidpointRounding)
        VB: Mathf.Round(Single, Int32, MidpointRounding)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Round(System.Single, System.Int32, System.MidpointRounding)
        VB: Engine.Core.Maths.Mathf.Round(System.Single, System.Int32, System.MidpointRounding)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Round
        path: ''
        startLine: 1854
      syntax:
        content:
          CSharp: public static float Round(float f, int digits, MidpointRounding midpointRounding)
          VB: Public Shared Function Round(f As Single, digits As Integer, midpointRounding As MidpointRounding) As Single
        parameters:
        - id: f
          type: System.Single
        - id: digits
          type: System.Int32
        - id: midpointRounding
          type: System.MidpointRounding
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Round*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.RoundToInt(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.RoundToInt(System.Single)
      language: CSharp
      name:
        CSharp: RoundToInt(Single)
        VB: RoundToInt(Single)
      nameWithType:
        CSharp: Mathf.RoundToInt(Single)
        VB: Mathf.RoundToInt(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.RoundToInt(System.Single)
        VB: Engine.Core.Maths.Mathf.RoundToInt(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RoundToInt
        path: ''
        startLine: 1859
      syntax:
        content:
          CSharp: public static int RoundToInt(float f)
          VB: Public Shared Function RoundToInt(f As Single) As Integer
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Mathf.RoundToInt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sign(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sign(System.Single)
      language: CSharp
      name:
        CSharp: Sign(Single)
        VB: Sign(Single)
      nameWithType:
        CSharp: Mathf.Sign(Single)
        VB: Mathf.Sign(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sign(System.Single)
        VB: Engine.Core.Maths.Mathf.Sign(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sign
        path: ''
        startLine: 1864
      syntax:
        content:
          CSharp: public static int Sign(float f)
          VB: Public Shared Function Sign(f As Single) As Integer
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Mathf.Sign*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sin(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sin(System.Single)
      language: CSharp
      name:
        CSharp: Sin(Single)
        VB: Sin(Single)
      nameWithType:
        CSharp: Mathf.Sin(Single)
        VB: Mathf.Sin(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sin(System.Single)
        VB: Engine.Core.Maths.Mathf.Sin(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sin
        path: ''
        startLine: 1869
      syntax:
        content:
          CSharp: public static float Sin(float f)
          VB: Public Shared Function Sin(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sin*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sinh(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sinh(System.Single)
      language: CSharp
      name:
        CSharp: Sinh(Single)
        VB: Sinh(Single)
      nameWithType:
        CSharp: Mathf.Sinh(Single)
        VB: Mathf.Sinh(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sinh(System.Single)
        VB: Engine.Core.Maths.Mathf.Sinh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sinh
        path: ''
        startLine: 1874
      syntax:
        content:
          CSharp: public static float Sinh(float f)
          VB: Public Shared Function Sinh(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sinh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sqrt(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sqrt(System.Single)
      language: CSharp
      name:
        CSharp: Sqrt(Single)
        VB: Sqrt(Single)
      nameWithType:
        CSharp: Mathf.Sqrt(Single)
        VB: Mathf.Sqrt(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sqrt(System.Single)
        VB: Engine.Core.Maths.Mathf.Sqrt(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sqrt
        path: ''
        startLine: 1879
      syntax:
        content:
          CSharp: public static float Sqrt(float f)
          VB: Public Shared Function Sqrt(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sqrt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.NthSqrt(System.Single,System.Int32)
      commentId: M:Engine.Core.Maths.Mathf.NthSqrt(System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: NthSqrt(Single, Int32)
        VB: NthSqrt(Single, Int32)
      nameWithType:
        CSharp: Mathf.NthSqrt(Single, Int32)
        VB: Mathf.NthSqrt(Single, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.NthSqrt(System.Single, System.Int32)
        VB: Engine.Core.Maths.Mathf.NthSqrt(System.Single, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: NthSqrt
        path: ''
        startLine: 1885
      syntax:
        content:
          CSharp: public static float NthSqrt(float f, int n)
          VB: Public Shared Function NthSqrt(f As Single, n As Integer) As Single
        parameters:
        - id: f
          type: System.Single
        - id: n
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.NthSqrt*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Tan(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Tan(System.Single)
      language: CSharp
      name:
        CSharp: Tan(Single)
        VB: Tan(Single)
      nameWithType:
        CSharp: Mathf.Tan(Single)
        VB: Mathf.Tan(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Tan(System.Single)
        VB: Engine.Core.Maths.Mathf.Tan(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Tan
        path: ''
        startLine: 1890
      syntax:
        content:
          CSharp: public static float Tan(float f)
          VB: Public Shared Function Tan(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Tan*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Tanh(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Tanh(System.Single)
      language: CSharp
      name:
        CSharp: Tanh(Single)
        VB: Tanh(Single)
      nameWithType:
        CSharp: Mathf.Tanh(Single)
        VB: Mathf.Tanh(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Tanh(System.Single)
        VB: Engine.Core.Maths.Mathf.Tanh(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Tanh
        path: ''
        startLine: 1895
      syntax:
        content:
          CSharp: public static float Tanh(float f)
          VB: Public Shared Function Tanh(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Tanh*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Truncate(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Truncate(System.Single)
      language: CSharp
      name:
        CSharp: Truncate(Single)
        VB: Truncate(Single)
      nameWithType:
        CSharp: Mathf.Truncate(Single)
        VB: Mathf.Truncate(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Truncate(System.Single)
        VB: Engine.Core.Maths.Mathf.Truncate(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Truncate
        path: ''
        startLine: 1900
      syntax:
        content:
          CSharp: public static float Truncate(float f)
          VB: Public Shared Function Truncate(f As Single) As Single
        parameters:
        - id: f
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Truncate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Pi(System.Func{System.Single,System.Single},System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Mathf.Pi(System.Func{System.Single,System.Single},System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Pi(Func<Single, Single>, Int32, Int32)
        VB: Pi(Func(Of Single, Single), Int32, Int32)
      nameWithType:
        CSharp: Mathf.Pi(Func<Single, Single>, Int32, Int32)
        VB: Mathf.Pi(Func(Of Single, Single), Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Pi(System.Func<System.Single, System.Single>, System.Int32, System.Int32)
        VB: Engine.Core.Maths.Mathf.Pi(System.Func(Of System.Single, System.Single), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Pi
        path: ''
        startLine: 1905
      syntax:
        content:
          CSharp: public static float Pi(Func<float, float> innerFunction, int limit1, int limit2)
          VB: Public Shared Function Pi(innerFunction As Func(Of Single, Single), limit1 As Integer, limit2 As Integer) As Single
        parameters:
        - id: innerFunction
          type: System.Func{System.Single,System.Single}
        - id: limit1
          type: System.Int32
        - id: limit2
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Pi*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Pi(System.Func{System.Single,System.Single},System.Single,System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Pi(System.Func{System.Single,System.Single},System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Pi(Func<Single, Single>, Single, Single, Single)
        VB: Pi(Func(Of Single, Single), Single, Single, Single)
      nameWithType:
        CSharp: Mathf.Pi(Func<Single, Single>, Single, Single, Single)
        VB: Mathf.Pi(Func(Of Single, Single), Single, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Pi(System.Func<System.Single, System.Single>, System.Single, System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Pi(System.Func(Of System.Single, System.Single), System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Pi
        path: ''
        startLine: 1915
      syntax:
        content:
          CSharp: public static float Pi(Func<float, float> innerFunction, float limit1, float limit2, float increment)
          VB: Public Shared Function Pi(innerFunction As Func(Of Single, Single), limit1 As Single, limit2 As Single, increment As Single) As Single
        parameters:
        - id: innerFunction
          type: System.Func{System.Single,System.Single}
        - id: limit1
          type: System.Single
        - id: limit2
          type: System.Single
        - id: increment
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Pi*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sigma(System.Func{System.Single,System.Single},System.Single,System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Sigma(System.Func{System.Single,System.Single},System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Sigma(Func<Single, Single>, Single, Single, Single)
        VB: Sigma(Func(Of Single, Single), Single, Single, Single)
      nameWithType:
        CSharp: Mathf.Sigma(Func<Single, Single>, Single, Single, Single)
        VB: Mathf.Sigma(Func(Of Single, Single), Single, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sigma(System.Func<System.Single, System.Single>, System.Single, System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Sigma(System.Func(Of System.Single, System.Single), System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sigma
        path: ''
        startLine: 1925
      syntax:
        content:
          CSharp: public static float Sigma(Func<float, float> innerFunction, float limit1, float limit2, float increment)
          VB: Public Shared Function Sigma(innerFunction As Func(Of Single, Single), limit1 As Single, limit2 As Single, increment As Single) As Single
        parameters:
        - id: innerFunction
          type: System.Func{System.Single,System.Single}
        - id: limit1
          type: System.Single
        - id: limit2
          type: System.Single
        - id: increment
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sigma*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sigma(System.Func{System.Single,System.Single},System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Mathf.Sigma(System.Func{System.Single,System.Single},System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Sigma(Func<Single, Single>, Int32, Int32)
        VB: Sigma(Func(Of Single, Single), Int32, Int32)
      nameWithType:
        CSharp: Mathf.Sigma(Func<Single, Single>, Int32, Int32)
        VB: Mathf.Sigma(Func(Of Single, Single), Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sigma(System.Func<System.Single, System.Single>, System.Int32, System.Int32)
        VB: Engine.Core.Maths.Mathf.Sigma(System.Func(Of System.Single, System.Single), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sigma
        path: ''
        startLine: 1935
      syntax:
        content:
          CSharp: public static float Sigma(Func<float, float> innerFunction, int limit1, int limit2)
          VB: Public Shared Function Sigma(innerFunction As Func(Of Single, Single), limit1 As Integer, limit2 As Integer) As Single
        parameters:
        - id: innerFunction
          type: System.Func{System.Single,System.Single}
        - id: limit1
          type: System.Int32
        - id: limit2
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sigma*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Approximately(System.Single,System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Approximately(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Approximately(Single, Single, Single)
        VB: Approximately(Single, Single, Single)
      nameWithType:
        CSharp: Mathf.Approximately(Single, Single, Single)
        VB: Mathf.Approximately(Single, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Approximately(System.Single, System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Approximately(System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Approximately
        path: ''
        startLine: 1945
      syntax:
        content:
          CSharp: public static bool Approximately(float a, float b, float tolerance = 0.0001F)
          VB: Public Shared Function Approximately(a As Single, b As Single, tolerance As Single = 0.0001F) As Boolean
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        - id: tolerance
          type: System.Single
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Mathf.Approximately*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Approximately(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Approximately(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Approximately(Single, Single)
        VB: Approximately(Single, Single)
      nameWithType:
        CSharp: Mathf.Approximately(Single, Single)
        VB: Mathf.Approximately(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Approximately(System.Single, System.Single)
        VB: Engine.Core.Maths.Mathf.Approximately(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Approximately
        path: ''
        startLine: 1950
      syntax:
        content:
          CSharp: public static bool Approximately(float a, float b)
          VB: Public Shared Function Approximately(a As Single, b As Single) As Boolean
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: System.Single
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Mathf.Approximately*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Deg2Rad(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Deg2Rad(System.Single)
      language: CSharp
      name:
        CSharp: Deg2Rad(Single)
        VB: Deg2Rad(Single)
      nameWithType:
        CSharp: Mathf.Deg2Rad(Single)
        VB: Mathf.Deg2Rad(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Deg2Rad(System.Single)
        VB: Engine.Core.Maths.Mathf.Deg2Rad(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Deg2Rad
        path: ''
        startLine: 1955
      syntax:
        content:
          CSharp: public static float Deg2Rad(float deg)
          VB: Public Shared Function Deg2Rad(deg As Single) As Single
        parameters:
        - id: deg
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Deg2Rad*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Rad2Deg(System.Single)
      commentId: M:Engine.Core.Maths.Mathf.Rad2Deg(System.Single)
      language: CSharp
      name:
        CSharp: Rad2Deg(Single)
        VB: Rad2Deg(Single)
      nameWithType:
        CSharp: Mathf.Rad2Deg(Single)
        VB: Mathf.Rad2Deg(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Rad2Deg(System.Single)
        VB: Engine.Core.Maths.Mathf.Rad2Deg(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Rad2Deg
        path: ''
        startLine: 1960
      syntax:
        content:
          CSharp: public static float Rad2Deg(float rad)
          VB: Public Shared Function Rad2Deg(rad As Single) As Single
        parameters:
        - id: rad
          type: System.Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Rad2Deg*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sum(System.Single[])
      commentId: M:Engine.Core.Maths.Mathf.Sum(System.Single[])
      language: CSharp
      name:
        CSharp: Sum(Single[])
        VB: Sum(Single())
      nameWithType:
        CSharp: Mathf.Sum(Single[])
        VB: Mathf.Sum(Single())
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sum(System.Single[])
        VB: Engine.Core.Maths.Mathf.Sum(System.Single())
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sum
        path: ''
        startLine: 1965
      syntax:
        content:
          CSharp: public static float Sum(params float[] floats)
          VB: Public Shared Function Sum(ParamArray floats As Single()) As Single
        parameters:
        - id: floats
          type: System.Single[]
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sum*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Mathf.Sinc(System.Single,System.Boolean)
      commentId: M:Engine.Core.Maths.Mathf.Sinc(System.Single,System.Boolean)
      language: CSharp
      name:
        CSharp: Sinc(Single, Boolean)
        VB: Sinc(Single, Boolean)
      nameWithType:
        CSharp: Mathf.Sinc(Single, Boolean)
        VB: Mathf.Sinc(Single, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Mathf.Sinc(System.Single, System.Boolean)
        VB: Engine.Core.Maths.Mathf.Sinc(System.Single, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Sinc
        path: ''
        startLine: 1975
      syntax:
        content:
          CSharp: public static float Sinc(float f, bool Pi = false)
          VB: Public Shared Function Sinc(f As Single, Pi As Boolean = False) As Single
        parameters:
        - id: f
          type: System.Single
        - id: Pi
          type: System.Boolean
        return:
          type: System.Single
      overload: Engine.Core.Maths.Mathf.Sinc*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.Matrix
    commentId: T:Engine.Core.Maths.Matrix
    language: CSharp
    name:
      CSharp: Matrix
      VB: Matrix
    nameWithType:
      CSharp: Matrix
      VB: Matrix
    qualifiedName:
      CSharp: Engine.Core.Maths.Matrix
      VB: Engine.Core.Maths.Matrix
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Matrix
      path: ''
      startLine: 1990
    syntax:
      content:
        CSharp: 'public abstract class Matrix : IMatrix'
        VB: >-
          Public MustInherit Class Matrix

              Implements IMatrix
    inheritance:
    - System.Object
    implements:
    - Engine.Core.Maths.IMatrix
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: Engine.Core.Maths.Matrix.I2x2
      commentId: F:Engine.Core.Maths.Matrix.I2x2
      language: CSharp
      name:
        CSharp: I2x2
        VB: I2x2
      nameWithType:
        CSharp: Matrix.I2x2
        VB: Matrix.I2x2
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.I2x2
        VB: Engine.Core.Maths.Matrix.I2x2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: I2x2
        path: ''
        startLine: 1995
      summary: "\n2x2 Identity Matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Matrix I2x2
          VB: Public Shared ReadOnly I2x2 As Matrix
        return:
          type: Engine.Core.Maths.Matrix
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Matrix.I3x3
      commentId: F:Engine.Core.Maths.Matrix.I3x3
      language: CSharp
      name:
        CSharp: I3x3
        VB: I3x3
      nameWithType:
        CSharp: Matrix.I3x3
        VB: Matrix.I3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.I3x3
        VB: Engine.Core.Maths.Matrix.I3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: I3x3
        path: ''
        startLine: 1999
      summary: "\n3x3 Identity Matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Matrix I3x3
          VB: Public Shared ReadOnly I3x3 As Matrix
        return:
          type: Engine.Core.Maths.Matrix
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Matrix.I4x4
      commentId: F:Engine.Core.Maths.Matrix.I4x4
      language: CSharp
      name:
        CSharp: I4x4
        VB: I4x4
      nameWithType:
        CSharp: Matrix.I4x4
        VB: Matrix.I4x4
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.I4x4
        VB: Engine.Core.Maths.Matrix.I4x4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: I4x4
        path: ''
        startLine: 2003
      summary: "\n4x4 Identity Matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static readonly Matrix I4x4
          VB: Public Shared ReadOnly I4x4 As Matrix
        return:
          type: Engine.Core.Maths.Matrix
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
      commentId: P:Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: Matrix.Item[Int32, Int32]
        VB: Matrix.Item(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.Item[System.Int32, System.Int32]
        VB: Engine.Core.Maths.Matrix.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 2005
      syntax:
        content:
          CSharp: public abstract float this[int r, int c] { get; set; }
          VB: Public MustOverride Property Item(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Matrix.Item*
      implements:
      - Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        - set
        VB:
        - Public
        - MustOverride
    - id: Engine.Core.Maths.Matrix.RowCount
      commentId: P:Engine.Core.Maths.Matrix.RowCount
      language: CSharp
      name:
        CSharp: RowCount
        VB: RowCount
      nameWithType:
        CSharp: Matrix.RowCount
        VB: Matrix.RowCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.RowCount
        VB: Engine.Core.Maths.Matrix.RowCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowCount
        path: ''
        startLine: 2006
      syntax:
        content:
          CSharp: public abstract int RowCount { get; }
          VB: Public MustOverride ReadOnly Property RowCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Matrix.RowCount*
      implements:
      - Engine.Core.Maths.IMatrix.RowCount
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: Engine.Core.Maths.Matrix.ColumnCount
      commentId: P:Engine.Core.Maths.Matrix.ColumnCount
      language: CSharp
      name:
        CSharp: ColumnCount
        VB: ColumnCount
      nameWithType:
        CSharp: Matrix.ColumnCount
        VB: Matrix.ColumnCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.ColumnCount
        VB: Engine.Core.Maths.Matrix.ColumnCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ColumnCount
        path: ''
        startLine: 2007
      syntax:
        content:
          CSharp: public abstract int ColumnCount { get; }
          VB: Public MustOverride ReadOnly Property ColumnCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Matrix.ColumnCount*
      implements:
      - Engine.Core.Maths.IMatrix.ColumnCount
      modifiers:
        CSharp:
        - public
        - abstract
        - get
        VB:
        - Public
        - MustOverride
        - ReadOnly
    - id: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(IMatrix, MatrixOperation, Single)
        VB: Operation(IMatrix, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix.Operation(IMatrix, MatrixOperation, Single)
        VB: Matrix.Operation(IMatrix, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2016
      syntax:
        content:
          CSharp: public abstract IMatrix Operation(IMatrix m, MatrixOperation operation, float f = 0F)
          VB: Public MustOverride Function Operation(m As IMatrix, operation As MatrixOperation, f As Single = 0F) As IMatrix
        parameters:
        - id: m
          type: Engine.Core.Maths.IMatrix
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.Matrix.Operation*
      implements:
      - Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix.RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: Matrix.RowOperation(Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 2017
      syntax:
        content:
          CSharp: public abstract void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public MustOverride Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.Matrix.RowOperation*
      implements:
      - Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: Matrix.SwapRows(Int32, Int32)
        VB: Matrix.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Matrix.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SwapRows
        path: ''
        startLine: 2018
      syntax:
        content:
          CSharp: public abstract void SwapRows(int from, int to)
          VB: Public MustOverride Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.Matrix.SwapRows*
      implements:
      - Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
      commentId: M:Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
      language: CSharp
      name:
        CSharp: GetIdentityMatrix<T>(Int32, out T)
        VB: GetIdentityMatrix(Of T)(Int32, ByRef T)
      nameWithType:
        CSharp: Matrix.GetIdentityMatrix<T>(Int32, out T)
        VB: Matrix.GetIdentityMatrix(Of T)(Int32, ByRef T)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>(System.Int32, out T)
        VB: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)(System.Int32, ByRef T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetIdentityMatrix
        path: ''
        startLine: 2020
      syntax:
        content:
          CSharp: >-
            public static bool GetIdentityMatrix<T>(int n, out T identityMatrix)

                where T : Matrix, IMatrix, new()
          VB: Public Shared Function GetIdentityMatrix(Of T As {Matrix, IMatrix, New})(n As Integer, ByRef identityMatrix As T) As Boolean
        parameters:
        - id: n
          type: System.Int32
        - id: identityMatrix
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Matrix.GetIdentityMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
      commentId: M:Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
      language: CSharp
      name:
        CSharp: GetInverse<T>(T, out T)
        VB: GetInverse(Of T)(T, ByRef T)
      nameWithType:
        CSharp: Matrix.GetInverse<T>(T, out T)
        VB: Matrix.GetInverse(Of T)(T, ByRef T)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix.GetInverse<T>(T, out T)
        VB: Engine.Core.Maths.Matrix.GetInverse(Of T)(T, ByRef T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetInverse
        path: ''
        startLine: 2045
      syntax:
        content:
          CSharp: >-
            public static bool GetInverse<T>(T matrix, out T inverseMatrix)

                where T : Matrix, IMatrix
          VB: Public Shared Function GetInverse(Of T As {Matrix, IMatrix})(matrix As T, ByRef inverseMatrix As T) As Boolean
        parameters:
        - id: matrix
          type: '{T}'
        - id: inverseMatrix
          type: '{T}'
        typeParameters:
        - id: T
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Matrix.GetInverse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.Matrix3x3
    commentId: T:Engine.Core.Maths.Matrix3x3
    language: CSharp
    name:
      CSharp: Matrix3x3
      VB: Matrix3x3
    nameWithType:
      CSharp: Matrix3x3
      VB: Matrix3x3
    qualifiedName:
      CSharp: Engine.Core.Maths.Matrix3x3
      VB: Engine.Core.Maths.Matrix3x3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Matrix3x3
      path: ''
      startLine: 2115
    syntax:
      content:
        CSharp: 'public class Matrix3x3 : Matrix, IMatrix'
        VB: >-
          Public Class Matrix3x3

              Inherits Matrix

              Implements IMatrix
    inheritance:
    - System.Object
    - Engine.Core.Maths.Matrix
    implements:
    - Engine.Core.Maths.IMatrix
    inheritedMembers:
    - Engine.Core.Maths.Matrix.I2x2
    - Engine.Core.Maths.Matrix.I4x4
    - Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,{T}@)
    - Engine.Core.Maths.Matrix.GetInverse``1({T},{T}@)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Matrix3x3.I3x3
      commentId: F:Engine.Core.Maths.Matrix3x3.I3x3
      language: CSharp
      name:
        CSharp: I3x3
        VB: I3x3
      nameWithType:
        CSharp: Matrix3x3.I3x3
        VB: Matrix3x3.I3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.I3x3
        VB: Engine.Core.Maths.Matrix3x3.I3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: I3x3
        path: ''
        startLine: 2117
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 I3x3
          VB: Public Shared ReadOnly I3x3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Matrix3x3.RowCount
      commentId: P:Engine.Core.Maths.Matrix3x3.RowCount
      language: CSharp
      name:
        CSharp: RowCount
        VB: RowCount
      nameWithType:
        CSharp: Matrix3x3.RowCount
        VB: Matrix3x3.RowCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.RowCount
        VB: Engine.Core.Maths.Matrix3x3.RowCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowCount
        path: ''
        startLine: 2127
      syntax:
        content:
          CSharp: public override int RowCount { get; }
          VB: Public Overrides ReadOnly Property RowCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Matrix3x3.RowCount*
      overridden: Engine.Core.Maths.Matrix.RowCount
      implements:
      - Engine.Core.Maths.IMatrix.RowCount
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Engine.Core.Maths.Matrix3x3.ColumnCount
      commentId: P:Engine.Core.Maths.Matrix3x3.ColumnCount
      language: CSharp
      name:
        CSharp: ColumnCount
        VB: ColumnCount
      nameWithType:
        CSharp: Matrix3x3.ColumnCount
        VB: Matrix3x3.ColumnCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.ColumnCount
        VB: Engine.Core.Maths.Matrix3x3.ColumnCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ColumnCount
        path: ''
        startLine: 2128
      syntax:
        content:
          CSharp: public override int ColumnCount { get; }
          VB: Public Overrides ReadOnly Property ColumnCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Matrix3x3.ColumnCount*
      overridden: Engine.Core.Maths.Matrix.ColumnCount
      implements:
      - Engine.Core.Maths.IMatrix.ColumnCount
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Engine.Core.Maths.Matrix3x3.Item(System.Int32,System.Int32)
      commentId: P:Engine.Core.Maths.Matrix3x3.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: Matrix3x3.Item[Int32, Int32]
        VB: Matrix3x3.Item(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Item[System.Int32, System.Int32]
        VB: Engine.Core.Maths.Matrix3x3.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 2129
      syntax:
        content:
          CSharp: public override float this[int r, int c] { get; set; }
          VB: Public Overrides Property Item(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.Item*
      overridden: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
      implements:
      - Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.Matrix3x3.#ctor
      commentId: M:Engine.Core.Maths.Matrix3x3.#ctor
      language: CSharp
      name:
        CSharp: Matrix3x3()
        VB: Matrix3x3()
      nameWithType:
        CSharp: Matrix3x3.Matrix3x3()
        VB: Matrix3x3.Matrix3x3()
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Matrix3x3()
        VB: Engine.Core.Maths.Matrix3x3.Matrix3x3()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2138
      syntax:
        content:
          CSharp: public Matrix3x3()
          VB: Public Sub New
      overload: Engine.Core.Maths.Matrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector3})
      commentId: M:Engine.Core.Maths.Matrix3x3.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector3})
      language: CSharp
      name:
        CSharp: Matrix3x3(List<Vector3>)
        VB: Matrix3x3(List(Of Vector3))
      nameWithType:
        CSharp: Matrix3x3.Matrix3x3(List<Vector3>)
        VB: Matrix3x3.Matrix3x3(List(Of Vector3))
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Matrix3x3(System.Collections.Generic.List<Engine.Core.Maths.Vector3>)
        VB: Engine.Core.Maths.Matrix3x3.Matrix3x3(System.Collections.Generic.List(Of Engine.Core.Maths.Vector3))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2142
      syntax:
        content:
          CSharp: public Matrix3x3(List<Vector3> rows)
          VB: Public Sub New(rows As List(Of Vector3))
        parameters:
        - id: rows
          type: System.Collections.Generic.List{Engine.Core.Maths.Vector3}
      overload: Engine.Core.Maths.Matrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.#ctor(System.Single[])
      commentId: M:Engine.Core.Maths.Matrix3x3.#ctor(System.Single[])
      language: CSharp
      name:
        CSharp: Matrix3x3(Single[])
        VB: Matrix3x3(Single())
      nameWithType:
        CSharp: Matrix3x3.Matrix3x3(Single[])
        VB: Matrix3x3.Matrix3x3(Single())
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Matrix3x3(System.Single[])
        VB: Engine.Core.Maths.Matrix3x3.Matrix3x3(System.Single())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2152
      summary: "\nleft to right and row by row\n"
      example: []
      syntax:
        content:
          CSharp: public Matrix3x3(params float[] values)
          VB: Public Sub New(ParamArray values As Single())
        parameters:
        - id: values
          type: System.Single[]
          description: ''
      overload: Engine.Core.Maths.Matrix3x3.#ctor*
      exceptions:
      - type: System.ArgumentOutOfRangeException
        commentId: T:System.ArgumentOutOfRangeException
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.ArgumentOutOfRangeException: 
    - id: Engine.Core.Maths.Matrix3x3.GetValue(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.GetValue(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(Int32, Int32)
        VB: GetValue(Int32, Int32)
      nameWithType:
        CSharp: Matrix3x3.GetValue(Int32, Int32)
        VB: Matrix3x3.GetValue(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetValue(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.GetValue(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetValue
        path: ''
        startLine: 2217
      syntax:
        content:
          CSharp: public float GetValue(int r, int c)
          VB: Public Function GetValue(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.GetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.SetValue(System.Int32,System.Int32,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.SetValue(System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: SetValue(Int32, Int32, Single)
        VB: SetValue(Int32, Int32, Single)
      nameWithType:
        CSharp: Matrix3x3.SetValue(Int32, Int32, Single)
        VB: Matrix3x3.SetValue(Int32, Int32, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.SetValue(System.Int32, System.Int32, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.SetValue(System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetValue
        path: ''
        startLine: 2225
      syntax:
        content:
          CSharp: public void SetValue(int r, int c, float f)
          VB: Public Sub SetValue(r As Integer, c As Integer, f As Single)
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.SetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.GetRow(System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.GetRow(System.Int32)
      language: CSharp
      name:
        CSharp: GetRow(Int32)
        VB: GetRow(Int32)
      nameWithType:
        CSharp: Matrix3x3.GetRow(Int32)
        VB: Matrix3x3.GetRow(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetRow(System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.GetRow(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetRow
        path: ''
        startLine: 2233
      syntax:
        content:
          CSharp: public Vector3 GetRow(int r)
          VB: Public Function GetRow(r As Integer) As Vector3
        parameters:
        - id: r
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Matrix3x3.GetRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.GetColumn(System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.GetColumn(System.Int32)
      language: CSharp
      name:
        CSharp: GetColumn(Int32)
        VB: GetColumn(Int32)
      nameWithType:
        CSharp: Matrix3x3.GetColumn(Int32)
        VB: Matrix3x3.GetColumn(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetColumn(System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.GetColumn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetColumn
        path: ''
        startLine: 2241
      syntax:
        content:
          CSharp: public Vector3 GetColumn(int c)
          VB: Public Function GetColumn(c As Integer) As Vector3
        parameters:
        - id: c
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Matrix3x3.GetColumn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: Matrix3x3.SwapRows(Int32, Int32)
        VB: Matrix3x3.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SwapRows
        path: ''
        startLine: 2257
      syntax:
        content:
          CSharp: public override void SwapRows(int from, int to)
          VB: Public Overrides Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.Matrix3x3.SwapRows*
      overridden: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
      implements:
      - Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.ScalarMultiplication(System.Single)
      language: CSharp
      name:
        CSharp: ScalarMultiplication(Single)
        VB: ScalarMultiplication(Single)
      nameWithType:
        CSharp: Matrix3x3.ScalarMultiplication(Single)
        VB: Matrix3x3.ScalarMultiplication(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(System.Single)
        VB: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarMultiplication
        path: ''
        startLine: 2264
      syntax:
        content:
          CSharp: public Matrix3x3 ScalarMultiplication(float f)
          VB: Public Function ScalarMultiplication(f As Single) As Matrix3x3
        parameters:
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.ScalarMultiplication*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.ScalarDivision(System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.ScalarDivision(System.Single)
      language: CSharp
      name:
        CSharp: ScalarDivision(Single)
        VB: ScalarDivision(Single)
      nameWithType:
        CSharp: Matrix3x3.ScalarDivision(Single)
        VB: Matrix3x3.ScalarDivision(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.ScalarDivision(System.Single)
        VB: Engine.Core.Maths.Matrix3x3.ScalarDivision(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarDivision
        path: ''
        startLine: 2277
      syntax:
        content:
          CSharp: public Matrix3x3 ScalarDivision(float f)
          VB: Public Function ScalarDivision(f As Single) As Matrix3x3
        parameters:
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.ScalarDivision*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Multiplication(Matrix3x3)
        VB: Multiplication(Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Multiplication(Matrix3x3)
        VB: Matrix3x3.Multiplication(Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiplication
        path: ''
        startLine: 2282
      syntax:
        content:
          CSharp: public Matrix3x3 Multiplication(Matrix3x3 m)
          VB: Public Function Multiplication(m As Matrix3x3) As Matrix3x3
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Multiplication*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Addition(Matrix3x3)
        VB: Addition(Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Addition(Matrix3x3)
        VB: Matrix3x3.Addition(Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 2295
      syntax:
        content:
          CSharp: public Matrix3x3 Addition(Matrix3x3 m)
          VB: Public Function Addition(m As Matrix3x3) As Matrix3x3
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Addition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Substraction(Matrix3x3)
        VB: Substraction(Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Substraction(Matrix3x3)
        VB: Matrix3x3.Substraction(Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 2308
      syntax:
        content:
          CSharp: public Matrix3x3 Substraction(Matrix3x3 m)
          VB: Public Function Substraction(m As Matrix3x3) As Matrix3x3
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Substraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.RowAddition(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.RowAddition(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RowAddition(Int32, Int32)
        VB: RowAddition(Int32, Int32)
      nameWithType:
        CSharp: Matrix3x3.RowAddition(Int32, Int32)
        VB: Matrix3x3.RowAddition(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.RowAddition(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.RowAddition(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowAddition
        path: ''
        startLine: 2329
      summary: "\nCalculates l+r. Doesn&apos;s change any row in the matrix\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">l</code> left side of the equation\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">r</code> right side of the equation\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 RowAddition(int l, int r)
          VB: Public Function RowAddition(l As Integer, r As Integer) As Vector3
        parameters:
        - id: l
          type: System.Int32
          description: ''
        - id: r
          type: System.Int32
          description: ''
        return:
          type: Engine.Core.Maths.Vector3
          description: Returns a row vector of the row l+r
      overload: Engine.Core.Maths.Matrix3x3.RowAddition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.RowSubstraction(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Matrix3x3.RowSubstraction(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RowSubstraction(Int32, Int32)
        VB: RowSubstraction(Int32, Int32)
      nameWithType:
        CSharp: Matrix3x3.RowSubstraction(Int32, Int32)
        VB: Matrix3x3.RowSubstraction(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.RowSubstraction(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Matrix3x3.RowSubstraction(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowSubstraction
        path: ''
        startLine: 2334
      syntax:
        content:
          CSharp: public Vector3 RowSubstraction(int l, int r)
          VB: Public Function RowSubstraction(l As Integer, r As Integer) As Vector3
        parameters:
        - id: l
          type: System.Int32
        - id: r
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Matrix3x3.RowSubstraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix3x3.RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: Matrix3x3.RowOperation(Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 2339
      syntax:
        content:
          CSharp: public override void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public Overrides Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.RowOperation*
      overridden: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      implements:
      - Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(Matrix3x3, MatrixOperation, Single)
        VB: Operation(Matrix3x3, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix3x3.Operation(Matrix3x3, MatrixOperation, Single)
        VB: Matrix3x3.Operation(Matrix3x3, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2367
      summary: "\nOperates on the matrix (changes the target row) and outputs the row after the calculation as a vector.\n"
      example: []
      syntax:
        content:
          CSharp: public Matrix3x3 Operation(Matrix3x3 m, MatrixOperation operation, float f = 0F)
          VB: Public Function Operation(m As Matrix3x3, operation As MatrixOperation, f As Single = 0F) As Matrix3x3
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
          description: ''
        - id: f
          type: System.Single
          description: ''
        return:
          type: Engine.Core.Maths.Matrix3x3
          description: ''
      overload: Engine.Core.Maths.Matrix3x3.Operation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(IMatrix, MatrixOperation, Single)
        VB: Operation(IMatrix, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix3x3.Operation(IMatrix, MatrixOperation, Single)
        VB: Matrix3x3.Operation(IMatrix, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2390
      syntax:
        content:
          CSharp: public override IMatrix Operation(IMatrix m, MatrixOperation operation, float f = 0F)
          VB: Public Overrides Function Operation(m As IMatrix, operation As MatrixOperation, f As Single = 0F) As IMatrix
        parameters:
        - id: m
          type: Engine.Core.Maths.IMatrix
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.Matrix3x3.Operation*
      overridden: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      implements:
      - Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.Matrix3x3.GetDeterminant
      commentId: M:Engine.Core.Maths.Matrix3x3.GetDeterminant
      language: CSharp
      name:
        CSharp: GetDeterminant()
        VB: GetDeterminant()
      nameWithType:
        CSharp: Matrix3x3.GetDeterminant()
        VB: Matrix3x3.GetDeterminant()
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetDeterminant()
        VB: Engine.Core.Maths.Matrix3x3.GetDeterminant()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetDeterminant
        path: ''
        startLine: 2394
      syntax:
        content:
          CSharp: public float GetDeterminant()
          VB: Public Function GetDeterminant As Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.GetDeterminant*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(Engine.Core.Maths.Matrix3x3,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.ScalarMultiplication(Engine.Core.Maths.Matrix3x3,System.Single)
      language: CSharp
      name:
        CSharp: ScalarMultiplication(Matrix3x3, Single)
        VB: ScalarMultiplication(Matrix3x3, Single)
      nameWithType:
        CSharp: Matrix3x3.ScalarMultiplication(Matrix3x3, Single)
        VB: Matrix3x3.ScalarMultiplication(Matrix3x3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(Engine.Core.Maths.Matrix3x3, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.ScalarMultiplication(Engine.Core.Maths.Matrix3x3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarMultiplication
        path: ''
        startLine: 2409
      syntax:
        content:
          CSharp: public static Matrix3x3 ScalarMultiplication(Matrix3x3 n, float f)
          VB: Public Shared Function ScalarMultiplication(n As Matrix3x3, f As Single) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.ScalarMultiplication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.ScalarDivision(Engine.Core.Maths.Matrix3x3,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.ScalarDivision(Engine.Core.Maths.Matrix3x3,System.Single)
      language: CSharp
      name:
        CSharp: ScalarDivision(Matrix3x3, Single)
        VB: ScalarDivision(Matrix3x3, Single)
      nameWithType:
        CSharp: Matrix3x3.ScalarDivision(Matrix3x3, Single)
        VB: Matrix3x3.ScalarDivision(Matrix3x3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.ScalarDivision(Engine.Core.Maths.Matrix3x3, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.ScalarDivision(Engine.Core.Maths.Matrix3x3, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarDivision
        path: ''
        startLine: 2413
      syntax:
        content:
          CSharp: public static Matrix3x3 ScalarDivision(Matrix3x3 n, float f)
          VB: Public Shared Function ScalarDivision(n As Matrix3x3, f As Single) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.ScalarDivision*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Multiplication(Matrix3x3, Matrix3x3)
        VB: Multiplication(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Multiplication(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Multiplication(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Multiplication(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiplication
        path: ''
        startLine: 2417
      syntax:
        content:
          CSharp: public static Matrix3x3 Multiplication(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Function Multiplication(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Multiplication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Addition(Matrix3x3, Matrix3x3)
        VB: Addition(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Addition(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Addition(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 2421
      syntax:
        content:
          CSharp: public static Matrix3x3 Addition(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Function Addition(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Substraction(Matrix3x3, Matrix3x3)
        VB: Substraction(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Substraction(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Substraction(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Substraction(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 2425
      syntax:
        content:
          CSharp: public static Matrix3x3 Substraction(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Function Substraction(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Substraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.RowOperation(Engine.Core.Maths.Matrix3x3,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.RowOperation(Engine.Core.Maths.Matrix3x3,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Matrix3x3, Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Matrix3x3, Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix3x3.RowOperation(Matrix3x3, Int32, Int32, MatrixOperation, Single)
        VB: Matrix3x3.RowOperation(Matrix3x3, Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.RowOperation(Engine.Core.Maths.Matrix3x3, System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.RowOperation(Engine.Core.Maths.Matrix3x3, System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 2429
      syntax:
        content:
          CSharp: public static void RowOperation(Matrix3x3 n, int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public Shared Sub RowOperation(n As Matrix3x3, target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.Matrix3x3.RowOperation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(Matrix3x3, Matrix3x3, MatrixOperation, Single)
        VB: Operation(Matrix3x3, Matrix3x3, MatrixOperation, Single)
      nameWithType:
        CSharp: Matrix3x3.Operation(Matrix3x3, Matrix3x3, MatrixOperation, Single)
        VB: Matrix3x3.Operation(Matrix3x3, Matrix3x3, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.Operation(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2433
      syntax:
        content:
          CSharp: public static Matrix3x3 Operation(Matrix3x3 n, Matrix3x3 m, MatrixOperation operation, float f = 0F)
          VB: Public Shared Function Operation(n As Matrix3x3, m As Matrix3x3, operation As MatrixOperation, f As Single = 0F) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.Operation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix
      commentId: M:Engine.Core.Maths.Matrix3x3.GetIdentityMatrix
      language: CSharp
      name:
        CSharp: GetIdentityMatrix()
        VB: GetIdentityMatrix()
      nameWithType:
        CSharp: Matrix3x3.GetIdentityMatrix()
        VB: Matrix3x3.GetIdentityMatrix()
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix()
        VB: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetIdentityMatrix
        path: ''
        startLine: 2437
      syntax:
        content:
          CSharp: public static Matrix3x3 GetIdentityMatrix()
          VB: Public Shared Function GetIdentityMatrix As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.GetInverse(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3@)
      commentId: M:Engine.Core.Maths.Matrix3x3.GetInverse(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3@)
      language: CSharp
      name:
        CSharp: GetInverse(Matrix3x3, out Matrix3x3)
        VB: GetInverse(Matrix3x3, ByRef Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.GetInverse(Matrix3x3, out Matrix3x3)
        VB: Matrix3x3.GetInverse(Matrix3x3, ByRef Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.GetInverse(Engine.Core.Maths.Matrix3x3, out Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.GetInverse(Engine.Core.Maths.Matrix3x3, ByRef Engine.Core.Maths.Matrix3x3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetInverse
        path: ''
        startLine: 2441
      syntax:
        content:
          CSharp: public static bool GetInverse(Matrix3x3 m, out Matrix3x3 inverseMatrix)
          VB: Public Shared Function GetInverse(m As Matrix3x3, ByRef inverseMatrix As Matrix3x3) As Boolean
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        - id: inverseMatrix
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Matrix3x3.GetInverse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Multiply(System.Single,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Multiply(System.Single,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Multiply(Single, Matrix3x3)
        VB: Multiply(Single, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Multiply(Single, Matrix3x3)
        VB: Matrix3x3.Multiply(Single, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Multiply(System.Single, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Multiply(System.Single, Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 2453
      syntax:
        content:
          CSharp: public static Matrix3x3 operator *(float f, Matrix3x3 n)
          VB: Public Shared Operator *(f As Single, n As Matrix3x3) As Matrix3x3
        parameters:
        - id: f
          type: System.Single
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Multiply(Engine.Core.Maths.Matrix3x3,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Multiply(Engine.Core.Maths.Matrix3x3,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Matrix3x3, Single)
        VB: Multiply(Matrix3x3, Single)
      nameWithType:
        CSharp: Matrix3x3.Multiply(Matrix3x3, Single)
        VB: Matrix3x3.Multiply(Matrix3x3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Multiply(Engine.Core.Maths.Matrix3x3, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.Multiply(Engine.Core.Maths.Matrix3x3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 2457
      syntax:
        content:
          CSharp: public static Matrix3x3 operator *(Matrix3x3 n, float f)
          VB: Public Shared Operator *(n As Matrix3x3, f As Single) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Multiply(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Multiply(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Multiply(Matrix3x3, Matrix3x3)
        VB: Multiply(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Multiply(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Multiply(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Multiply(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Multiply(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 2461
      syntax:
        content:
          CSharp: public static Matrix3x3 operator *(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Operator *(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Addition(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Addition(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Addition(Matrix3x3, Matrix3x3)
        VB: Addition(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Addition(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Addition(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Addition(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 2465
      syntax:
        content:
          CSharp: public static Matrix3x3 operator +(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Operator +(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Subtraction(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Subtraction(Engine.Core.Maths.Matrix3x3,Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: Subtraction(Matrix3x3, Matrix3x3)
        VB: Subtraction(Matrix3x3, Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.Subtraction(Matrix3x3, Matrix3x3)
        VB: Matrix3x3.Subtraction(Matrix3x3, Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Subtraction(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.Subtraction(Engine.Core.Maths.Matrix3x3, Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Subtraction
        path: ''
        startLine: 2469
      syntax:
        content:
          CSharp: public static Matrix3x3 operator -(Matrix3x3 n, Matrix3x3 m)
          VB: Public Shared Operator -(n As Matrix3x3, m As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_UnaryNegation(Engine.Core.Maths.Matrix3x3)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_UnaryNegation(Engine.Core.Maths.Matrix3x3)
      language: CSharp
      name:
        CSharp: UnaryNegation(Matrix3x3)
        VB: UnaryNegation(Matrix3x3)
      nameWithType:
        CSharp: Matrix3x3.UnaryNegation(Matrix3x3)
        VB: Matrix3x3.UnaryNegation(Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.UnaryNegation(Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.Matrix3x3.UnaryNegation(Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_UnaryNegation
        path: ''
        startLine: 2473
      syntax:
        content:
          CSharp: public static Matrix3x3 operator -(Matrix3x3 n)
          VB: Public Shared Operator -(n As Matrix3x3) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_UnaryNegation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Division(Engine.Core.Maths.Matrix3x3,System.Single)
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Division(Engine.Core.Maths.Matrix3x3,System.Single)
      language: CSharp
      name:
        CSharp: Division(Matrix3x3, Single)
        VB: Division(Matrix3x3, Single)
      nameWithType:
        CSharp: Matrix3x3.Division(Matrix3x3, Single)
        VB: Matrix3x3.Division(Matrix3x3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Division(Engine.Core.Maths.Matrix3x3, System.Single)
        VB: Engine.Core.Maths.Matrix3x3.Division(Engine.Core.Maths.Matrix3x3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Division
        path: ''
        startLine: 2477
      syntax:
        content:
          CSharp: public static Matrix3x3 operator /(Matrix3x3 n, float f)
          VB: Public Shared Operator /(n As Matrix3x3, f As Single) As Matrix3x3
        parameters:
        - id: n
          type: Engine.Core.Maths.Matrix3x3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.Matrix3x3.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Matrix3x3.op_Implicit(Engine.Core.Maths.Matrix3x3)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.Matrix3x3.op_Implicit(Engine.Core.Maths.Matrix3x3)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(Matrix3x3 to MatrixMxN)
        VB: Widening(Matrix3x3 to MatrixMxN)
      nameWithType:
        CSharp: Matrix3x3.Implicit(Matrix3x3 to MatrixMxN)
        VB: Matrix3x3.Widening(Matrix3x3 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.Matrix3x3.Implicit(Engine.Core.Maths.Matrix3x3 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.Matrix3x3.Widening(Engine.Core.Maths.Matrix3x3 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 2481
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(Matrix3x3 m)
          VB: Public Shared Widening Operator CType(m As Matrix3x3) As MatrixMxN
        parameters:
        - id: m
          type: Engine.Core.Maths.Matrix3x3
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Matrix3x3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.MatrixMxN
    commentId: T:Engine.Core.Maths.MatrixMxN
    language: CSharp
    name:
      CSharp: MatrixMxN
      VB: MatrixMxN
    nameWithType:
      CSharp: MatrixMxN
      VB: MatrixMxN
    qualifiedName:
      CSharp: Engine.Core.Maths.MatrixMxN
      VB: Engine.Core.Maths.MatrixMxN
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: MatrixMxN
      path: ''
      startLine: 2506
    syntax:
      content:
        CSharp: 'public class MatrixMxN : Matrix, IMatrix'
        VB: >-
          Public Class MatrixMxN

              Inherits Matrix

              Implements IMatrix
    inheritance:
    - System.Object
    - Engine.Core.Maths.Matrix
    implements:
    - Engine.Core.Maths.IMatrix
    inheritedMembers:
    - Engine.Core.Maths.Matrix.I2x2
    - Engine.Core.Maths.Matrix.I3x3
    - Engine.Core.Maths.Matrix.I4x4
    - Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,{T}@)
    - Engine.Core.Maths.Matrix.GetInverse``1({T},{T}@)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.MatrixMxN.RowCount
      commentId: P:Engine.Core.Maths.MatrixMxN.RowCount
      language: CSharp
      name:
        CSharp: RowCount
        VB: RowCount
      nameWithType:
        CSharp: MatrixMxN.RowCount
        VB: MatrixMxN.RowCount
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RowCount
        VB: Engine.Core.Maths.MatrixMxN.RowCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowCount
        path: ''
        startLine: 2514
      syntax:
        content:
          CSharp: public override int RowCount { get; }
          VB: Public Overrides ReadOnly Property RowCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.RowCount*
      overridden: Engine.Core.Maths.Matrix.RowCount
      implements:
      - Engine.Core.Maths.IMatrix.RowCount
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Engine.Core.Maths.MatrixMxN.ColumnCount
      commentId: P:Engine.Core.Maths.MatrixMxN.ColumnCount
      language: CSharp
      name:
        CSharp: ColumnCount
        VB: ColumnCount
      nameWithType:
        CSharp: MatrixMxN.ColumnCount
        VB: MatrixMxN.ColumnCount
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ColumnCount
        VB: Engine.Core.Maths.MatrixMxN.ColumnCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ColumnCount
        path: ''
        startLine: 2515
      syntax:
        content:
          CSharp: public override int ColumnCount { get; }
          VB: Public Overrides ReadOnly Property ColumnCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.ColumnCount*
      overridden: Engine.Core.Maths.Matrix.ColumnCount
      implements:
      - Engine.Core.Maths.IMatrix.ColumnCount
      modifiers:
        CSharp:
        - public
        - override
        - get
        VB:
        - Public
        - Overrides
        - ReadOnly
    - id: Engine.Core.Maths.MatrixMxN.Item(System.Int32,System.Int32)
      commentId: P:Engine.Core.Maths.MatrixMxN.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.Item[Int32, Int32]
        VB: MatrixMxN.Item(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Item[System.Int32, System.Int32]
        VB: Engine.Core.Maths.MatrixMxN.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 2516
      syntax:
        content:
          CSharp: public override float this[int r, int c] { get; set; }
          VB: Public Overrides Property Item(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.MatrixMxN.Item*
      overridden: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
      implements:
      - Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        - get
        - set
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.MatrixMxN.#ctor
      commentId: M:Engine.Core.Maths.MatrixMxN.#ctor
      language: CSharp
      name:
        CSharp: MatrixMxN()
        VB: MatrixMxN()
      nameWithType:
        CSharp: MatrixMxN.MatrixMxN()
        VB: MatrixMxN.MatrixMxN()
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.MatrixMxN()
        VB: Engine.Core.Maths.MatrixMxN.MatrixMxN()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2522
      syntax:
        content:
          CSharp: public MatrixMxN()
          VB: Public Sub New
      overload: Engine.Core.Maths.MatrixMxN.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})
      commentId: M:Engine.Core.Maths.MatrixMxN.#ctor(System.Collections.Generic.List{Engine.Core.Maths.Vector})
      language: CSharp
      name:
        CSharp: MatrixMxN(List<Vector>)
        VB: MatrixMxN(List(Of Vector))
      nameWithType:
        CSharp: MatrixMxN.MatrixMxN(List<Vector>)
        VB: MatrixMxN.MatrixMxN(List(Of Vector))
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Collections.Generic.List<Engine.Core.Maths.Vector>)
        VB: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Collections.Generic.List(Of Engine.Core.Maths.Vector))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2523
      syntax:
        content:
          CSharp: public MatrixMxN(List<Vector> rows)
          VB: Public Sub New(rows As List(Of Vector))
        parameters:
        - id: rows
          type: System.Collections.Generic.List{Engine.Core.Maths.Vector}
      overload: Engine.Core.Maths.MatrixMxN.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.#ctor(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.#ctor(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: MatrixMxN(Int32, Int32)
        VB: MatrixMxN(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.MatrixMxN(Int32, Int32)
        VB: MatrixMxN.MatrixMxN(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Int32, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.MatrixMxN(System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 2527
      syntax:
        content:
          CSharp: public MatrixMxN(int r, int c)
          VB: Public Sub New(r As Integer, c As Integer)
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetValue(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetValue(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(Int32, Int32)
        VB: GetValue(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.GetValue(Int32, Int32)
        VB: MatrixMxN.GetValue(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetValue(System.Int32, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.GetValue(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetValue
        path: ''
        startLine: 2621
      syntax:
        content:
          CSharp: public float GetValue(int r, int c)
          VB: Public Function GetValue(r As Integer, c As Integer) As Single
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.MatrixMxN.GetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.SetValue(System.Int32,System.Int32,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.SetValue(System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: SetValue(Int32, Int32, Single)
        VB: SetValue(Int32, Int32, Single)
      nameWithType:
        CSharp: MatrixMxN.SetValue(Int32, Int32, Single)
        VB: MatrixMxN.SetValue(Int32, Int32, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.SetValue(System.Int32, System.Int32, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.SetValue(System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetValue
        path: ''
        startLine: 2629
      syntax:
        content:
          CSharp: public void SetValue(int r, int c, float value)
          VB: Public Sub SetValue(r As Integer, c As Integer, value As Single)
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        - id: value
          type: System.Single
      overload: Engine.Core.Maths.MatrixMxN.SetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
      language: CSharp
      name:
        CSharp: GetRow(Int32)
        VB: GetRow(Int32)
      nameWithType:
        CSharp: MatrixMxN.GetRow(Int32)
        VB: MatrixMxN.GetRow(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.GetRow(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetRow
        path: ''
        startLine: 2637
      syntax:
        content:
          CSharp: public Vector GetRow(int r)
          VB: Public Function GetRow(r As Integer) As Vector
        parameters:
        - id: r
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.MatrixMxN.GetRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
      language: CSharp
      name:
        CSharp: GetColumn(Int32)
        VB: GetColumn(Int32)
      nameWithType:
        CSharp: MatrixMxN.GetColumn(Int32)
        VB: MatrixMxN.GetColumn(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.GetColumn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetColumn
        path: ''
        startLine: 2650
      syntax:
        content:
          CSharp: public Vector GetColumn(int c)
          VB: Public Function GetColumn(c As Integer) As Vector
        parameters:
        - id: c
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.MatrixMxN.GetColumn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: AddRow(Vector)
        VB: AddRow(Vector)
      nameWithType:
        CSharp: MatrixMxN.AddRow(Vector)
        VB: MatrixMxN.AddRow(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.MatrixMxN.AddRow(Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AddRow
        path: ''
        startLine: 2663
      syntax:
        content:
          CSharp: public void AddRow(Vector row)
          VB: Public Sub AddRow(row As Vector)
        parameters:
        - id: row
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.MatrixMxN.AddRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector,System.Int32)
      language: CSharp
      name:
        CSharp: InsertRow(Vector, Int32)
        VB: InsertRow(Vector, Int32)
      nameWithType:
        CSharp: MatrixMxN.InsertRow(Vector, Int32)
        VB: MatrixMxN.InsertRow(Vector, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.InsertRow(Engine.Core.Maths.Vector, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: InsertRow
        path: ''
        startLine: 2672
      syntax:
        content:
          CSharp: public void InsertRow(Vector row, int index)
          VB: Public Sub InsertRow(row As Vector, index As Integer)
        parameters:
        - id: row
          type: Engine.Core.Maths.Vector
        - id: index
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.InsertRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveRow(Int32)
        VB: RemoveRow(Int32)
      nameWithType:
        CSharp: MatrixMxN.RemoveRow(Int32)
        VB: MatrixMxN.RemoveRow(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.RemoveRow(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RemoveRow
        path: ''
        startLine: 2681
      syntax:
        content:
          CSharp: public void RemoveRow(int index)
          VB: Public Sub RemoveRow(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.RemoveRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
      language: CSharp
      name:
        CSharp: RemoveColumn(Int32)
        VB: RemoveColumn(Int32)
      nameWithType:
        CSharp: MatrixMxN.RemoveColumn(Int32)
        VB: MatrixMxN.RemoveColumn(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.RemoveColumn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RemoveColumn
        path: ''
        startLine: 2686
      syntax:
        content:
          CSharp: public void RemoveColumn(int index)
          VB: Public Sub RemoveColumn(index As Integer)
        parameters:
        - id: index
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.RemoveColumn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.SwapRows(Int32, Int32)
        VB: MatrixMxN.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SwapRows
        path: ''
        startLine: 2703
      syntax:
        content:
          CSharp: public override void SwapRows(int from, int to)
          VB: Public Overrides Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.MatrixMxN.SwapRows*
      overridden: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
      implements:
      - Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
      language: CSharp
      name:
        CSharp: ScalarMultiplication(Single)
        VB: ScalarMultiplication(Single)
      nameWithType:
        CSharp: MatrixMxN.ScalarMultiplication(Single)
        VB: MatrixMxN.ScalarMultiplication(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
        VB: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarMultiplication
        path: ''
        startLine: 2710
      syntax:
        content:
          CSharp: public MatrixMxN ScalarMultiplication(float f)
          VB: Public Function ScalarMultiplication(f As Single) As MatrixMxN
        parameters:
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
      language: CSharp
      name:
        CSharp: ScalarDivision(Single)
        VB: ScalarDivision(Single)
      nameWithType:
        CSharp: MatrixMxN.ScalarDivision(Single)
        VB: MatrixMxN.ScalarDivision(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
        VB: Engine.Core.Maths.MatrixMxN.ScalarDivision(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarDivision
        path: ''
        startLine: 2724
      syntax:
        content:
          CSharp: public MatrixMxN ScalarDivision(float f)
          VB: Public Function ScalarDivision(f As Single) As MatrixMxN
        parameters:
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.ScalarDivision*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Multiplication(MatrixMxN)
        VB: Multiplication(MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Multiplication(MatrixMxN)
        VB: MatrixMxN.Multiplication(MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiplication
        path: ''
        startLine: 2729
      syntax:
        content:
          CSharp: public MatrixMxN Multiplication(MatrixMxN m)
          VB: Public Function Multiplication(m As MatrixMxN) As MatrixMxN
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Multiplication*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Addition(MatrixMxN)
        VB: Addition(MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Addition(MatrixMxN)
        VB: MatrixMxN.Addition(MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 2749
      syntax:
        content:
          CSharp: public MatrixMxN Addition(MatrixMxN m)
          VB: Public Function Addition(m As MatrixMxN) As MatrixMxN
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Addition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Substraction(MatrixMxN)
        VB: Substraction(MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Substraction(MatrixMxN)
        VB: MatrixMxN.Substraction(MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 2767
      syntax:
        content:
          CSharp: public MatrixMxN Substraction(MatrixMxN m)
          VB: Public Function Substraction(m As MatrixMxN) As MatrixMxN
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Substraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RowAddition(Int32, Int32)
        VB: RowAddition(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.RowAddition(Int32, Int32)
        VB: MatrixMxN.RowAddition(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.RowAddition(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowAddition
        path: ''
        startLine: 2793
      summary: "\nCalculates l+r. Doesn&apos;s change any row in the matrix\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">l</code> left side of the equation\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">r</code> right side of the equation\n"
      example: []
      syntax:
        content:
          CSharp: public Vector RowAddition(int l, int r)
          VB: Public Function RowAddition(l As Integer, r As Integer) As Vector
        parameters:
        - id: l
          type: System.Int32
          description: ''
        - id: r
          type: System.Int32
          description: ''
        return:
          type: Engine.Core.Maths.Vector
          description: Returns a row vector of the row l+r
      overload: Engine.Core.Maths.MatrixMxN.RowAddition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: RowSubstraction(Int32, Int32)
        VB: RowSubstraction(Int32, Int32)
      nameWithType:
        CSharp: MatrixMxN.RowSubstraction(Int32, Int32)
        VB: MatrixMxN.RowSubstraction(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32, System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.RowSubstraction(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowSubstraction
        path: ''
        startLine: 2799
      syntax:
        content:
          CSharp: public Vector RowSubstraction(int l, int r)
          VB: Public Function RowSubstraction(l As Integer, r As Integer) As Vector
        parameters:
        - id: l
          type: System.Int32
        - id: r
          type: System.Int32
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.MatrixMxN.RowSubstraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: MatrixMxN.RowOperation(Int32, Int32, MatrixOperation, Single)
        VB: MatrixMxN.RowOperation(Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.RowOperation(System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 2805
      syntax:
        content:
          CSharp: public override void RowOperation(int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public Overrides Sub RowOperation(target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.MatrixMxN.RowOperation*
      overridden: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      implements:
      - Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(MatrixMxN, MatrixOperation, Single)
        VB: Operation(MatrixMxN, MatrixOperation, Single)
      nameWithType:
        CSharp: MatrixMxN.Operation(MatrixMxN, MatrixOperation, Single)
        VB: MatrixMxN.Operation(MatrixMxN, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2833
      summary: "\nOperates on the matrix (changes the target row) and outputs the row after the calculation as a vector.\n"
      example: []
      syntax:
        content:
          CSharp: public MatrixMxN Operation(MatrixMxN m, MatrixOperation operation, float f = 0F)
          VB: Public Function Operation(m As MatrixMxN, operation As MatrixOperation, f As Single = 0F) As MatrixMxN
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
          description: ''
        - id: f
          type: System.Single
          description: ''
        return:
          type: Engine.Core.Maths.MatrixMxN
          description: ''
      overload: Engine.Core.Maths.MatrixMxN.Operation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(IMatrix, MatrixOperation, Single)
        VB: Operation(IMatrix, MatrixOperation, Single)
      nameWithType:
        CSharp: MatrixMxN.Operation(IMatrix, MatrixOperation, Single)
        VB: MatrixMxN.Operation(IMatrix, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.IMatrix, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 2856
      syntax:
        content:
          CSharp: public override IMatrix Operation(IMatrix m, MatrixOperation operation, float f = 0F)
          VB: Public Overrides Function Operation(m As IMatrix, operation As MatrixOperation, f As Single = 0F) As IMatrix
        parameters:
        - id: m
          type: Engine.Core.Maths.IMatrix
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.IMatrix
      overload: Engine.Core.Maths.MatrixMxN.Operation*
      overridden: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      implements:
      - Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: Engine.Core.Maths.MatrixMxN.Transpose
      commentId: M:Engine.Core.Maths.MatrixMxN.Transpose
      language: CSharp
      name:
        CSharp: Transpose()
        VB: Transpose()
      nameWithType:
        CSharp: MatrixMxN.Transpose()
        VB: MatrixMxN.Transpose()
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Transpose()
        VB: Engine.Core.Maths.MatrixMxN.Transpose()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Transpose
        path: ''
        startLine: 2860
      syntax:
        content:
          CSharp: public void Transpose()
          VB: Public Sub Transpose
      overload: Engine.Core.Maths.MatrixMxN.Transpose*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32,System.Int32,Engine.Core.Maths.MatrixMxN@)
      language: CSharp
      name:
        CSharp: GetSubMatrix(Int32, Int32, out MatrixMxN)
        VB: GetSubMatrix(Int32, Int32, ByRef MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.GetSubMatrix(Int32, Int32, out MatrixMxN)
        VB: MatrixMxN.GetSubMatrix(Int32, Int32, ByRef MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32, System.Int32, out Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.GetSubMatrix(System.Int32, System.Int32, ByRef Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetSubMatrix
        path: ''
        startLine: 2880
      syntax:
        content:
          CSharp: public bool GetSubMatrix(int r, int c, out MatrixMxN subMatrix)
          VB: Public Function GetSubMatrix(r As Integer, c As Integer, ByRef subMatrix As MatrixMxN) As Boolean
        parameters:
        - id: r
          type: System.Int32
        - id: c
          type: System.Int32
        - id: subMatrix
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetSubMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
      commentId: M:Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN,System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}@)
      language: CSharp
      name:
        CSharp: Get2x2SubMatrices(MatrixMxN, out List<MatrixMxN>)
        VB: Get2x2SubMatrices(MatrixMxN, ByRef List(Of MatrixMxN))
      nameWithType:
        CSharp: MatrixMxN.Get2x2SubMatrices(MatrixMxN, out List<MatrixMxN>)
        VB: MatrixMxN.Get2x2SubMatrices(MatrixMxN, ByRef List(Of MatrixMxN))
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN, out System.Collections.Generic.List<Engine.Core.Maths.MatrixMxN>)
        VB: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices(Engine.Core.Maths.MatrixMxN, ByRef System.Collections.Generic.List(Of Engine.Core.Maths.MatrixMxN))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Get2x2SubMatrices
        path: ''
        startLine: 2900
      syntax:
        content:
          CSharp: public bool Get2x2SubMatrices(MatrixMxN m, out List<MatrixMxN> subs)
          VB: Public Function Get2x2SubMatrices(m As MatrixMxN, ByRef subs As List(Of MatrixMxN)) As Boolean
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        - id: subs
          type: System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetMinorMatrix(Engine.Core.Maths.MatrixMxN@)
      language: CSharp
      name:
        CSharp: GetMinorMatrix(out MatrixMxN)
        VB: GetMinorMatrix(ByRef MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.GetMinorMatrix(out MatrixMxN)
        VB: MatrixMxN.GetMinorMatrix(ByRef MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(out Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.GetMinorMatrix(ByRef Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetMinorMatrix
        path: ''
        startLine: 2932
      syntax:
        content:
          CSharp: public bool GetMinorMatrix(out MatrixMxN minor)
          VB: Public Function GetMinorMatrix(ByRef minor As MatrixMxN) As Boolean
        parameters:
        - id: minor
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetMinorMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(Engine.Core.Maths.MatrixMxN@)
      language: CSharp
      name:
        CSharp: GetCofactorMatrix(out MatrixMxN)
        VB: GetCofactorMatrix(ByRef MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.GetCofactorMatrix(out MatrixMxN)
        VB: MatrixMxN.GetCofactorMatrix(ByRef MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(out Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix(ByRef Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetCofactorMatrix
        path: ''
        startLine: 2973
      syntax:
        content:
          CSharp: public bool GetCofactorMatrix(out MatrixMxN fac)
          VB: Public Function GetCofactorMatrix(ByRef fac As MatrixMxN) As Boolean
        parameters:
        - id: fac
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetDeterminant(System.Single@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetDeterminant(System.Single@)
      language: CSharp
      name:
        CSharp: GetDeterminant(out Single)
        VB: GetDeterminant(ByRef Single)
      nameWithType:
        CSharp: MatrixMxN.GetDeterminant(out Single)
        VB: MatrixMxN.GetDeterminant(ByRef Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetDeterminant(out System.Single)
        VB: Engine.Core.Maths.MatrixMxN.GetDeterminant(ByRef System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetDeterminant
        path: ''
        startLine: 2991
      syntax:
        content:
          CSharp: public bool GetDeterminant(out float determinant)
          VB: Public Function GetDeterminant(ByRef determinant As Single) As Boolean
        parameters:
        - id: determinant
          type: System.Single
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetDeterminant*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(Engine.Core.Maths.MatrixMxN@)
      language: CSharp
      name:
        CSharp: GetAdjointMatrix(out MatrixMxN)
        VB: GetAdjointMatrix(ByRef MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.GetAdjointMatrix(out MatrixMxN)
        VB: MatrixMxN.GetAdjointMatrix(ByRef MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(out Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix(ByRef Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetAdjointMatrix
        path: ''
        startLine: 3034
      syntax:
        content:
          CSharp: public bool GetAdjointMatrix(out MatrixMxN adj)
          VB: Public Function GetAdjointMatrix(ByRef adj As MatrixMxN) As Boolean
        parameters:
        - id: adj
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.ToVector3(Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.MatrixMxN.ToVector3(Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: ToVector3(out Vector3)
        VB: ToVector3(ByRef Vector3)
      nameWithType:
        CSharp: MatrixMxN.ToVector3(out Vector3)
        VB: MatrixMxN.ToVector3(ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ToVector3(out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.MatrixMxN.ToVector3(ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToVector3
        path: ''
        startLine: 3046
      syntax:
        content:
          CSharp: public bool ToVector3(out Vector3 v)
          VB: Public Function ToVector3(ByRef v As Vector3) As Boolean
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.ToVector3*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.ToVector(Engine.Core.Maths.Vector@)
      commentId: M:Engine.Core.Maths.MatrixMxN.ToVector(Engine.Core.Maths.Vector@)
      language: CSharp
      name:
        CSharp: ToVector(out Vector)
        VB: ToVector(ByRef Vector)
      nameWithType:
        CSharp: MatrixMxN.ToVector(out Vector)
        VB: MatrixMxN.ToVector(ByRef Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ToVector(out Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.MatrixMxN.ToVector(ByRef Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToVector
        path: ''
        startLine: 3057
      syntax:
        content:
          CSharp: public bool ToVector(out Vector v)
          VB: Public Function ToVector(ByRef v As Vector) As Boolean
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.ToVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN,System.Single)
      language: CSharp
      name:
        CSharp: ScalarMultiplication(MatrixMxN, Single)
        VB: ScalarMultiplication(MatrixMxN, Single)
      nameWithType:
        CSharp: MatrixMxN.ScalarMultiplication(MatrixMxN, Single)
        VB: MatrixMxN.ScalarMultiplication(MatrixMxN, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.ScalarMultiplication(Engine.Core.Maths.MatrixMxN, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarMultiplication
        path: ''
        startLine: 3073
      syntax:
        content:
          CSharp: public static MatrixMxN ScalarMultiplication(MatrixMxN n, float f)
          VB: Public Shared Function ScalarMultiplication(n As MatrixMxN, f As Single) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN,System.Single)
      language: CSharp
      name:
        CSharp: ScalarDivision(MatrixMxN, Single)
        VB: ScalarDivision(MatrixMxN, Single)
      nameWithType:
        CSharp: MatrixMxN.ScalarDivision(MatrixMxN, Single)
        VB: MatrixMxN.ScalarDivision(MatrixMxN, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.ScalarDivision(Engine.Core.Maths.MatrixMxN, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarDivision
        path: ''
        startLine: 3077
      syntax:
        content:
          CSharp: public static MatrixMxN ScalarDivision(MatrixMxN n, float f)
          VB: Public Shared Function ScalarDivision(n As MatrixMxN, f As Single) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.ScalarDivision*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Multiplication(MatrixMxN, MatrixMxN)
        VB: Multiplication(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Multiplication(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Multiplication(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Multiplication(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiplication
        path: ''
        startLine: 3081
      syntax:
        content:
          CSharp: public static MatrixMxN Multiplication(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Function Multiplication(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Multiplication*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Addition(MatrixMxN, MatrixMxN)
        VB: Addition(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 3085
      syntax:
        content:
          CSharp: public static MatrixMxN Addition(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Function Addition(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Substraction(MatrixMxN, MatrixMxN)
        VB: Substraction(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Substraction(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Substraction(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Substraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 3089
      syntax:
        content:
          CSharp: public static MatrixMxN Substraction(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Function Substraction(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Substraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN,System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
        VB: RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
      nameWithType:
        CSharp: MatrixMxN.RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
        VB: MatrixMxN.RowOperation(MatrixMxN, Int32, Int32, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN, System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.RowOperation(Engine.Core.Maths.MatrixMxN, System.Int32, System.Int32, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: RowOperation
        path: ''
        startLine: 3093
      syntax:
        content:
          CSharp: public static void RowOperation(MatrixMxN n, int target, int source, MatrixOperation operation, float f = 0F)
          VB: Public Shared Sub RowOperation(n As MatrixMxN, target As Integer, source As Integer, operation As MatrixOperation, f As Single = 0F)
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: target
          type: System.Int32
        - id: source
          type: System.Int32
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
      overload: Engine.Core.Maths.MatrixMxN.RowOperation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixOperation,System.Single)
      language: CSharp
      name:
        CSharp: Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
        VB: Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
      nameWithType:
        CSharp: MatrixMxN.Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
        VB: MatrixMxN.Operation(MatrixMxN, MatrixMxN, MatrixOperation, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.Operation(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixOperation, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Operation
        path: ''
        startLine: 3097
      syntax:
        content:
          CSharp: public static MatrixMxN Operation(MatrixMxN n, MatrixMxN m, MatrixOperation operation, float f = 0F)
          VB: Public Shared Function Operation(n As MatrixMxN, m As MatrixMxN, operation As MatrixOperation, f As Single = 0F) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        - id: operation
          type: Engine.Core.Maths.MatrixOperation
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.Operation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
      language: CSharp
      name:
        CSharp: GetIdentityMatrix(Int32)
        VB: GetIdentityMatrix(Int32)
      nameWithType:
        CSharp: MatrixMxN.GetIdentityMatrix(Int32)
        VB: MatrixMxN.GetIdentityMatrix(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
        VB: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetIdentityMatrix
        path: ''
        startLine: 3106
      summary: "\nCreates a nxn identity and returns it.\n"
      example: []
      syntax:
        content:
          CSharp: public static MatrixMxN GetIdentityMatrix(int n)
          VB: Public Shared Function GetIdentityMatrix(n As Integer) As MatrixMxN
        parameters:
        - id: n
          type: System.Int32
          description: ''
        return:
          type: Engine.Core.Maths.MatrixMxN
          description: ''
      overload: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
      commentId: M:Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN@)
      language: CSharp
      name:
        CSharp: GetInverse(MatrixMxN, out MatrixMxN)
        VB: GetInverse(MatrixMxN, ByRef MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.GetInverse(MatrixMxN, out MatrixMxN)
        VB: MatrixMxN.GetInverse(MatrixMxN, ByRef MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN, out Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.GetInverse(Engine.Core.Maths.MatrixMxN, ByRef Engine.Core.Maths.MatrixMxN)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetInverse
        path: ''
        startLine: 3121
      syntax:
        content:
          CSharp: public static bool GetInverse(MatrixMxN m, out MatrixMxN inverseMatrix)
          VB: Public Shared Function GetInverse(m As MatrixMxN, ByRef inverseMatrix As MatrixMxN) As Boolean
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        - id: inverseMatrix
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.MatrixMxN.GetInverse*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(System.Single,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Multiply(Single, MatrixMxN)
        VB: Multiply(Single, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Multiply(Single, MatrixMxN)
        VB: MatrixMxN.Multiply(Single, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Multiply(System.Single, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Multiply(System.Single, Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 3135
      syntax:
        content:
          CSharp: public static MatrixMxN operator *(float f, MatrixMxN n)
          VB: Public Shared Operator *(f As Single, n As MatrixMxN) As MatrixMxN
        parameters:
        - id: f
          type: System.Single
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(MatrixMxN, Single)
        VB: Multiply(MatrixMxN, Single)
      nameWithType:
        CSharp: MatrixMxN.Multiply(MatrixMxN, Single)
        VB: MatrixMxN.Multiply(MatrixMxN, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 3139
      syntax:
        content:
          CSharp: public static MatrixMxN operator *(MatrixMxN n, float f)
          VB: Public Shared Operator *(n As MatrixMxN, f As Single) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Multiply(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Multiply(MatrixMxN, MatrixMxN)
        VB: Multiply(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Multiply(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Multiply(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Multiply(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 3143
      syntax:
        content:
          CSharp: public static MatrixMxN operator *(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Operator *(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Addition(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Addition(MatrixMxN, MatrixMxN)
        VB: Addition(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Addition(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Addition(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 3147
      syntax:
        content:
          CSharp: public static MatrixMxN operator +(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Operator +(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Subtraction(Engine.Core.Maths.MatrixMxN,Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: Subtraction(MatrixMxN, MatrixMxN)
        VB: Subtraction(MatrixMxN, MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.Subtraction(MatrixMxN, MatrixMxN)
        VB: MatrixMxN.Subtraction(MatrixMxN, MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Subtraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.Subtraction(Engine.Core.Maths.MatrixMxN, Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Subtraction
        path: ''
        startLine: 3151
      syntax:
        content:
          CSharp: public static MatrixMxN operator -(MatrixMxN n, MatrixMxN m)
          VB: Public Shared Operator -(n As MatrixMxN, m As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_UnaryNegation(Engine.Core.Maths.MatrixMxN)
      language: CSharp
      name:
        CSharp: UnaryNegation(MatrixMxN)
        VB: UnaryNegation(MatrixMxN)
      nameWithType:
        CSharp: MatrixMxN.UnaryNegation(MatrixMxN)
        VB: MatrixMxN.UnaryNegation(MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.UnaryNegation(Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.MatrixMxN.UnaryNegation(Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_UnaryNegation
        path: ''
        startLine: 3155
      syntax:
        content:
          CSharp: public static MatrixMxN operator -(MatrixMxN n)
          VB: Public Shared Operator -(n As MatrixMxN) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_UnaryNegation*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Division(Engine.Core.Maths.MatrixMxN,System.Single)
      language: CSharp
      name:
        CSharp: Division(MatrixMxN, Single)
        VB: Division(MatrixMxN, Single)
      nameWithType:
        CSharp: MatrixMxN.Division(MatrixMxN, Single)
        VB: MatrixMxN.Division(MatrixMxN, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Division(Engine.Core.Maths.MatrixMxN, System.Single)
        VB: Engine.Core.Maths.MatrixMxN.Division(Engine.Core.Maths.MatrixMxN, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Division
        path: ''
        startLine: 3159
      syntax:
        content:
          CSharp: public static MatrixMxN operator /(MatrixMxN n, float f)
          VB: Public Shared Operator /(n As MatrixMxN, f As Single) As MatrixMxN
        parameters:
        - id: n
          type: Engine.Core.Maths.MatrixMxN
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MatrixMxN.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.MatrixMxN.op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
      commentId: M:Engine.Core.Maths.MatrixMxN.op_Implicit(Engine.Core.Maths.MatrixMxN)~Engine.Core.Maths.Matrix3x3
      language: CSharp
      name:
        CSharp: Implicit(MatrixMxN to Matrix3x3)
        VB: Widening(MatrixMxN to Matrix3x3)
      nameWithType:
        CSharp: MatrixMxN.Implicit(MatrixMxN to Matrix3x3)
        VB: MatrixMxN.Widening(MatrixMxN to Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.MatrixMxN.Implicit(Engine.Core.Maths.MatrixMxN to Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.MatrixMxN.Widening(Engine.Core.Maths.MatrixMxN to Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3163
      syntax:
        content:
          CSharp: public static implicit operator Matrix3x3(MatrixMxN m)
          VB: Public Shared Widening Operator CType(m As MatrixMxN) As Matrix3x3
        parameters:
        - id: m
          type: Engine.Core.Maths.MatrixMxN
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.MatrixMxN.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.MirrorMatrix3x3
    commentId: T:Engine.Core.Maths.MirrorMatrix3x3
    language: CSharp
    name:
      CSharp: MirrorMatrix3x3
      VB: MirrorMatrix3x3
    nameWithType:
      CSharp: MirrorMatrix3x3
      VB: MirrorMatrix3x3
    qualifiedName:
      CSharp: Engine.Core.Maths.MirrorMatrix3x3
      VB: Engine.Core.Maths.MirrorMatrix3x3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: MirrorMatrix3x3
      path: ''
      startLine: 3182
    syntax:
      content:
        CSharp: public class MirrorMatrix3x3
        VB: Public Class MirrorMatrix3x3
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.MirrorMatrix3x3.M3x3
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.M3x3
      language: CSharp
      name:
        CSharp: M3x3
        VB: M3x3
      nameWithType:
        CSharp: MirrorMatrix3x3.M3x3
        VB: MirrorMatrix3x3.M3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.M3x3
        VB: Engine.Core.Maths.MirrorMatrix3x3.M3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: M3x3
        path: ''
        startLine: 3184
      syntax:
        content:
          CSharp: public readonly Matrix3x3 M3x3
          VB: Public ReadOnly M3x3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_FreeSpace
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_FreeSpace
      language: CSharp
      name:
        CSharp: Mirror_FreeSpace
        VB: Mirror_FreeSpace
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_FreeSpace
        VB: MirrorMatrix3x3.Mirror_FreeSpace
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_FreeSpace
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_FreeSpace
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_FreeSpace
        path: ''
        startLine: 3186
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_FreeSpace
          VB: Public Shared ReadOnly Mirror_FreeSpace As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X1
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_X1
      language: CSharp
      name:
        CSharp: Mirror_X1
        VB: Mirror_X1
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_X1
        VB: MirrorMatrix3x3.Mirror_X1
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X1
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_X1
        path: ''
        startLine: 3187
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_X1
          VB: Public Shared ReadOnly Mirror_X1 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X2
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_X2
      language: CSharp
      name:
        CSharp: Mirror_X2
        VB: Mirror_X2
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_X2
        VB: MirrorMatrix3x3.Mirror_X2
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X2
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_X2
        path: ''
        startLine: 3188
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_X2
          VB: Public Shared ReadOnly Mirror_X2 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X3
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_X3
      language: CSharp
      name:
        CSharp: Mirror_X3
        VB: Mirror_X3
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_X3
        VB: MirrorMatrix3x3.Mirror_X3
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X3
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_X3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_X3
        path: ''
        startLine: 3189
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_X3
          VB: Public Shared ReadOnly Mirror_X3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X1_Roof
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X1_Roof
      language: CSharp
      name:
        CSharp: Mirror_90Degree_X1_Roof
        VB: Mirror_90Degree_X1_Roof
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_90Degree_X1_Roof
        VB: MirrorMatrix3x3.Mirror_90Degree_X1_Roof
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X1_Roof
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X1_Roof
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_90Degree_X1_Roof
        path: ''
        startLine: 3190
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_90Degree_X1_Roof
          VB: Public Shared ReadOnly Mirror_90Degree_X1_Roof As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X2_Roof
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X2_Roof
      language: CSharp
      name:
        CSharp: Mirror_90Degree_X2_Roof
        VB: Mirror_90Degree_X2_Roof
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_90Degree_X2_Roof
        VB: MirrorMatrix3x3.Mirror_90Degree_X2_Roof
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X2_Roof
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X2_Roof
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_90Degree_X2_Roof
        path: ''
        startLine: 3191
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_90Degree_X2_Roof
          VB: Public Shared ReadOnly Mirror_90Degree_X2_Roof As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X3_Roof
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X3_Roof
      language: CSharp
      name:
        CSharp: Mirror_90Degree_X3_Roof
        VB: Mirror_90Degree_X3_Roof
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_90Degree_X3_Roof
        VB: MirrorMatrix3x3.Mirror_90Degree_X3_Roof
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X3_Roof
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_90Degree_X3_Roof
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_90Degree_X3_Roof
        path: ''
        startLine: 3192
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_90Degree_X3_Roof
          VB: Public Shared ReadOnly Mirror_90Degree_X3_Roof As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_45Degree_X1_Roof
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_45Degree_X1_Roof
      language: CSharp
      name:
        CSharp: Mirror_45Degree_X1_Roof
        VB: Mirror_45Degree_X1_Roof
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_45Degree_X1_Roof
        VB: MirrorMatrix3x3.Mirror_45Degree_X1_Roof
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_45Degree_X1_Roof
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_45Degree_X1_Roof
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_45Degree_X1_Roof
        path: ''
        startLine: 3193
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_45Degree_X1_Roof
          VB: Public Shared ReadOnly Mirror_45Degree_X1_Roof As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.Mirror_Cube_Corner
      commentId: F:Engine.Core.Maths.MirrorMatrix3x3.Mirror_Cube_Corner
      language: CSharp
      name:
        CSharp: Mirror_Cube_Corner
        VB: Mirror_Cube_Corner
      nameWithType:
        CSharp: MirrorMatrix3x3.Mirror_Cube_Corner
        VB: MirrorMatrix3x3.Mirror_Cube_Corner
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.Mirror_Cube_Corner
        VB: Engine.Core.Maths.MirrorMatrix3x3.Mirror_Cube_Corner
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Mirror_Cube_Corner
        path: ''
        startLine: 3194
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 Mirror_Cube_Corner
          VB: Public Shared ReadOnly Mirror_Cube_Corner As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.MirrorMatrix3x3.#ctor(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.MirrorMatrix3x3.#ctor(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: MirrorMatrix3x3(Vector3)
        VB: MirrorMatrix3x3(Vector3)
      nameWithType:
        CSharp: MirrorMatrix3x3.MirrorMatrix3x3(Vector3)
        VB: MirrorMatrix3x3.MirrorMatrix3x3(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.MirrorMatrix3x3(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.MirrorMatrix3x3.MirrorMatrix3x3(Engine.Core.Maths.Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3209
      syntax:
        content:
          CSharp: public MirrorMatrix3x3(Vector3 normal)
          VB: Public Sub New(normal As Vector3)
        parameters:
        - id: normal
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.MirrorMatrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4
      commentId: M:Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4
      language: CSharp
      name:
        CSharp: ToMatrix4x4()
        VB: ToMatrix4x4()
      nameWithType:
        CSharp: MirrorMatrix3x3.ToMatrix4x4()
        VB: MirrorMatrix3x3.ToMatrix4x4()
      qualifiedName:
        CSharp: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4()
        VB: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix4x4
        path: ''
        startLine: 3216
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix4x4()
          VB: Public Function ToMatrix4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Plane
    commentId: T:Engine.Core.Maths.Plane
    language: CSharp
    name:
      CSharp: Plane
      VB: Plane
    nameWithType:
      CSharp: Plane
      VB: Plane
    qualifiedName:
      CSharp: Engine.Core.Maths.Plane
      VB: Engine.Core.Maths.Plane
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Plane
      path: ''
      startLine: 3245
    syntax:
      content:
        CSharp: public class Plane
        VB: Public Class Plane
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Plane.N
      commentId: P:Engine.Core.Maths.Plane.N
      language: CSharp
      name:
        CSharp: N
        VB: N
      nameWithType:
        CSharp: Plane.N
        VB: Plane.N
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.N
        VB: Engine.Core.Maths.Plane.N
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: N
        path: ''
        startLine: 3262
      summary: "\nThe normal vector of the plane\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 N { get; set; }
          VB: Public Property N As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.N*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.P
      commentId: P:Engine.Core.Maths.Plane.P
      language: CSharp
      name:
        CSharp: P
        VB: P
      nameWithType:
        CSharp: Plane.P
        VB: Plane.P
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.P
        VB: Engine.Core.Maths.Plane.P
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: P
        path: ''
        startLine: 3266
      summary: "\nA position vector on the plane\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 P { get; }
          VB: Public ReadOnly Property P As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.P*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Plane.B
      commentId: P:Engine.Core.Maths.Plane.B
      language: CSharp
      name:
        CSharp: B
        VB: B
      nameWithType:
        CSharp: Plane.B
        VB: Plane.B
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.B
        VB: Engine.Core.Maths.Plane.B
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: B
        path: ''
        startLine: 3270
      summary: "\nThe &quot;b&quot; value of the coordinate-form &quot;n1x1+n2x2+n3a3-b&quot;\n"
      example: []
      syntax:
        content:
          CSharp: public float B { get; }
          VB: Public ReadOnly Property B As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Plane.B*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Plane.S1
      commentId: P:Engine.Core.Maths.Plane.S1
      language: CSharp
      name:
        CSharp: S1
        VB: S1
      nameWithType:
        CSharp: Plane.S1
        VB: Plane.S1
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.S1
        VB: Engine.Core.Maths.Plane.S1
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: S1
        path: ''
        startLine: 3274
      summary: "\nSpan Vector3 1\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 S1 { get; }
          VB: Public ReadOnly Property S1 As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.S1*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Plane.S2
      commentId: P:Engine.Core.Maths.Plane.S2
      language: CSharp
      name:
        CSharp: S2
        VB: S2
      nameWithType:
        CSharp: Plane.S2
        VB: Plane.S2
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.S2
        VB: Engine.Core.Maths.Plane.S2
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: S2
        path: ''
        startLine: 3278
      summary: "\nSpan Vector3 2\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 S2 { get; }
          VB: Public ReadOnly Property S2 As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.S2*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,System.Single)
      commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Plane(Vector3, Single)
        VB: Plane(Vector3, Single)
      nameWithType:
        CSharp: Plane.Plane(Vector3, Single)
        VB: Plane.Plane(Vector3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, System.Single)
        VB: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3280
      syntax:
        content:
          CSharp: public Plane(Vector3 n, float b)
          VB: Public Sub New(n As Vector3, b As Single)
        parameters:
        - id: n
          type: Engine.Core.Maths.Vector3
        - id: b
          type: System.Single
      overload: Engine.Core.Maths.Plane.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)
      commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Plane.PlaneSetupType)
      language: CSharp
      name:
        CSharp: Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
        VB: Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
      nameWithType:
        CSharp: Plane.Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
        VB: Plane.Plane(Vector3, Vector3, Vector3, Plane.PlaneSetupType)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Plane.PlaneSetupType)
        VB: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Plane.PlaneSetupType)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3287
      syntax:
        content:
          CSharp: public Plane(Vector3 p1, Vector3 s1, Vector3 s2, Plane.PlaneSetupType setupType)
          VB: Public Sub New(p1 As Vector3, s1 As Vector3, s2 As Vector3, setupType As Plane.PlaneSetupType)
        parameters:
        - id: p1
          type: Engine.Core.Maths.Vector3
        - id: s1
          type: Engine.Core.Maths.Vector3
        - id: s2
          type: Engine.Core.Maths.Vector3
        - id: setupType
          type: Engine.Core.Maths.Plane.PlaneSetupType
      overload: Engine.Core.Maths.Plane.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Plane.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Plane(Vector3, Vector3)
        VB: Plane(Vector3, Vector3)
      nameWithType:
        CSharp: Plane.Plane(Vector3, Vector3)
        VB: Plane.Plane(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Plane.Plane(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3308
      syntax:
        content:
          CSharp: public Plane(Vector3 p, Vector3 n)
          VB: Public Sub New(p As Vector3, n As Vector3)
        parameters:
        - id: p
          type: Engine.Core.Maths.Vector3
        - id: n
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.GetPoint_00X
      commentId: M:Engine.Core.Maths.Plane.GetPoint_00X
      language: CSharp
      name:
        CSharp: GetPoint_00X()
        VB: GetPoint_00X()
      nameWithType:
        CSharp: Plane.GetPoint_00X()
        VB: Plane.GetPoint_00X()
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.GetPoint_00X()
        VB: Engine.Core.Maths.Plane.GetPoint_00X()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetPoint_00X
        path: ''
        startLine: 3321
      summary: "\nGets a point on the plane\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetPoint_00X()
          VB: Public Function GetPoint_00X As Vector3
        return:
          type: Engine.Core.Maths.Vector3
          description: Returns the point for X1 = 0, X2 = 0 and X3 = b/n3
      overload: Engine.Core.Maths.Plane.GetPoint_00X*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Contains(Vector3)
        VB: Contains(Vector3)
      nameWithType:
        CSharp: Plane.Contains(Vector3)
        VB: Plane.Contains(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Contains
        path: ''
        startLine: 3326
      syntax:
        content:
          CSharp: public bool Contains(Vector3 v)
          VB: Public Function Contains(v As Vector3) As Boolean
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Plane.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
      commentId: M:Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
      language: CSharp
      name:
        CSharp: Contains(Straight)
        VB: Contains(Straight)
      nameWithType:
        CSharp: Plane.Contains(Straight)
        VB: Plane.Contains(Straight)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
        VB: Engine.Core.Maths.Plane.Contains(Engine.Core.Maths.Straight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Contains
        path: ''
        startLine: 3331
      syntax:
        content:
          CSharp: public bool Contains(Straight s)
          VB: Public Function Contains(s As Straight) As Boolean
        parameters:
        - id: s
          type: Engine.Core.Maths.Straight
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Plane.Contains*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: GetPositionVectorAt(Single, Single)
        VB: GetPositionVectorAt(Single, Single)
      nameWithType:
        CSharp: Plane.GetPositionVectorAt(Single, Single)
        VB: Plane.GetPositionVectorAt(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single, System.Single)
        VB: Engine.Core.Maths.Plane.GetPositionVectorAt(System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetPositionVectorAt
        path: ''
        startLine: 3341
      syntax:
        content:
          CSharp: public Vector3 GetPositionVectorAt(float s1, float s2)
          VB: Public Function GetPositionVectorAt(s1 As Single, s2 As Single) As Vector3
        parameters:
        - id: s1
          type: System.Single
        - id: s2
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Plane.GetPositionVectorAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
      commentId: M:Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight)
      language: CSharp
      name:
        CSharp: Intersects(Plane, Straight)
        VB: Intersects(Plane, Straight)
      nameWithType:
        CSharp: Plane.Intersects(Plane, Straight)
        VB: Plane.Intersects(Plane, Straight)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight)
        VB: Engine.Core.Maths.Plane.Intersects(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Intersects
        path: ''
        startLine: 3349
      syntax:
        content:
          CSharp: public bool Intersects(Plane plane, Straight line)
          VB: Public Function Intersects(plane As Plane, line As Straight) As Boolean
        parameters:
        - id: plane
          type: Engine.Core.Maths.Plane
        - id: line
          type: Engine.Core.Maths.Straight
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Plane.Intersects*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Plane,Engine.Core.Maths.Straight@,Engine.Core.Maths.Plane@,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Intersection(Plane, Plane, out Straight, out Plane, out Vector3)
        VB: Intersection(Plane, Plane, ByRef Straight, ByRef Plane, ByRef Vector3)
      nameWithType:
        CSharp: Plane.Intersection(Plane, Plane, out Straight, out Plane, out Vector3)
        VB: Plane.Intersection(Plane, Plane, ByRef Straight, ByRef Plane, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Plane, out Engine.Core.Maths.Straight, out Engine.Core.Maths.Plane, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Plane, ByRef Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Plane, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Intersection
        path: ''
        startLine: 3376
      summary: "\nGet plane ‚à© plane and outputs its results\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Intersection(Plane p1, Plane p2, out Straight s, out Plane p, out Vector3 v)
          VB: Public Shared Function Intersection(p1 As Plane, p2 As Plane, ByRef s As Straight, ByRef p As Plane, ByRef v As Vector3) As Boolean
        parameters:
        - id: p1
          type: Engine.Core.Maths.Plane
        - id: p2
          type: Engine.Core.Maths.Plane
        - id: s
          type: Engine.Core.Maths.Straight
        - id: p
          type: Engine.Core.Maths.Plane
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
          description: True if plane ‚à© plane ‚â† ‚àÖ
      overload: Engine.Core.Maths.Plane.Intersection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane,Engine.Core.Maths.Straight,Engine.Core.Maths.Straight@,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Intersection(Plane, Straight, out Straight, out Vector3)
        VB: Intersection(Plane, Straight, ByRef Straight, ByRef Vector3)
      nameWithType:
        CSharp: Plane.Intersection(Plane, Straight, out Straight, out Vector3)
        VB: Plane.Intersection(Plane, Straight, ByRef Straight, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight, out Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Plane.Intersection(Engine.Core.Maths.Plane, Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Intersection
        path: ''
        startLine: 3413
      summary: "\nGet plane ‚à© line and outputs its results\n"
      example: []
      syntax:
        content:
          CSharp: public static bool Intersection(Plane plane, Straight line, out Straight intersectionLine, out Vector3 intersectionPoint)
          VB: Public Shared Function Intersection(plane As Plane, line As Straight, ByRef intersectionLine As Straight, ByRef intersectionPoint As Vector3) As Boolean
        parameters:
        - id: plane
          type: Engine.Core.Maths.Plane
          description: ''
        - id: line
          type: Engine.Core.Maths.Straight
          description: ''
        - id: intersectionLine
          type: Engine.Core.Maths.Straight
          description: ''
        - id: intersectionPoint
          type: Engine.Core.Maths.Vector3
          description: ''
        return:
          type: System.Boolean
          description: True if plane ‚à© line ‚â† ‚àÖ
      overload: Engine.Core.Maths.Plane.Intersection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
      commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
      language: CSharp
      name:
        CSharp: Distance(Plane)
        VB: Distance(Plane)
      nameWithType:
        CSharp: Plane.Distance(Plane)
        VB: Plane.Distance(Plane)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
        VB: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Plane)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 3452
      syntax:
        content:
          CSharp: public float Distance(Plane p)
          VB: Public Function Distance(p As Plane) As Single
        parameters:
        - id: p
          type: Engine.Core.Maths.Plane
        return:
          type: System.Single
      overload: Engine.Core.Maths.Plane.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
      commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
      language: CSharp
      name:
        CSharp: Distance(Straight)
        VB: Distance(Straight)
      nameWithType:
        CSharp: Plane.Distance(Straight)
        VB: Plane.Distance(Straight)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
        VB: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 3469
      syntax:
        content:
          CSharp: public float Distance(Straight s)
          VB: Public Function Distance(s As Straight) As Single
        parameters:
        - id: s
          type: Engine.Core.Maths.Straight
        return:
          type: System.Single
      overload: Engine.Core.Maths.Plane.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Distance(Straight, out Vector3)
        VB: Distance(Straight, ByRef Vector3)
      nameWithType:
        CSharp: Plane.Distance(Straight, out Vector3)
        VB: Plane.Distance(Straight, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Plane.Distance(Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 3474
      syntax:
        content:
          CSharp: public float Distance(Straight s, out Vector3 l)
          VB: Public Function Distance(s As Straight, ByRef l As Vector3) As Single
        parameters:
        - id: s
          type: Engine.Core.Maths.Straight
        - id: l
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Plane.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Plane.PlaneSetupType
    commentId: T:Engine.Core.Maths.Plane.PlaneSetupType
    language: CSharp
    name:
      CSharp: Plane.PlaneSetupType
      VB: Plane.PlaneSetupType
    nameWithType:
      CSharp: Plane.PlaneSetupType
      VB: Plane.PlaneSetupType
    qualifiedName:
      CSharp: Engine.Core.Maths.Plane.PlaneSetupType
      VB: Engine.Core.Maths.Plane.PlaneSetupType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: PlaneSetupType
      path: ''
      startLine: 3247
    syntax:
      content:
        CSharp: public enum PlaneSetupType
        VB: Public Enum PlaneSetupType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.Plane.PlaneSetupType._3PositionVectors
      commentId: F:Engine.Core.Maths.Plane.PlaneSetupType._3PositionVectors
      language: CSharp
      name:
        CSharp: _3PositionVectors
        VB: _3PositionVectors
      nameWithType:
        CSharp: Plane.PlaneSetupType._3PositionVectors
        VB: Plane.PlaneSetupType._3PositionVectors
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.PlaneSetupType._3PositionVectors
        VB: Engine.Core.Maths.Plane.PlaneSetupType._3PositionVectors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: _3PositionVectors
        path: ''
        startLine: 3249
      syntax:
        content:
          CSharp: _3PositionVectors = 0
          VB: _3PositionVectors = 0
        return:
          type: Engine.Core.Maths.Plane.PlaneSetupType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Plane.PlaneSetupType._1PositionVector2SpanVectors
      commentId: F:Engine.Core.Maths.Plane.PlaneSetupType._1PositionVector2SpanVectors
      language: CSharp
      name:
        CSharp: _1PositionVector2SpanVectors
        VB: _1PositionVector2SpanVectors
      nameWithType:
        CSharp: Plane.PlaneSetupType._1PositionVector2SpanVectors
        VB: Plane.PlaneSetupType._1PositionVector2SpanVectors
      qualifiedName:
        CSharp: Engine.Core.Maths.Plane.PlaneSetupType._1PositionVector2SpanVectors
        VB: Engine.Core.Maths.Plane.PlaneSetupType._1PositionVector2SpanVectors
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: _1PositionVector2SpanVectors
        path: ''
        startLine: 3250
      syntax:
        content:
          CSharp: _1PositionVector2SpanVectors = 1
          VB: _1PositionVector2SpanVectors = 1
        return:
          type: Engine.Core.Maths.Plane.PlaneSetupType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.Quaternion
    commentId: T:Engine.Core.Maths.Quaternion
    language: CSharp
    name:
      CSharp: Quaternion
      VB: Quaternion
    nameWithType:
      CSharp: Quaternion
      VB: Quaternion
    qualifiedName:
      CSharp: Engine.Core.Maths.Quaternion
      VB: Engine.Core.Maths.Quaternion
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Quaternion
      path: ''
      startLine: 3517
    syntax:
      content:
        CSharp: >-
          [Obsolete("Quite non of it is implemented!")]

          public class Quaternion
        VB: >-
          <Obsolete("Quite non of it is implemented!")>

          Public Class Quaternion
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.ObsoleteAttribute
      ctor: System.ObsoleteAttribute.#ctor(System.String)
      arguments:
      - type: System.String
        value: Quite non of it is implemented!
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Quaternion.Item(System.Int32)
      commentId: P:Engine.Core.Maths.Quaternion.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: Quaternion.Item[Int32]
        VB: Quaternion.Item(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Quaternion.Item[System.Int32]
        VB: Engine.Core.Maths.Quaternion.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 3523
      syntax:
        content:
          CSharp: public float this[int i] { get; set; }
          VB: Public Property Item(i As Integer) As Single
        parameters:
        - id: i
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Quaternion.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Quaternion.GetValue(System.Int32,System.Single@)
      commentId: M:Engine.Core.Maths.Quaternion.GetValue(System.Int32,System.Single@)
      language: CSharp
      name:
        CSharp: GetValue(Int32, out Single)
        VB: GetValue(Int32, ByRef Single)
      nameWithType:
        CSharp: Quaternion.GetValue(Int32, out Single)
        VB: Quaternion.GetValue(Int32, ByRef Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Quaternion.GetValue(System.Int32, out System.Single)
        VB: Engine.Core.Maths.Quaternion.GetValue(System.Int32, ByRef System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetValue
        path: ''
        startLine: 3536
      syntax:
        content:
          CSharp: public bool GetValue(int i, out float res)
          VB: Public Function GetValue(i As Integer, ByRef res As Single) As Boolean
        parameters:
        - id: i
          type: System.Int32
        - id: res
          type: System.Single
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Quaternion.GetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Quaternion.SetValue(System.Int32,System.Single)
      commentId: M:Engine.Core.Maths.Quaternion.SetValue(System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: SetValue(Int32, Single)
        VB: SetValue(Int32, Single)
      nameWithType:
        CSharp: Quaternion.SetValue(Int32, Single)
        VB: Quaternion.SetValue(Int32, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Quaternion.SetValue(System.Int32, System.Single)
        VB: Engine.Core.Maths.Quaternion.SetValue(System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetValue
        path: ''
        startLine: 3553
      syntax:
        content:
          CSharp: public bool SetValue(int i, float value)
          VB: Public Function SetValue(i As Integer, value As Single) As Boolean
        parameters:
        - id: i
          type: System.Int32
        - id: value
          type: System.Single
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Quaternion.SetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.RotationMatrix2x2
    commentId: T:Engine.Core.Maths.RotationMatrix2x2
    language: CSharp
    name:
      CSharp: RotationMatrix2x2
      VB: RotationMatrix2x2
    nameWithType:
      CSharp: RotationMatrix2x2
      VB: RotationMatrix2x2
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationMatrix2x2
      VB: Engine.Core.Maths.RotationMatrix2x2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationMatrix2x2
      path: ''
      startLine: 3580
    syntax:
      content:
        CSharp: public class RotationMatrix2x2
        VB: Public Class RotationMatrix2x2
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.RotationMatrix2x2.PiQuarter
      commentId: F:Engine.Core.Maths.RotationMatrix2x2.PiQuarter
      language: CSharp
      name:
        CSharp: PiQuarter
        VB: PiQuarter
      nameWithType:
        CSharp: RotationMatrix2x2.PiQuarter
        VB: RotationMatrix2x2.PiQuarter
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix2x2.PiQuarter
        VB: Engine.Core.Maths.RotationMatrix2x2.PiQuarter
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: PiQuarter
        path: ''
        startLine: 3582
      syntax:
        content:
          CSharp: public static readonly MatrixMxN PiQuarter
          VB: Public Shared ReadOnly PiQuarter As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix2x2.R2x2
      commentId: F:Engine.Core.Maths.RotationMatrix2x2.R2x2
      language: CSharp
      name:
        CSharp: R2x2
        VB: R2x2
      nameWithType:
        CSharp: RotationMatrix2x2.R2x2
        VB: RotationMatrix2x2.R2x2
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix2x2.R2x2
        VB: Engine.Core.Maths.RotationMatrix2x2.R2x2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: R2x2
        path: ''
        startLine: 3584
      syntax:
        content:
          CSharp: public readonly MatrixMxN R2x2
          VB: Public ReadOnly R2x2 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix2x2.#ctor(System.Single)
      commentId: M:Engine.Core.Maths.RotationMatrix2x2.#ctor(System.Single)
      language: CSharp
      name:
        CSharp: RotationMatrix2x2(Single)
        VB: RotationMatrix2x2(Single)
      nameWithType:
        CSharp: RotationMatrix2x2.RotationMatrix2x2(Single)
        VB: RotationMatrix2x2.RotationMatrix2x2(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix2x2.RotationMatrix2x2(System.Single)
        VB: Engine.Core.Maths.RotationMatrix2x2.RotationMatrix2x2(System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3586
      syntax:
        content:
          CSharp: public RotationMatrix2x2(float phi)
          VB: Public Sub New(phi As Single)
        parameters:
        - id: phi
          type: System.Single
      overload: Engine.Core.Maths.RotationMatrix2x2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationMatrix2x2.op_Implicit(Engine.Core.Maths.RotationMatrix2x2)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.RotationMatrix2x2.op_Implicit(Engine.Core.Maths.RotationMatrix2x2)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(RotationMatrix2x2 to MatrixMxN)
        VB: Widening(RotationMatrix2x2 to MatrixMxN)
      nameWithType:
        CSharp: RotationMatrix2x2.Implicit(RotationMatrix2x2 to MatrixMxN)
        VB: RotationMatrix2x2.Widening(RotationMatrix2x2 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix2x2.Implicit(Engine.Core.Maths.RotationMatrix2x2 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.RotationMatrix2x2.Widening(Engine.Core.Maths.RotationMatrix2x2 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3604
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(RotationMatrix2x2 r)
          VB: Public Shared Widening Operator CType(r As RotationMatrix2x2) As MatrixMxN
        parameters:
        - id: r
          type: Engine.Core.Maths.RotationMatrix2x2
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.RotationMatrix2x2.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.RotationMatrix3x3
    commentId: T:Engine.Core.Maths.RotationMatrix3x3
    language: CSharp
    name:
      CSharp: RotationMatrix3x3
      VB: RotationMatrix3x3
    nameWithType:
      CSharp: RotationMatrix3x3
      VB: RotationMatrix3x3
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationMatrix3x3
      VB: Engine.Core.Maths.RotationMatrix3x3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationMatrix3x3
      path: ''
      startLine: 3619
    syntax:
      content:
        CSharp: public class RotationMatrix3x3
        VB: Public Class RotationMatrix3x3
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.RotationMatrix3x3.MirrorX1
      commentId: F:Engine.Core.Maths.RotationMatrix3x3.MirrorX1
      language: CSharp
      name:
        CSharp: MirrorX1
        VB: MirrorX1
      nameWithType:
        CSharp: RotationMatrix3x3.MirrorX1
        VB: RotationMatrix3x3.MirrorX1
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.MirrorX1
        VB: Engine.Core.Maths.RotationMatrix3x3.MirrorX1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: MirrorX1
        path: ''
        startLine: 3621
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 MirrorX1
          VB: Public Shared ReadOnly MirrorX1 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix3x3.MirrorX2
      commentId: F:Engine.Core.Maths.RotationMatrix3x3.MirrorX2
      language: CSharp
      name:
        CSharp: MirrorX2
        VB: MirrorX2
      nameWithType:
        CSharp: RotationMatrix3x3.MirrorX2
        VB: RotationMatrix3x3.MirrorX2
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.MirrorX2
        VB: Engine.Core.Maths.RotationMatrix3x3.MirrorX2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: MirrorX2
        path: ''
        startLine: 3622
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 MirrorX2
          VB: Public Shared ReadOnly MirrorX2 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix3x3.MirrorX3
      commentId: F:Engine.Core.Maths.RotationMatrix3x3.MirrorX3
      language: CSharp
      name:
        CSharp: MirrorX3
        VB: MirrorX3
      nameWithType:
        CSharp: RotationMatrix3x3.MirrorX3
        VB: RotationMatrix3x3.MirrorX3
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.MirrorX3
        VB: Engine.Core.Maths.RotationMatrix3x3.MirrorX3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: MirrorX3
        path: ''
        startLine: 3623
      syntax:
        content:
          CSharp: public static readonly Matrix3x3 MirrorX3
          VB: Public Shared ReadOnly MirrorX3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix3x3.R3x3
      commentId: F:Engine.Core.Maths.RotationMatrix3x3.R3x3
      language: CSharp
      name:
        CSharp: R3x3
        VB: R3x3
      nameWithType:
        CSharp: RotationMatrix3x3.R3x3
        VB: RotationMatrix3x3.R3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.R3x3
        VB: Engine.Core.Maths.RotationMatrix3x3.R3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: R3x3
        path: ''
        startLine: 3625
      syntax:
        content:
          CSharp: public readonly Matrix3x3 R3x3
          VB: Public ReadOnly R3x3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.RotationMatrix3x3.#ctor(System.Single,Engine.Core.Maths.Axis)
      commentId: M:Engine.Core.Maths.RotationMatrix3x3.#ctor(System.Single,Engine.Core.Maths.Axis)
      language: CSharp
      name:
        CSharp: RotationMatrix3x3(Single, Axis)
        VB: RotationMatrix3x3(Single, Axis)
      nameWithType:
        CSharp: RotationMatrix3x3.RotationMatrix3x3(Single, Axis)
        VB: RotationMatrix3x3.RotationMatrix3x3(Single, Axis)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3(System.Single, Engine.Core.Maths.Axis)
        VB: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3(System.Single, Engine.Core.Maths.Axis)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3633
      summary: "\nCreates a globalRotation matrix for the angle around the specific axis. Uses angles that are measured in radians.\n"
      example: []
      syntax:
        content:
          CSharp: public RotationMatrix3x3(float phi, Axis axis)
          VB: Public Sub New(phi As Single, axis As Axis)
        parameters:
        - id: phi
          type: System.Single
        - id: axis
          type: Engine.Core.Maths.Axis
      overload: Engine.Core.Maths.RotationMatrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationMatrix3x3.#ctor(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationConvention)
      commentId: M:Engine.Core.Maths.RotationMatrix3x3.#ctor(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationConvention)
      language: CSharp
      name:
        CSharp: RotationMatrix3x3(Single, Single, Single, RotationConvention)
        VB: RotationMatrix3x3(Single, Single, Single, RotationConvention)
      nameWithType:
        CSharp: RotationMatrix3x3.RotationMatrix3x3(Single, Single, Single, RotationConvention)
        VB: RotationMatrix3x3.RotationMatrix3x3(Single, Single, Single, RotationConvention)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationConvention)
        VB: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationConvention)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3670
      summary: "\nCreates a combined globalRotation matrix. Uses angles that are measured in radians.\n"
      example: []
      syntax:
        content:
          CSharp: public RotationMatrix3x3(float alpha, float beta, float gamma, RotationConvention convention = RotationConvention.X1X2X3)
          VB: Public Sub New(alpha As Single, beta As Single, gamma As Single, convention As RotationConvention = RotationConvention.X1X2X3)
        parameters:
        - id: alpha
          type: System.Single
          description: ''
        - id: beta
          type: System.Single
          description: ''
        - id: gamma
          type: System.Single
          description: ''
        - id: convention
          type: Engine.Core.Maths.RotationConvention
      overload: Engine.Core.Maths.RotationMatrix3x3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4
      commentId: M:Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4
      language: CSharp
      name:
        CSharp: ToMatrix4x4()
        VB: ToMatrix4x4()
      nameWithType:
        CSharp: RotationMatrix3x3.ToMatrix4x4()
        VB: RotationMatrix3x3.ToMatrix4x4()
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4()
        VB: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix4x4
        path: ''
        startLine: 3706
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix4x4()
          VB: Public Function ToMatrix4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationMatrix3x3.op_Implicit(Engine.Core.Maths.RotationMatrix3x3)~Engine.Core.Maths.Matrix3x3
      commentId: M:Engine.Core.Maths.RotationMatrix3x3.op_Implicit(Engine.Core.Maths.RotationMatrix3x3)~Engine.Core.Maths.Matrix3x3
      language: CSharp
      name:
        CSharp: Implicit(RotationMatrix3x3 to Matrix3x3)
        VB: Widening(RotationMatrix3x3 to Matrix3x3)
      nameWithType:
        CSharp: RotationMatrix3x3.Implicit(RotationMatrix3x3 to Matrix3x3)
        VB: RotationMatrix3x3.Widening(RotationMatrix3x3 to Matrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.Implicit(Engine.Core.Maths.RotationMatrix3x3 to Engine.Core.Maths.Matrix3x3)
        VB: Engine.Core.Maths.RotationMatrix3x3.Widening(Engine.Core.Maths.RotationMatrix3x3 to Engine.Core.Maths.Matrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3722
      syntax:
        content:
          CSharp: public static implicit operator Matrix3x3(RotationMatrix3x3 r)
          VB: Public Shared Widening Operator CType(r As RotationMatrix3x3) As Matrix3x3
        parameters:
        - id: r
          type: Engine.Core.Maths.RotationMatrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      overload: Engine.Core.Maths.RotationMatrix3x3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.RotationMatrix3x3.op_Implicit(Engine.Core.Maths.RotationMatrix3x3)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.RotationMatrix3x3.op_Implicit(Engine.Core.Maths.RotationMatrix3x3)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(RotationMatrix3x3 to MatrixMxN)
        VB: Widening(RotationMatrix3x3 to MatrixMxN)
      nameWithType:
        CSharp: RotationMatrix3x3.Implicit(RotationMatrix3x3 to MatrixMxN)
        VB: RotationMatrix3x3.Widening(RotationMatrix3x3 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationMatrix3x3.Implicit(Engine.Core.Maths.RotationMatrix3x3 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.RotationMatrix3x3.Widening(Engine.Core.Maths.RotationMatrix3x3 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3727
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(RotationMatrix3x3 r)
          VB: Public Shared Widening Operator CType(r As RotationMatrix3x3) As MatrixMxN
        parameters:
        - id: r
          type: Engine.Core.Maths.RotationMatrix3x3
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.RotationMatrix3x3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.RotationVector3
    commentId: T:Engine.Core.Maths.RotationVector3
    language: CSharp
    name:
      CSharp: RotationVector3
      VB: RotationVector3
    nameWithType:
      CSharp: RotationVector3
      VB: RotationVector3
    qualifiedName:
      CSharp: Engine.Core.Maths.RotationVector3
      VB: Engine.Core.Maths.RotationVector3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: RotationVector3
      path: ''
      startLine: 3748
    summary: "\nSaves a globalRotation in RAD, allows input in degree or rad measure.\n"
    example: []
    syntax:
      content:
        CSharp: 'public class RotationVector3 : Vector3'
        VB: >-
          Public Class RotationVector3

              Inherits Vector3
    inheritance:
    - System.Object
    - Engine.Core.Maths.Vector3
    inheritedMembers:
    - Engine.Core.Maths.Vector3.Zero
    - Engine.Core.Maths.Vector3.One
    - Engine.Core.Maths.Vector3.Length
    - Engine.Core.Maths.Vector3.LengthSquared
    - Engine.Core.Maths.Vector3.Normalized
    - Engine.Core.Maths.Vector3.Dimension
    - Engine.Core.Maths.Vector3.Item(System.Int32)
    - Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
    - Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.Normalize
    - Engine.Core.Maths.Vector3.GetLength
    - Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
    - Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.Division(System.Single)
    - Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
    - Engine.Core.Maths.Vector3.IsZero
    - Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
    - Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
    - Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.RotationVector3.X1
      commentId: P:Engine.Core.Maths.RotationVector3.X1
      language: CSharp
      name:
        CSharp: X1
        VB: X1
      nameWithType:
        CSharp: RotationVector3.X1
        VB: RotationVector3.X1
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.X1
        VB: Engine.Core.Maths.RotationVector3.X1
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1
        path: ''
        startLine: 3753
      summary: "\nX1 in RAD\n"
      example: []
      syntax:
        content:
          CSharp: public float X1 { get; set; }
          VB: Public Property X1 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.RotationVector3.X1*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.X2
      commentId: P:Engine.Core.Maths.RotationVector3.X2
      language: CSharp
      name:
        CSharp: X2
        VB: X2
      nameWithType:
        CSharp: RotationVector3.X2
        VB: RotationVector3.X2
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.X2
        VB: Engine.Core.Maths.RotationVector3.X2
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2
        path: ''
        startLine: 3761
      summary: "\nX2 in RAD\n"
      example: []
      syntax:
        content:
          CSharp: public float X2 { get; set; }
          VB: Public Property X2 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.RotationVector3.X2*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.X3
      commentId: P:Engine.Core.Maths.RotationVector3.X3
      language: CSharp
      name:
        CSharp: X3
        VB: X3
      nameWithType:
        CSharp: RotationVector3.X3
        VB: RotationVector3.X3
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.X3
        VB: Engine.Core.Maths.RotationVector3.X3
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X3
        path: ''
        startLine: 3769
      summary: "\nX3 in RAD\n"
      example: []
      syntax:
        content:
          CSharp: public float X3 { get; set; }
          VB: Public Property X3 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.RotationVector3.X3*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.#ctor(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationMeasure)
      commentId: M:Engine.Core.Maths.RotationVector3.#ctor(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationMeasure)
      language: CSharp
      name:
        CSharp: RotationVector3(Single, Single, Single, RotationMeasure)
        VB: RotationVector3(Single, Single, Single, RotationMeasure)
      nameWithType:
        CSharp: RotationVector3.RotationVector3(Single, Single, Single, RotationMeasure)
        VB: RotationVector3.RotationVector3(Single, Single, Single, RotationMeasure)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.RotationVector3(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationMeasure)
        VB: Engine.Core.Maths.RotationVector3.RotationVector3(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationMeasure)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3775
      syntax:
        content:
          CSharp: public RotationVector3(float x1, float x2, float x3, RotationMeasure measure)
          VB: Public Sub New(x1 As Single, x2 As Single, x3 As Single, measure As RotationMeasure)
        parameters:
        - id: x1
          type: System.Single
        - id: x2
          type: System.Single
        - id: x3
          type: System.Single
        - id: measure
          type: Engine.Core.Maths.RotationMeasure
      overload: Engine.Core.Maths.RotationVector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.GetDegreeRotation
      commentId: M:Engine.Core.Maths.RotationVector3.GetDegreeRotation
      language: CSharp
      name:
        CSharp: GetDegreeRotation()
        VB: GetDegreeRotation()
      nameWithType:
        CSharp: RotationVector3.GetDegreeRotation()
        VB: RotationVector3.GetDegreeRotation()
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.GetDegreeRotation()
        VB: Engine.Core.Maths.RotationVector3.GetDegreeRotation()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetDegreeRotation
        path: ''
        startLine: 3780
      syntax:
        content:
          CSharp: public Vector3 GetDegreeRotation()
          VB: Public Function GetDegreeRotation As Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.RotationVector3.GetDegreeRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.SetRotation(System.Single,Engine.Core.Maths.Axis,Engine.Core.Maths.RotationMeasure)
      commentId: M:Engine.Core.Maths.RotationVector3.SetRotation(System.Single,Engine.Core.Maths.Axis,Engine.Core.Maths.RotationMeasure)
      language: CSharp
      name:
        CSharp: SetRotation(Single, Axis, RotationMeasure)
        VB: SetRotation(Single, Axis, RotationMeasure)
      nameWithType:
        CSharp: RotationVector3.SetRotation(Single, Axis, RotationMeasure)
        VB: RotationVector3.SetRotation(Single, Axis, RotationMeasure)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.SetRotation(System.Single, Engine.Core.Maths.Axis, Engine.Core.Maths.RotationMeasure)
        VB: Engine.Core.Maths.RotationVector3.SetRotation(System.Single, Engine.Core.Maths.Axis, Engine.Core.Maths.RotationMeasure)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetRotation
        path: ''
        startLine: 3785
      syntax:
        content:
          CSharp: public void SetRotation(float f, Axis axis, RotationMeasure measure)
          VB: Public Sub SetRotation(f As Single, axis As Axis, measure As RotationMeasure)
        parameters:
        - id: f
          type: System.Single
        - id: axis
          type: Engine.Core.Maths.Axis
        - id: measure
          type: Engine.Core.Maths.RotationMeasure
      overload: Engine.Core.Maths.RotationVector3.SetRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.SetRotation(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationMeasure)
      commentId: M:Engine.Core.Maths.RotationVector3.SetRotation(System.Single,System.Single,System.Single,Engine.Core.Maths.RotationMeasure)
      language: CSharp
      name:
        CSharp: SetRotation(Single, Single, Single, RotationMeasure)
        VB: SetRotation(Single, Single, Single, RotationMeasure)
      nameWithType:
        CSharp: RotationVector3.SetRotation(Single, Single, Single, RotationMeasure)
        VB: RotationVector3.SetRotation(Single, Single, Single, RotationMeasure)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.SetRotation(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationMeasure)
        VB: Engine.Core.Maths.RotationVector3.SetRotation(System.Single, System.Single, System.Single, Engine.Core.Maths.RotationMeasure)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetRotation
        path: ''
        startLine: 3811
      syntax:
        content:
          CSharp: public void SetRotation(float x1, float x2, float x3, RotationMeasure measure)
          VB: Public Sub SetRotation(x1 As Single, x2 As Single, x3 As Single, measure As RotationMeasure)
        parameters:
        - id: x1
          type: System.Single
        - id: x2
          type: System.Single
        - id: x3
          type: System.Single
        - id: measure
          type: Engine.Core.Maths.RotationMeasure
      overload: Engine.Core.Maths.RotationVector3.SetRotation*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.RotationVector3.op_Addition(Engine.Core.Maths.RotationVector3,Engine.Core.Maths.RotationVector3)
      commentId: M:Engine.Core.Maths.RotationVector3.op_Addition(Engine.Core.Maths.RotationVector3,Engine.Core.Maths.RotationVector3)
      language: CSharp
      name:
        CSharp: Addition(RotationVector3, RotationVector3)
        VB: Addition(RotationVector3, RotationVector3)
      nameWithType:
        CSharp: RotationVector3.Addition(RotationVector3, RotationVector3)
        VB: RotationVector3.Addition(RotationVector3, RotationVector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.Addition(Engine.Core.Maths.RotationVector3, Engine.Core.Maths.RotationVector3)
        VB: Engine.Core.Maths.RotationVector3.Addition(Engine.Core.Maths.RotationVector3, Engine.Core.Maths.RotationVector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 3828
      syntax:
        content:
          CSharp: public static RotationVector3 operator +(RotationVector3 v1, RotationVector3 v2)
          VB: Public Shared Operator +(v1 As RotationVector3, v2 As RotationVector3) As RotationVector3
        parameters:
        - id: v1
          type: Engine.Core.Maths.RotationVector3
        - id: v2
          type: Engine.Core.Maths.RotationVector3
        return:
          type: Engine.Core.Maths.RotationVector3
      overload: Engine.Core.Maths.RotationVector3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.RotationVector3.op_Implicit(Engine.Core.Maths.RotationVector3)~Engine.Core.Maths.RotationMatrix3x3
      commentId: M:Engine.Core.Maths.RotationVector3.op_Implicit(Engine.Core.Maths.RotationVector3)~Engine.Core.Maths.RotationMatrix3x3
      language: CSharp
      name:
        CSharp: Implicit(RotationVector3 to RotationMatrix3x3)
        VB: Widening(RotationVector3 to RotationMatrix3x3)
      nameWithType:
        CSharp: RotationVector3.Implicit(RotationVector3 to RotationMatrix3x3)
        VB: RotationVector3.Widening(RotationVector3 to RotationMatrix3x3)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.Implicit(Engine.Core.Maths.RotationVector3 to Engine.Core.Maths.RotationMatrix3x3)
        VB: Engine.Core.Maths.RotationVector3.Widening(Engine.Core.Maths.RotationVector3 to Engine.Core.Maths.RotationMatrix3x3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3836
      summary: "\nCreates a <xref href=\"Engine.Core.Maths.RotationMatrix3x3\" data-throw-if-not-resolved=\"false\"></xref> if the given vector using the X1X2X3 convention.\n"
      example: []
      syntax:
        content:
          CSharp: public static implicit operator RotationMatrix3x3(RotationVector3 v)
          VB: Public Shared Widening Operator CType(v As RotationVector3) As RotationMatrix3x3
        parameters:
        - id: v
          type: Engine.Core.Maths.RotationVector3
          description: ''
        return:
          type: Engine.Core.Maths.RotationMatrix3x3
      overload: Engine.Core.Maths.RotationVector3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
      references:
        Engine.Core.Maths.RotationMatrix3x3: 
    - id: Engine.Core.Maths.RotationVector3.op_Implicit(Engine.Core.Maths.RotationVector3)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.RotationVector3.op_Implicit(Engine.Core.Maths.RotationVector3)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(RotationVector3 to MatrixMxN)
        VB: Widening(RotationVector3 to MatrixMxN)
      nameWithType:
        CSharp: RotationVector3.Implicit(RotationVector3 to MatrixMxN)
        VB: RotationVector3.Widening(RotationVector3 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.RotationVector3.Implicit(Engine.Core.Maths.RotationVector3 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.RotationVector3.Widening(Engine.Core.Maths.RotationVector3 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3840
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(RotationVector3 v)
          VB: Public Shared Widening Operator CType(v As RotationVector3) As MatrixMxN
        parameters:
        - id: v
          type: Engine.Core.Maths.RotationVector3
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.RotationVector3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.ShearMatrix2x2
    commentId: T:Engine.Core.Maths.ShearMatrix2x2
    language: CSharp
    name:
      CSharp: ShearMatrix2x2
      VB: ShearMatrix2x2
    nameWithType:
      CSharp: ShearMatrix2x2
      VB: ShearMatrix2x2
    qualifiedName:
      CSharp: Engine.Core.Maths.ShearMatrix2x2
      VB: Engine.Core.Maths.ShearMatrix2x2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: ShearMatrix2x2
      path: ''
      startLine: 3857
    syntax:
      content:
        CSharp: public class ShearMatrix2x2
        VB: Public Class ShearMatrix2x2
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.ShearMatrix2x2.S2x2
      commentId: F:Engine.Core.Maths.ShearMatrix2x2.S2x2
      language: CSharp
      name:
        CSharp: S2x2
        VB: S2x2
      nameWithType:
        CSharp: ShearMatrix2x2.S2x2
        VB: ShearMatrix2x2.S2x2
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix2x2.S2x2
        VB: Engine.Core.Maths.ShearMatrix2x2.S2x2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: S2x2
        path: ''
        startLine: 3859
      syntax:
        content:
          CSharp: public readonly MatrixMxN S2x2
          VB: Public ReadOnly S2x2 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.ShearMatrix2x2.#ctor(System.Single,System.Single,Engine.Core.Maths.ShearConvention)
      commentId: M:Engine.Core.Maths.ShearMatrix2x2.#ctor(System.Single,System.Single,Engine.Core.Maths.ShearConvention)
      language: CSharp
      name:
        CSharp: ShearMatrix2x2(Single, Single, ShearConvention)
        VB: ShearMatrix2x2(Single, Single, ShearConvention)
      nameWithType:
        CSharp: ShearMatrix2x2.ShearMatrix2x2(Single, Single, ShearConvention)
        VB: ShearMatrix2x2.ShearMatrix2x2(Single, Single, ShearConvention)
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix2x2.ShearMatrix2x2(System.Single, System.Single, Engine.Core.Maths.ShearConvention)
        VB: Engine.Core.Maths.ShearMatrix2x2.ShearMatrix2x2(System.Single, System.Single, Engine.Core.Maths.ShearConvention)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3866
      summary: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">X</code> and <code data-dev-comment-type=\"paramref\" class=\"paramref\">Y</code> in radians for (the) tan or cot convention.\n"
      example: []
      syntax:
        content:
          CSharp: public ShearMatrix2x2(float X, float Y, ShearConvention convention)
          VB: Public Sub New(X As Single, Y As Single, convention As ShearConvention)
        parameters:
        - id: X
          type: System.Single
        - id: Y
          type: System.Single
        - id: convention
          type: Engine.Core.Maths.ShearConvention
      overload: Engine.Core.Maths.ShearMatrix2x2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.ShearMatrix2x2.op_Implicit(Engine.Core.Maths.ShearMatrix2x2)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.ShearMatrix2x2.op_Implicit(Engine.Core.Maths.ShearMatrix2x2)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(ShearMatrix2x2 to MatrixMxN)
        VB: Widening(ShearMatrix2x2 to MatrixMxN)
      nameWithType:
        CSharp: ShearMatrix2x2.Implicit(ShearMatrix2x2 to MatrixMxN)
        VB: ShearMatrix2x2.Widening(ShearMatrix2x2 to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix2x2.Implicit(Engine.Core.Maths.ShearMatrix2x2 to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.ShearMatrix2x2.Widening(Engine.Core.Maths.ShearMatrix2x2 to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3896
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(ShearMatrix2x2 sm)
          VB: Public Shared Widening Operator CType(sm As ShearMatrix2x2) As MatrixMxN
        parameters:
        - id: sm
          type: Engine.Core.Maths.ShearMatrix2x2
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.ShearMatrix2x2.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.ShearMatrix3D
    commentId: T:Engine.Core.Maths.ShearMatrix3D
    language: CSharp
    name:
      CSharp: ShearMatrix3D
      VB: ShearMatrix3D
    nameWithType:
      CSharp: ShearMatrix3D
      VB: ShearMatrix3D
    qualifiedName:
      CSharp: Engine.Core.Maths.ShearMatrix3D
      VB: Engine.Core.Maths.ShearMatrix3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: ShearMatrix3D
      path: ''
      startLine: 3913
    syntax:
      content:
        CSharp: public class ShearMatrix3D
        VB: Public Class ShearMatrix3D
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.ShearMatrix3D.S4x4
      commentId: F:Engine.Core.Maths.ShearMatrix3D.S4x4
      language: CSharp
      name:
        CSharp: S4x4
        VB: S4x4
      nameWithType:
        CSharp: ShearMatrix3D.S4x4
        VB: ShearMatrix3D.S4x4
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.S4x4
        VB: Engine.Core.Maths.ShearMatrix3D.S4x4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: S4x4
        path: ''
        startLine: 3915
      syntax:
        content:
          CSharp: public MatrixMxN S4x4
          VB: Public S4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.ShearMatrix3D.S3x3
      commentId: F:Engine.Core.Maths.ShearMatrix3D.S3x3
      language: CSharp
      name:
        CSharp: S3x3
        VB: S3x3
      nameWithType:
        CSharp: ShearMatrix3D.S3x3
        VB: ShearMatrix3D.S3x3
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.S3x3
        VB: Engine.Core.Maths.ShearMatrix3D.S3x3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: S3x3
        path: ''
        startLine: 3919
      summary: "\n3x3 Submatrix\n"
      example: []
      syntax:
        content:
          CSharp: public Matrix3x3 S3x3
          VB: Public S3x3 As Matrix3x3
        return:
          type: Engine.Core.Maths.Matrix3x3
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.ShearMatrix3D.#ctor(Engine.Core.Maths.ShearConvention,System.Single[])
      commentId: M:Engine.Core.Maths.ShearMatrix3D.#ctor(Engine.Core.Maths.ShearConvention,System.Single[])
      language: CSharp
      name:
        CSharp: ShearMatrix3D(ShearConvention, Single[])
        VB: ShearMatrix3D(ShearConvention, Single())
      nameWithType:
        CSharp: ShearMatrix3D.ShearMatrix3D(ShearConvention, Single[])
        VB: ShearMatrix3D.ShearMatrix3D(ShearConvention, Single())
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.ShearMatrix3D(Engine.Core.Maths.ShearConvention, System.Single[])
        VB: Engine.Core.Maths.ShearMatrix3D.ShearMatrix3D(Engine.Core.Maths.ShearConvention, System.Single())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 3931
      summary: "\nAll angles Œ∏ are in radians.\n"
      example: []
      syntax:
        content:
          CSharp: public ShearMatrix3D(ShearConvention convention, params float[] Œ∏)
          VB: Public Sub New(convention As ShearConvention, ParamArray Œ∏ As Single())
        parameters:
        - id: convention
          type: Engine.Core.Maths.ShearConvention
          description: ''
        - id: Œ∏
          type: System.Single[]
      overload: Engine.Core.Maths.ShearMatrix3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.ShearMatrix3D.op_Implicit(Engine.Core.Maths.ShearMatrix3D)~Engine.Core.Maths.MatrixMxN
      commentId: M:Engine.Core.Maths.ShearMatrix3D.op_Implicit(Engine.Core.Maths.ShearMatrix3D)~Engine.Core.Maths.MatrixMxN
      language: CSharp
      name:
        CSharp: Implicit(ShearMatrix3D to MatrixMxN)
        VB: Widening(ShearMatrix3D to MatrixMxN)
      nameWithType:
        CSharp: ShearMatrix3D.Implicit(ShearMatrix3D to MatrixMxN)
        VB: ShearMatrix3D.Widening(ShearMatrix3D to MatrixMxN)
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.Implicit(Engine.Core.Maths.ShearMatrix3D to Engine.Core.Maths.MatrixMxN)
        VB: Engine.Core.Maths.ShearMatrix3D.Widening(Engine.Core.Maths.ShearMatrix3D to Engine.Core.Maths.MatrixMxN)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 3994
      syntax:
        content:
          CSharp: public static implicit operator MatrixMxN(ShearMatrix3D sm)
          VB: Public Shared Widening Operator CType(sm As ShearMatrix3D) As MatrixMxN
        parameters:
        - id: sm
          type: Engine.Core.Maths.ShearMatrix3D
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.ShearMatrix3D.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4
      commentId: M:Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4
      language: CSharp
      name:
        CSharp: ToMatrix4x4()
        VB: ToMatrix4x4()
      nameWithType:
        CSharp: ShearMatrix3D.ToMatrix4x4()
        VB: ShearMatrix3D.ToMatrix4x4()
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4()
        VB: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix4x4
        path: ''
        startLine: 3999
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix4x4()
          VB: Public Function ToMatrix4x4 As MatrixMxN
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.ShearMatrix3D.op_Multiply(Engine.Core.Maths.ShearMatrix3D,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.ShearMatrix3D.op_Multiply(Engine.Core.Maths.ShearMatrix3D,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(ShearMatrix3D, Vector3)
        VB: Multiply(ShearMatrix3D, Vector3)
      nameWithType:
        CSharp: ShearMatrix3D.Multiply(ShearMatrix3D, Vector3)
        VB: ShearMatrix3D.Multiply(ShearMatrix3D, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D, Engine.Core.Maths.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4015
      syntax:
        content:
          CSharp: public static Vector operator *(ShearMatrix3D s, Vector3 v)
          VB: Public Shared Operator *(s As ShearMatrix3D, v As Vector3) As Vector
        parameters:
        - id: s
          type: Engine.Core.Maths.ShearMatrix3D
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.ShearMatrix3D.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(ShearMatrix3D, Vector3)
        VB: Multiply(ShearMatrix3D, Vector3)
      nameWithType:
        CSharp: ShearMatrix3D.Multiply(ShearMatrix3D, Vector3)
        VB: ShearMatrix3D.Multiply(ShearMatrix3D, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.ShearMatrix3D.Multiply(Engine.Core.Maths.ShearMatrix3D, Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Multiply
        path: ''
        startLine: 4024
      syntax:
        content:
          CSharp: public Vector3 Multiply(ShearMatrix3D s, Vector3 v)
          VB: Public Function Multiply(s As ShearMatrix3D, v As Vector3) As Vector3
        parameters:
        - id: s
          type: Engine.Core.Maths.ShearMatrix3D
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.ShearMatrix3D.Multiply*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Straight
    commentId: T:Engine.Core.Maths.Straight
    language: CSharp
    name:
      CSharp: Straight
      VB: Straight
    nameWithType:
      CSharp: Straight
      VB: Straight
    qualifiedName:
      CSharp: Engine.Core.Maths.Straight
      VB: Engine.Core.Maths.Straight
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Straight
      path: ''
      startLine: 4044
    summary: "\nThis code defines a class called Straight that represents a straight line in 3D space. It has properties such as OA, OB, and Dir, which represent the endpoints of the line, and the direction of the line, respectively. The class also contains methods such as GetPointAt, Intersection, Distance, and Distance with 2 output parameters, which return the point on the line at a given position, determine if the line intersects with another line, find the distance between the line and a point in 3D space, and find the distance between the line and another line in 3D space along with the closest points on both lines to the point of intersection, respectively. The class also has some static fields, such as x1_Axis, x2_Axis, and x3_Axis, which represent the x, y, and z axes in 3D space, respectively.\n"
    example: []
    syntax:
      content:
        CSharp: public class Straight
        VB: Public Class Straight
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Straight.x1_Axis
      commentId: F:Engine.Core.Maths.Straight.x1_Axis
      language: CSharp
      name:
        CSharp: x1_Axis
        VB: x1_Axis
      nameWithType:
        CSharp: Straight.x1_Axis
        VB: Straight.x1_Axis
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.x1_Axis
        VB: Engine.Core.Maths.Straight.x1_Axis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: x1_Axis
        path: ''
        startLine: 4052
      syntax:
        content:
          CSharp: public static readonly Straight x1_Axis
          VB: Public Shared ReadOnly x1_Axis As Straight
        return:
          type: Engine.Core.Maths.Straight
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Straight.x2_Axis
      commentId: F:Engine.Core.Maths.Straight.x2_Axis
      language: CSharp
      name:
        CSharp: x2_Axis
        VB: x2_Axis
      nameWithType:
        CSharp: Straight.x2_Axis
        VB: Straight.x2_Axis
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.x2_Axis
        VB: Engine.Core.Maths.Straight.x2_Axis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: x2_Axis
        path: ''
        startLine: 4053
      syntax:
        content:
          CSharp: public static readonly Straight x2_Axis
          VB: Public Shared ReadOnly x2_Axis As Straight
        return:
          type: Engine.Core.Maths.Straight
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Straight.x3_Axis
      commentId: F:Engine.Core.Maths.Straight.x3_Axis
      language: CSharp
      name:
        CSharp: x3_Axis
        VB: x3_Axis
      nameWithType:
        CSharp: Straight.x3_Axis
        VB: Straight.x3_Axis
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.x3_Axis
        VB: Engine.Core.Maths.Straight.x3_Axis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: x3_Axis
        path: ''
        startLine: 4054
      syntax:
        content:
          CSharp: public static readonly Straight x3_Axis
          VB: Public Shared ReadOnly x3_Axis As Straight
        return:
          type: Engine.Core.Maths.Straight
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Straight.OA
      commentId: P:Engine.Core.Maths.Straight.OA
      language: CSharp
      name:
        CSharp: OA
        VB: OA
      nameWithType:
        CSharp: Straight.OA
        VB: Straight.OA
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.OA
        VB: Engine.Core.Maths.Straight.OA
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: OA
        path: ''
        startLine: 4060
      syntax:
        content:
          CSharp: public Vector3 OA { get; set; }
          VB: Public Property OA As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Straight.OA*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.OB
      commentId: P:Engine.Core.Maths.Straight.OB
      language: CSharp
      name:
        CSharp: OB
        VB: OB
      nameWithType:
        CSharp: Straight.OB
        VB: Straight.OB
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.OB
        VB: Engine.Core.Maths.Straight.OB
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: OB
        path: ''
        startLine: 4061
      syntax:
        content:
          CSharp: public Vector3 OB { get; set; }
          VB: Public Property OB As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Straight.OB*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.Dir
      commentId: P:Engine.Core.Maths.Straight.Dir
      language: CSharp
      name:
        CSharp: Dir
        VB: Dir
      nameWithType:
        CSharp: Straight.Dir
        VB: Straight.Dir
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Dir
        VB: Engine.Core.Maths.Straight.Dir
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dir
        path: ''
        startLine: 4062
      syntax:
        content:
          CSharp: public Vector3 Dir { get; }
          VB: Public ReadOnly Property Dir As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Straight.Dir*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Straight.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Straight.LineSetupType)
      commentId: M:Engine.Core.Maths.Straight.#ctor(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3,Engine.Core.Maths.Straight.LineSetupType)
      language: CSharp
      name:
        CSharp: Straight(Vector3, Vector3, Straight.LineSetupType)
        VB: Straight(Vector3, Vector3, Straight.LineSetupType)
      nameWithType:
        CSharp: Straight.Straight(Vector3, Vector3, Straight.LineSetupType)
        VB: Straight.Straight(Vector3, Vector3, Straight.LineSetupType)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Straight(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Straight.LineSetupType)
        VB: Engine.Core.Maths.Straight.Straight(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3, Engine.Core.Maths.Straight.LineSetupType)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4064
      syntax:
        content:
          CSharp: public Straight(Vector3 OA, Vector3 OB, Straight.LineSetupType setupType)
          VB: Public Sub New(OA As Vector3, OB As Vector3, setupType As Straight.LineSetupType)
        parameters:
        - id: OA
          type: Engine.Core.Maths.Vector3
        - id: OB
          type: Engine.Core.Maths.Vector3
        - id: setupType
          type: Engine.Core.Maths.Straight.LineSetupType
      overload: Engine.Core.Maths.Straight.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.GetPointAt(System.Single)
      commentId: M:Engine.Core.Maths.Straight.GetPointAt(System.Single)
      language: CSharp
      name:
        CSharp: GetPointAt(Single)
        VB: GetPointAt(Single)
      nameWithType:
        CSharp: Straight.GetPointAt(Single)
        VB: Straight.GetPointAt(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.GetPointAt(System.Single)
        VB: Engine.Core.Maths.Straight.GetPointAt(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetPointAt
        path: ''
        startLine: 4081
      syntax:
        content:
          CSharp: public Vector3 GetPointAt(float f)
          VB: Public Function GetPointAt(f As Single) As Vector3
        parameters:
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Straight.GetPointAt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.Intersection(Engine.Core.Maths.Straight,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Straight.Intersection(Engine.Core.Maths.Straight,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Intersection(Straight, Straight, out Vector3)
        VB: Intersection(Straight, Straight, ByRef Vector3)
      nameWithType:
        CSharp: Straight.Intersection(Straight, Straight, out Vector3)
        VB: Straight.Intersection(Straight, Straight, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Intersection(Engine.Core.Maths.Straight, Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Straight.Intersection(Engine.Core.Maths.Straight, Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Intersection
        path: ''
        startLine: 4086
      syntax:
        content:
          CSharp: public static bool Intersection(Straight a, Straight b, out Vector3 I)
          VB: Public Shared Function Intersection(a As Straight, b As Straight, ByRef I As Vector3) As Boolean
        parameters:
        - id: a
          type: Engine.Core.Maths.Straight
        - id: b
          type: Engine.Core.Maths.Straight
        - id: I
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Straight.Intersection*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Distance(Vector3, out Vector3)
        VB: Distance(Vector3, ByRef Vector3)
      nameWithType:
        CSharp: Straight.Distance(Vector3, out Vector3)
        VB: Straight.Distance(Vector3, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 4100
      syntax:
        content:
          CSharp: public float Distance(Vector3 x, out Vector3 l)
          VB: Public Function Distance(x As Vector3, ByRef l As Vector3) As Single
        parameters:
        - id: x
          type: Engine.Core.Maths.Vector3
        - id: l
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Straight.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight)
      commentId: M:Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight)
      language: CSharp
      name:
        CSharp: Distance(Straight)
        VB: Distance(Straight)
      nameWithType:
        CSharp: Straight.Distance(Straight)
        VB: Straight.Distance(Straight)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight)
        VB: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 4111
      syntax:
        content:
          CSharp: public float Distance(Straight s)
          VB: Public Function Distance(s As Straight) As Single
        parameters:
        - id: s
          type: Engine.Core.Maths.Straight
        return:
          type: System.Single
      overload: Engine.Core.Maths.Straight.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Distance(Straight, out Vector3, out Vector3)
        VB: Distance(Straight, ByRef Vector3, ByRef Vector3)
      nameWithType:
        CSharp: Straight.Distance(Straight, out Vector3, out Vector3)
        VB: Straight.Distance(Straight, ByRef Vector3, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 4132
      syntax:
        content:
          CSharp: public float Distance(Straight s, out Vector3 OG, out Vector3 OH)
          VB: Public Function Distance(s As Straight, ByRef OG As Vector3, ByRef OH As Vector3) As Single
        parameters:
        - id: s
          type: Engine.Core.Maths.Straight
        - id: OG
          type: Engine.Core.Maths.Vector3
        - id: OH
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Straight.Distance*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Distance(Vector3, Straight, out Vector3)
        VB: Distance(Vector3, Straight, ByRef Vector3)
      nameWithType:
        CSharp: Straight.Distance(Vector3, Straight, out Vector3)
        VB: Straight.Distance(Vector3, Straight, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3, Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Vector3, Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 4165
      syntax:
        content:
          CSharp: public static float Distance(Vector3 a, Straight b, out Vector3 l)
          VB: Public Shared Function Distance(a As Vector3, b As Straight, ByRef l As Vector3) As Single
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector3
        - id: b
          type: Engine.Core.Maths.Straight
        - id: l
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Straight.Distance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight,Engine.Core.Maths.Straight,Engine.Core.Maths.Vector3@,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: Distance(Straight, Straight, out Vector3, out Vector3)
        VB: Distance(Straight, Straight, ByRef Vector3, ByRef Vector3)
      nameWithType:
        CSharp: Straight.Distance(Straight, Straight, out Vector3, out Vector3)
        VB: Straight.Distance(Straight, Straight, ByRef Vector3, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight, Engine.Core.Maths.Straight, out Engine.Core.Maths.Vector3, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Straight.Distance(Engine.Core.Maths.Straight, Engine.Core.Maths.Straight, ByRef Engine.Core.Maths.Vector3, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Distance
        path: ''
        startLine: 4170
      syntax:
        content:
          CSharp: public static float Distance(Straight g, Straight h, out Vector3 OG, out Vector3 OH)
          VB: Public Shared Function Distance(g As Straight, h As Straight, ByRef OG As Vector3, ByRef OH As Vector3) As Single
        parameters:
        - id: g
          type: Engine.Core.Maths.Straight
        - id: h
          type: Engine.Core.Maths.Straight
        - id: OG
          type: Engine.Core.Maths.Vector3
        - id: OH
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Straight.Distance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.Straight.LineSetupType
    commentId: T:Engine.Core.Maths.Straight.LineSetupType
    language: CSharp
    name:
      CSharp: Straight.LineSetupType
      VB: Straight.LineSetupType
    nameWithType:
      CSharp: Straight.LineSetupType
      VB: Straight.LineSetupType
    qualifiedName:
      CSharp: Engine.Core.Maths.Straight.LineSetupType
      VB: Engine.Core.Maths.Straight.LineSetupType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: LineSetupType
      path: ''
      startLine: 4046
    syntax:
      content:
        CSharp: public enum LineSetupType
        VB: Public Enum LineSetupType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Maths.Straight.LineSetupType._2Points
      commentId: F:Engine.Core.Maths.Straight.LineSetupType._2Points
      language: CSharp
      name:
        CSharp: _2Points
        VB: _2Points
      nameWithType:
        CSharp: Straight.LineSetupType._2Points
        VB: Straight.LineSetupType._2Points
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.LineSetupType._2Points
        VB: Engine.Core.Maths.Straight.LineSetupType._2Points
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: _2Points
        path: ''
        startLine: 4048
      syntax:
        content:
          CSharp: _2Points = 0
          VB: _2Points = 0
        return:
          type: Engine.Core.Maths.Straight.LineSetupType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Maths.Straight.LineSetupType._1Point1Dir
      commentId: F:Engine.Core.Maths.Straight.LineSetupType._1Point1Dir
      language: CSharp
      name:
        CSharp: _1Point1Dir
        VB: _1Point1Dir
      nameWithType:
        CSharp: Straight.LineSetupType._1Point1Dir
        VB: Straight.LineSetupType._1Point1Dir
      qualifiedName:
        CSharp: Engine.Core.Maths.Straight.LineSetupType._1Point1Dir
        VB: Engine.Core.Maths.Straight.LineSetupType._1Point1Dir
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: _1Point1Dir
        path: ''
        startLine: 4049
      syntax:
        content:
          CSharp: _1Point1Dir = 1
          VB: _1Point1Dir = 1
        return:
          type: Engine.Core.Maths.Straight.LineSetupType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Maths.Vector
    commentId: T:Engine.Core.Maths.Vector
    language: CSharp
    name:
      CSharp: Vector
      VB: Vector
    nameWithType:
      CSharp: Vector
      VB: Vector
    qualifiedName:
      CSharp: Engine.Core.Maths.Vector
      VB: Engine.Core.Maths.Vector
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Vector
      path: ''
      startLine: 4191
    summary: "\nA vector with n dimensions\n"
    example: []
    syntax:
      content:
        CSharp: 'public class Vector : IEnumerable<float>, IEnumerable'
        VB: >-
          Public Class Vector

              Implements IEnumerable(Of Single), IEnumerable
    inheritance:
    - System.Object
    implements:
    - System.Collections.Generic.IEnumerable{System.Single}
    - System.Collections.IEnumerable
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Vector.Item(System.Int32)
      commentId: P:Engine.Core.Maths.Vector.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: Vector.Item[Int32]
        VB: Vector.Item(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Item[System.Int32]
        VB: Engine.Core.Maths.Vector.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 4201
      syntax:
        content:
          CSharp: public float this[int index] { get; set; }
          VB: Public Property Item(index As Integer) As Single
        parameters:
        - id: index
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Length
      commentId: P:Engine.Core.Maths.Vector.Length
      language: CSharp
      name:
        CSharp: Length
        VB: Length
      nameWithType:
        CSharp: Vector.Length
        VB: Vector.Length
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Length
        VB: Engine.Core.Maths.Vector.Length
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Length
        path: ''
        startLine: 4206
      syntax:
        content:
          CSharp: public float Length { get; }
          VB: Public ReadOnly Property Length As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.Length*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector.Dimension
      commentId: P:Engine.Core.Maths.Vector.Dimension
      language: CSharp
      name:
        CSharp: Dimension
        VB: Dimension
      nameWithType:
        CSharp: Vector.Dimension
        VB: Vector.Dimension
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Dimension
        VB: Engine.Core.Maths.Vector.Dimension
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dimension
        path: ''
        startLine: 4207
      syntax:
        content:
          CSharp: public int Dimension { get; }
          VB: Public ReadOnly Property Dimension As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Vector.Dimension*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector.LengthSquared
      commentId: P:Engine.Core.Maths.Vector.LengthSquared
      language: CSharp
      name:
        CSharp: LengthSquared
        VB: LengthSquared
      nameWithType:
        CSharp: Vector.LengthSquared
        VB: Vector.LengthSquared
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.LengthSquared
        VB: Engine.Core.Maths.Vector.LengthSquared
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: LengthSquared
        path: ''
        startLine: 4208
      syntax:
        content:
          CSharp: public float LengthSquared { get; }
          VB: Public ReadOnly Property LengthSquared As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.LengthSquared*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector.Normalized
      commentId: P:Engine.Core.Maths.Vector.Normalized
      language: CSharp
      name:
        CSharp: Normalized
        VB: Normalized
      nameWithType:
        CSharp: Vector.Normalized
        VB: Vector.Normalized
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Normalized
        VB: Engine.Core.Maths.Vector.Normalized
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalized
        path: ''
        startLine: 4209
      syntax:
        content:
          CSharp: public Vector Normalized { get; }
          VB: Public ReadOnly Property Normalized As Vector
        parameters: []
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Normalized*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector.#ctor(System.Collections.Generic.List{System.Single})
      commentId: M:Engine.Core.Maths.Vector.#ctor(System.Collections.Generic.List{System.Single})
      language: CSharp
      name:
        CSharp: Vector(List<Single>)
        VB: Vector(List(Of Single))
      nameWithType:
        CSharp: Vector.Vector(List<Single>)
        VB: Vector.Vector(List(Of Single))
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Vector(System.Collections.Generic.List<System.Single>)
        VB: Engine.Core.Maths.Vector.Vector(System.Collections.Generic.List(Of System.Single))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4211
      syntax:
        content:
          CSharp: public Vector(List<float> values)
          VB: Public Sub New(values As List(Of Single))
        parameters:
        - id: values
          type: System.Collections.Generic.List{System.Single}
      overload: Engine.Core.Maths.Vector.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.#ctor(System.Single[])
      commentId: M:Engine.Core.Maths.Vector.#ctor(System.Single[])
      language: CSharp
      name:
        CSharp: Vector(Single[])
        VB: Vector(Single())
      nameWithType:
        CSharp: Vector.Vector(Single[])
        VB: Vector.Vector(Single())
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Vector(System.Single[])
        VB: Engine.Core.Maths.Vector.Vector(System.Single())
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4215
      syntax:
        content:
          CSharp: public Vector(params float[] values)
          VB: Public Sub New(ParamArray values As Single())
        parameters:
        - id: values
          type: System.Single[]
      overload: Engine.Core.Maths.Vector.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.#ctor(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.#ctor(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Vector(Vector)
        VB: Vector(Vector)
      nameWithType:
        CSharp: Vector.Vector(Vector)
        VB: Vector.Vector(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Vector(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Vector(Engine.Core.Maths.Vector)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4220
      syntax:
        content:
          CSharp: public Vector(Vector v)
          VB: Public Sub New(v As Vector)
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Normalize
      commentId: M:Engine.Core.Maths.Vector.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector.Normalize()
        VB: Vector.Normalize()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Normalize()
        VB: Engine.Core.Maths.Vector.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalize
        path: ''
        startLine: 4241
      syntax:
        content:
          CSharp: public Vector Normalize()
          VB: Public Function Normalize As Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.GetLength
      commentId: M:Engine.Core.Maths.Vector.GetLength
      language: CSharp
      name:
        CSharp: GetLength()
        VB: GetLength()
      nameWithType:
        CSharp: Vector.GetLength()
        VB: Vector.GetLength()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.GetLength()
        VB: Engine.Core.Maths.Vector.GetLength()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetLength
        path: ''
        startLine: 4263
      syntax:
        content:
          CSharp: public float GetLength()
          VB: Public Function GetLength As Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.GetLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: IsDimensionEqual(Vector, Vector)
        VB: IsDimensionEqual(Vector, Vector)
      nameWithType:
        CSharp: Vector.IsDimensionEqual(Vector, Vector)
        VB: Vector.IsDimensionEqual(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.IsDimensionEqual(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IsDimensionEqual
        path: ''
        startLine: 4284
      syntax:
        content:
          CSharp: public bool IsDimensionEqual(Vector a, Vector b)
          VB: Public Function IsDimensionEqual(a As Vector, b As Vector) As Boolean
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector.IsDimensionEqual*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.SetValue(System.Single,System.Int32)
      commentId: M:Engine.Core.Maths.Vector.SetValue(System.Single,System.Int32)
      language: CSharp
      name:
        CSharp: SetValue(Single, Int32)
        VB: SetValue(Single, Int32)
      nameWithType:
        CSharp: Vector.SetValue(Single, Int32)
        VB: Vector.SetValue(Single, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.SetValue(System.Single, System.Int32)
        VB: Engine.Core.Maths.Vector.SetValue(System.Single, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: SetValue
        path: ''
        startLine: 4287
      syntax:
        content:
          CSharp: public void SetValue(float value, int index)
          VB: Public Sub SetValue(value As Single, index As Integer)
        parameters:
        - id: value
          type: System.Single
        - id: index
          type: System.Int32
      overload: Engine.Core.Maths.Vector.SetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.GetValue(System.Int32)
      commentId: M:Engine.Core.Maths.Vector.GetValue(System.Int32)
      language: CSharp
      name:
        CSharp: GetValue(Int32)
        VB: GetValue(Int32)
      nameWithType:
        CSharp: Vector.GetValue(Int32)
        VB: Vector.GetValue(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.GetValue(System.Int32)
        VB: Engine.Core.Maths.Vector.GetValue(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetValue
        path: ''
        startLine: 4295
      syntax:
        content:
          CSharp: public float GetValue(int index)
          VB: Public Function GetValue(index As Integer) As Single
        parameters:
        - id: index
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.GetValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.AddValue(System.Single)
      commentId: M:Engine.Core.Maths.Vector.AddValue(System.Single)
      language: CSharp
      name:
        CSharp: AddValue(Single)
        VB: AddValue(Single)
      nameWithType:
        CSharp: Vector.AddValue(Single)
        VB: Vector.AddValue(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.AddValue(System.Single)
        VB: Engine.Core.Maths.Vector.AddValue(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AddValue
        path: ''
        startLine: 4307
      summary: "\nAdds a dimension to the vector and adds the given value.\n"
      example: []
      syntax:
        content:
          CSharp: public void AddValue(float value)
          VB: Public Sub AddValue(value As Single)
        parameters:
        - id: value
          type: System.Single
          description: ''
      overload: Engine.Core.Maths.Vector.AddValue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: DotProduct(Vector)
        VB: DotProduct(Vector)
      nameWithType:
        CSharp: Vector.DotProduct(Vector)
        VB: Vector.DotProduct(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.DotProduct(Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DotProduct
        path: ''
        startLine: 4314
      syntax:
        content:
          CSharp: public float DotProduct(Vector vector)
          VB: Public Function DotProduct(vector As Vector) As Single
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.DotProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.ScalarProduct(System.Single)
      commentId: M:Engine.Core.Maths.Vector.ScalarProduct(System.Single)
      language: CSharp
      name:
        CSharp: ScalarProduct(Single)
        VB: ScalarProduct(Single)
      nameWithType:
        CSharp: Vector.ScalarProduct(Single)
        VB: Vector.ScalarProduct(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.ScalarProduct(System.Single)
        VB: Engine.Core.Maths.Vector.ScalarProduct(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarProduct
        path: ''
        startLine: 4327
      syntax:
        content:
          CSharp: public Vector ScalarProduct(float scalar)
          VB: Public Function ScalarProduct(scalar As Single) As Vector
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.ScalarProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: CrossProduct(Vector)
        VB: CrossProduct(Vector)
      nameWithType:
        CSharp: Vector.CrossProduct(Vector)
        VB: Vector.CrossProduct(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.CrossProduct(Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CrossProduct
        path: ''
        startLine: 4336
      syntax:
        content:
          CSharp: public Vector CrossProduct(Vector b)
          VB: Public Function CrossProduct(b As Vector) As Vector
        parameters:
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.CrossProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Addition(Vector)
        VB: Addition(Vector)
      nameWithType:
        CSharp: Vector.Addition(Vector)
        VB: Vector.Addition(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 4364
      syntax:
        content:
          CSharp: public Vector Addition(Vector vector)
          VB: Public Function Addition(vector As Vector) As Vector
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Addition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Substraction(Vector)
        VB: Substraction(Vector)
      nameWithType:
        CSharp: Vector.Substraction(Vector)
        VB: Vector.Substraction(Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 4377
      syntax:
        content:
          CSharp: public Vector Substraction(Vector vector)
          VB: Public Function Substraction(vector As Vector) As Vector
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Substraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Division(System.Single)
      commentId: M:Engine.Core.Maths.Vector.Division(System.Single)
      language: CSharp
      name:
        CSharp: Division(Single)
        VB: Division(Single)
      nameWithType:
        CSharp: Vector.Division(Single)
        VB: Vector.Division(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Division(System.Single)
        VB: Engine.Core.Maths.Vector.Division(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Division
        path: ''
        startLine: 4390
      syntax:
        content:
          CSharp: public Vector Division(float scalar)
          VB: Public Function Division(scalar As Single) As Vector
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Division*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Dot(Vector, Vector)
        VB: Dot(Vector, Vector)
      nameWithType:
        CSharp: Vector.Dot(Vector, Vector)
        VB: Vector.Dot(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Dot(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dot
        path: ''
        startLine: 4400
      syntax:
        content:
          CSharp: public static float Dot(Vector a, Vector b)
          VB: Public Shared Function Dot(a As Vector, b As Vector) As Single
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.Dot*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Cross(Vector, Vector)
        VB: Cross(Vector, Vector)
      nameWithType:
        CSharp: Vector.Cross(Vector, Vector)
        VB: Vector.Cross(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Cross(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Cross
        path: ''
        startLine: 4404
      syntax:
        content:
          CSharp: public static Vector Cross(Vector a, Vector b)
          VB: Public Shared Function Cross(a As Vector, b As Vector) As Vector
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Cross*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector,System.Single)
      commentId: M:Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector,System.Single)
      language: CSharp
      name:
        CSharp: Scalar(Vector, Single)
        VB: Scalar(Vector, Single)
      nameWithType:
        CSharp: Vector.Scalar(Vector, Single)
        VB: Vector.Scalar(Vector, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector, System.Single)
        VB: Engine.Core.Maths.Vector.Scalar(Engine.Core.Maths.Vector, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Scalar
        path: ''
        startLine: 4408
      syntax:
        content:
          CSharp: public static Vector Scalar(Vector a, float f)
          VB: Public Shared Function Scalar(a As Vector, f As Single) As Vector
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Scalar*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Addition(Vector, Vector)
        VB: Addition(Vector, Vector)
      nameWithType:
        CSharp: Vector.Addition(Vector, Vector)
        VB: Vector.Addition(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 4412
      syntax:
        content:
          CSharp: public static Vector Addition(Vector a, Vector b)
          VB: Public Shared Function Addition(a As Vector, b As Vector) As Vector
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Substraction(Vector, Vector)
        VB: Substraction(Vector, Vector)
      nameWithType:
        CSharp: Vector.Substraction(Vector, Vector)
        VB: Vector.Substraction(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Substraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 4416
      syntax:
        content:
          CSharp: public static Vector Substraction(Vector a, Vector b)
          VB: Public Shared Function Substraction(a As Vector, b As Vector) As Vector
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: b
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Substraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector,System.Single)
      commentId: M:Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector, Single)
        VB: Division(Vector, Single)
      nameWithType:
        CSharp: Vector.Division(Vector, Single)
        VB: Vector.Division(Vector, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
        VB: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Division
        path: ''
        startLine: 4420
      syntax:
        content:
          CSharp: public static Vector Division(Vector a, float f)
          VB: Public Shared Function Division(a As Vector, f As Single) As Vector
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.op_Addition(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Addition(Vector, Vector)
        VB: Addition(Vector, Vector)
      nameWithType:
        CSharp: Vector.Addition(Vector, Vector)
        VB: Vector.Addition(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Addition(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 4425
      syntax:
        content:
          CSharp: public static Vector operator +(Vector v1, Vector v2)
          VB: Public Shared Operator +(v1 As Vector, v2 As Vector) As Vector
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector
        - id: v2
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.op_Subtraction(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Subtraction(Vector, Vector)
        VB: Subtraction(Vector, Vector)
      nameWithType:
        CSharp: Vector.Subtraction(Vector, Vector)
        VB: Vector.Subtraction(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Subtraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Subtraction(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Subtraction
        path: ''
        startLine: 4429
      syntax:
        content:
          CSharp: public static Vector operator -(Vector v1, Vector v2)
          VB: Public Shared Operator -(v1 As Vector, v2 As Vector) As Vector
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector
        - id: v2
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Multiply(Vector, Vector)
        VB: Multiply(Vector, Vector)
      nameWithType:
        CSharp: Vector.Multiply(Vector, Vector)
        VB: Vector.Multiply(Vector, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4433
      syntax:
        content:
          CSharp: public static float operator *(Vector v1, Vector v2)
          VB: Public Shared Operator *(v1 As Vector, v2 As Vector) As Single
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector
        - id: v2
          type: Engine.Core.Maths.Vector
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,System.Single)
      commentId: M:Engine.Core.Maths.Vector.op_Multiply(Engine.Core.Maths.Vector,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector, Single)
        VB: Multiply(Vector, Single)
      nameWithType:
        CSharp: Vector.Multiply(Vector, Single)
        VB: Vector.Multiply(Vector, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, System.Single)
        VB: Engine.Core.Maths.Vector.Multiply(Engine.Core.Maths.Vector, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4437
      syntax:
        content:
          CSharp: public static Vector operator *(Vector v1, float f)
          VB: Public Shared Operator *(v1 As Vector, f As Single) As Vector
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Multiply(System.Single,Engine.Core.Maths.Vector)
      commentId: M:Engine.Core.Maths.Vector.op_Multiply(System.Single,Engine.Core.Maths.Vector)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector)
        VB: Multiply(Single, Vector)
      nameWithType:
        CSharp: Vector.Multiply(Single, Vector)
        VB: Vector.Multiply(Single, Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Multiply(System.Single, Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector.Multiply(System.Single, Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4441
      syntax:
        content:
          CSharp: public static Vector operator *(float f, Vector v1)
          VB: Public Shared Operator *(f As Single, v1 As Vector) As Vector
        parameters:
        - id: f
          type: System.Single
        - id: v1
          type: Engine.Core.Maths.Vector
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.op_Division(Engine.Core.Maths.Vector,System.Single)
      commentId: M:Engine.Core.Maths.Vector.op_Division(Engine.Core.Maths.Vector,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector, Single)
        VB: Division(Vector, Single)
      nameWithType:
        CSharp: Vector.Division(Vector, Single)
        VB: Vector.Division(Vector, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
        VB: Engine.Core.Maths.Vector.Division(Engine.Core.Maths.Vector, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Division
        path: ''
        startLine: 4445
      syntax:
        content:
          CSharp: public static Vector operator /(Vector v1, float f)
          VB: Public Shared Operator /(v1 As Vector, f As Single) As Vector
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
      commentId: M:Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector,System.Boolean)
      language: CSharp
      name:
        CSharp: ToMatrix(Vector, Boolean)
        VB: ToMatrix(Vector, Boolean)
      nameWithType:
        CSharp: Vector.ToMatrix(Vector, Boolean)
        VB: Vector.ToMatrix(Vector, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector, System.Boolean)
        VB: Engine.Core.Maths.Vector.ToMatrix(Engine.Core.Maths.Vector, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix
        path: ''
        startLine: 4454
      summary: "\nTurns the vector into single-row matrix, as long as <code data-dev-comment-type=\"paramref\" class=\"paramref\">isColumn</code> is false.\nOtherwise it turns the vector into a single-column matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static MatrixMxN ToMatrix(Vector v, bool isColumn = false)
          VB: Public Shared Function ToMatrix(v As Vector, isColumn As Boolean = False) As MatrixMxN
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector
          description: ''
        - id: isColumn
          type: System.Boolean
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Vector.ToMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector.GetEnumerator
      commentId: M:Engine.Core.Maths.Vector.GetEnumerator
      language: CSharp
      name:
        CSharp: GetEnumerator()
        VB: GetEnumerator()
      nameWithType:
        CSharp: Vector.GetEnumerator()
        VB: Vector.GetEnumerator()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector.GetEnumerator()
        VB: Engine.Core.Maths.Vector.GetEnumerator()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetEnumerator
        path: ''
        startLine: 4474
      syntax:
        content:
          CSharp: public IEnumerator<float> GetEnumerator()
          VB: Public Function GetEnumerator As IEnumerator(Of Single)
        return:
          type: System.Collections.Generic.IEnumerator{System.Single}
      overload: Engine.Core.Maths.Vector.GetEnumerator*
      implements:
      - System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Vector2
    commentId: T:Engine.Core.Maths.Vector2
    language: CSharp
    name:
      CSharp: Vector2
      VB: Vector2
    nameWithType:
      CSharp: Vector2
      VB: Vector2
    qualifiedName:
      CSharp: Engine.Core.Maths.Vector2
      VB: Engine.Core.Maths.Vector2
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Vector2
      path: ''
      startLine: 4499
    syntax:
      content:
        CSharp: public class Vector2
        VB: Public Class Vector2
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Vector2.Zero
      commentId: F:Engine.Core.Maths.Vector2.Zero
      language: CSharp
      name:
        CSharp: Zero
        VB: Zero
      nameWithType:
        CSharp: Vector2.Zero
        VB: Vector2.Zero
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Zero
        VB: Engine.Core.Maths.Vector2.Zero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Zero
        path: ''
        startLine: 4501
      syntax:
        content:
          CSharp: public static readonly Vector2 Zero
          VB: Public Shared ReadOnly Zero As Vector2
        return:
          type: Engine.Core.Maths.Vector2
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.One
      commentId: F:Engine.Core.Maths.Vector2.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Vector2.One
        VB: Vector2.One
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.One
        VB: Engine.Core.Maths.Vector2.One
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: One
        path: ''
        startLine: 4502
      syntax:
        content:
          CSharp: public static readonly Vector2 One
          VB: Public Shared ReadOnly One As Vector2
        return:
          type: Engine.Core.Maths.Vector2
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.X
      commentId: P:Engine.Core.Maths.Vector2.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: Vector2.X
        VB: Vector2.X
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.X
        VB: Engine.Core.Maths.Vector2.X
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X
        path: ''
        startLine: 4510
      syntax:
        content:
          CSharp: public float X { get; set; }
          VB: Public Property X As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.X*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.Y
      commentId: P:Engine.Core.Maths.Vector2.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: Vector2.Y
        VB: Vector2.Y
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Y
        VB: Engine.Core.Maths.Vector2.Y
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Y
        path: ''
        startLine: 4511
      syntax:
        content:
          CSharp: public float Y { get; set; }
          VB: Public Property Y As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.Y*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.Length
      commentId: P:Engine.Core.Maths.Vector2.Length
      language: CSharp
      name:
        CSharp: Length
        VB: Length
      nameWithType:
        CSharp: Vector2.Length
        VB: Vector2.Length
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Length
        VB: Engine.Core.Maths.Vector2.Length
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Length
        path: ''
        startLine: 4512
      syntax:
        content:
          CSharp: public float Length { get; }
          VB: Public ReadOnly Property Length As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.Length*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.LengthSquared
      commentId: P:Engine.Core.Maths.Vector2.LengthSquared
      language: CSharp
      name:
        CSharp: LengthSquared
        VB: LengthSquared
      nameWithType:
        CSharp: Vector2.LengthSquared
        VB: Vector2.LengthSquared
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.LengthSquared
        VB: Engine.Core.Maths.Vector2.LengthSquared
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: LengthSquared
        path: ''
        startLine: 4513
      syntax:
        content:
          CSharp: public float LengthSquared { get; }
          VB: Public ReadOnly Property LengthSquared As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.LengthSquared*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.Normalized
      commentId: P:Engine.Core.Maths.Vector2.Normalized
      language: CSharp
      name:
        CSharp: Normalized
        VB: Normalized
      nameWithType:
        CSharp: Vector2.Normalized
        VB: Vector2.Normalized
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Normalized
        VB: Engine.Core.Maths.Vector2.Normalized
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalized
        path: ''
        startLine: 4514
      syntax:
        content:
          CSharp: public Vector2 Normalized { get; }
          VB: Public ReadOnly Property Normalized As Vector2
        parameters: []
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Normalized*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.Dimension
      commentId: P:Engine.Core.Maths.Vector2.Dimension
      language: CSharp
      name:
        CSharp: Dimension
        VB: Dimension
      nameWithType:
        CSharp: Vector2.Dimension
        VB: Vector2.Dimension
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Dimension
        VB: Engine.Core.Maths.Vector2.Dimension
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dimension
        path: ''
        startLine: 4515
      syntax:
        content:
          CSharp: public int Dimension { get; }
          VB: Public ReadOnly Property Dimension As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Vector2.Dimension*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector2.Item(System.Int32)
      commentId: P:Engine.Core.Maths.Vector2.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: Vector2.Item[Int32]
        VB: Vector2.Item(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Item[System.Int32]
        VB: Engine.Core.Maths.Vector2.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 4517
      syntax:
        content:
          CSharp: public float this[int xindex] { get; set; }
          VB: Public Property Item(xindex As Integer) As Single
        parameters:
        - id: xindex
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.#ctor(System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Vector2.#ctor(System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector2(Single, Single)
        VB: Vector2(Single, Single)
      nameWithType:
        CSharp: Vector2.Vector2(Single, Single)
        VB: Vector2.Vector2(Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Vector2(System.Single, System.Single)
        VB: Engine.Core.Maths.Vector2.Vector2(System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4549
      syntax:
        content:
          CSharp: public Vector2(float x, float y)
          VB: Public Sub New(x As Single, y As Single)
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
      overload: Engine.Core.Maths.Vector2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.#ctor(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.#ctor(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Vector2(Vector2)
        VB: Vector2(Vector2)
      nameWithType:
        CSharp: Vector2.Vector2(Vector2)
        VB: Vector2.Vector2(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Vector2(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Vector2(Engine.Core.Maths.Vector2)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4554
      syntax:
        content:
          CSharp: public Vector2(Vector2 vector)
          VB: Public Sub New(vector As Vector2)
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.op_Multiply(System.Single,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.op_Multiply(System.Single,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector2)
        VB: Multiply(Single, Vector2)
      nameWithType:
        CSharp: Vector2.Multiply(Single, Vector2)
        VB: Vector2.Multiply(Single, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Multiply(System.Single, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Multiply(System.Single, Engine.Core.Maths.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4560
      syntax:
        content:
          CSharp: public static Vector2 operator *(float f, Vector2 v)
          VB: Public Shared Operator *(f As Single, v As Vector2) As Vector2
        parameters:
        - id: f
          type: System.Single
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Multiply(Engine.Core.Maths.Vector2,System.Single)
      commentId: M:Engine.Core.Maths.Vector2.op_Multiply(Engine.Core.Maths.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector2, Single)
        VB: Multiply(Vector2, Single)
      nameWithType:
        CSharp: Vector2.Multiply(Vector2, Single)
        VB: Vector2.Multiply(Vector2, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Multiply(Engine.Core.Maths.Vector2, System.Single)
        VB: Engine.Core.Maths.Vector2.Multiply(Engine.Core.Maths.Vector2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4564
      syntax:
        content:
          CSharp: public static Vector2 operator *(Vector2 v, float f)
          VB: Public Shared Operator *(v As Vector2, f As Single) As Vector2
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Multiply(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.op_Multiply(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Multiply(Vector2, Vector2)
        VB: Multiply(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Multiply(Vector2, Vector2)
        VB: Vector2.Multiply(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Multiply(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Multiply(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4568
      syntax:
        content:
          CSharp: public static float operator *(Vector2 v1, Vector2 v2)
          VB: Public Shared Operator *(v1 As Vector2, v2 As Vector2) As Single
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector2
        - id: v2
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Addition(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.op_Addition(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Addition(Vector2, Vector2)
        VB: Addition(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Addition(Vector2, Vector2)
        VB: Vector2.Addition(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 4572
      syntax:
        content:
          CSharp: public static Vector2 operator +(Vector2 v1, Vector2 v2)
          VB: Public Shared Operator +(v1 As Vector2, v2 As Vector2) As Vector2
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector2
        - id: v2
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Subtraction(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.op_Subtraction(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Subtraction(Vector2, Vector2)
        VB: Subtraction(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.Subtraction(Vector2, Vector2)
        VB: Vector2.Subtraction(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Subtraction(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Subtraction(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Subtraction
        path: ''
        startLine: 4576
      syntax:
        content:
          CSharp: public static Vector2 operator -(Vector2 v1, Vector2 v2)
          VB: Public Shared Operator -(v1 As Vector2, v2 As Vector2) As Vector2
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector2
        - id: v2
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Division(Engine.Core.Maths.Vector2,System.Single)
      commentId: M:Engine.Core.Maths.Vector2.op_Division(Engine.Core.Maths.Vector2,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector2, Single)
        VB: Division(Vector2, Single)
      nameWithType:
        CSharp: Vector2.Division(Vector2, Single)
        VB: Vector2.Division(Vector2, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Division(Engine.Core.Maths.Vector2, System.Single)
        VB: Engine.Core.Maths.Vector2.Division(Engine.Core.Maths.Vector2, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Division
        path: ''
        startLine: 4580
      syntax:
        content:
          CSharp: public static Vector2 operator /(Vector2 v, float f)
          VB: Public Shared Operator /(v As Vector2, f As Single) As Vector2
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.op_Implicit(Engine.Core.Maths.Vector2)~Engine.Core.Maths.Vector
      commentId: M:Engine.Core.Maths.Vector2.op_Implicit(Engine.Core.Maths.Vector2)~Engine.Core.Maths.Vector
      language: CSharp
      name:
        CSharp: Implicit(Vector2 to Vector)
        VB: Widening(Vector2 to Vector)
      nameWithType:
        CSharp: Vector2.Implicit(Vector2 to Vector)
        VB: Vector2.Widening(Vector2 to Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Implicit(Engine.Core.Maths.Vector2 to Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector2.Widening(Engine.Core.Maths.Vector2 to Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 4584
      syntax:
        content:
          CSharp: public static implicit operator Vector(Vector2 v)
          VB: Public Shared Widening Operator CType(v As Vector2) As Vector
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector2.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.ToMatrix(Engine.Core.Maths.Vector2,System.Boolean)
      commentId: M:Engine.Core.Maths.Vector2.ToMatrix(Engine.Core.Maths.Vector2,System.Boolean)
      language: CSharp
      name:
        CSharp: ToMatrix(Vector2, Boolean)
        VB: ToMatrix(Vector2, Boolean)
      nameWithType:
        CSharp: Vector2.ToMatrix(Vector2, Boolean)
        VB: Vector2.ToMatrix(Vector2, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.ToMatrix(Engine.Core.Maths.Vector2, System.Boolean)
        VB: Engine.Core.Maths.Vector2.ToMatrix(Engine.Core.Maths.Vector2, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix
        path: ''
        startLine: 4594
      summary: "\nTurns the vector into single-row matrix, as long as <code data-dev-comment-type=\"paramref\" class=\"paramref\">isColumn</code> is false.\nOtherwise it turns the vector into a single-column matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static MatrixMxN ToMatrix(Vector2 v, bool isColumn = false)
          VB: Public Shared Function ToMatrix(v As Vector2, isColumn As Boolean = False) As MatrixMxN
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
          description: ''
        - id: isColumn
          type: System.Boolean
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Vector2.ToMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: CrossProduct(Vector2, Vector2, out Vector3)
        VB: CrossProduct(Vector2, Vector2, ByRef Vector3)
      nameWithType:
        CSharp: Vector2.CrossProduct(Vector2, Vector2, out Vector3)
        VB: Vector2.CrossProduct(Vector2, Vector2, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CrossProduct
        path: ''
        startLine: 4598
      syntax:
        content:
          CSharp: public static float CrossProduct(Vector2 u, Vector2 v, out Vector3 resultAsVector3)
          VB: Public Shared Function CrossProduct(u As Vector2, v As Vector2, ByRef resultAsVector3 As Vector3) As Single
        parameters:
        - id: u
          type: Engine.Core.Maths.Vector2
        - id: v
          type: Engine.Core.Maths.Vector2
        - id: resultAsVector3
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.CrossProduct*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: DotProduct(Vector2, Vector2)
        VB: DotProduct(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.DotProduct(Vector2, Vector2)
        VB: Vector2.DotProduct(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DotProduct
        path: ''
        startLine: 4603
      syntax:
        content:
          CSharp: public static float DotProduct(Vector2 u, Vector2 v)
          VB: Public Shared Function DotProduct(u As Vector2, v As Vector2) As Single
        parameters:
        - id: u
          type: Engine.Core.Maths.Vector2
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.DotProduct*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.Normalize(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.Normalize(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Normalize(Vector2)
        VB: Normalize(Vector2)
      nameWithType:
        CSharp: Vector2.Normalize(Vector2)
        VB: Vector2.Normalize(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Normalize(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Normalize(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalize
        path: ''
        startLine: 4607
      syntax:
        content:
          CSharp: public static Vector2 Normalize(Vector2 v)
          VB: Public Shared Function Normalize(v As Vector2) As Vector2
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Normalize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.GetLength(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.GetLength(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: GetLength(Vector2)
        VB: GetLength(Vector2)
      nameWithType:
        CSharp: Vector2.GetLength(Vector2)
        VB: Vector2.GetLength(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.GetLength(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.GetLength(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetLength
        path: ''
        startLine: 4612
      syntax:
        content:
          CSharp: public static float GetLength(Vector2 v)
          VB: Public Shared Function GetLength(v As Vector2) As Single
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.GetLength*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.AngleBetween(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.AngleBetween(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: AngleBetween(Vector2, Vector2)
        VB: AngleBetween(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.AngleBetween(Vector2, Vector2)
        VB: Vector2.AngleBetween(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.AngleBetween(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.AngleBetween(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AngleBetween
        path: ''
        startLine: 4616
      syntax:
        content:
          CSharp: public static float AngleBetween(Vector2 a, Vector2 b)
          VB: Public Shared Function AngleBetween(a As Vector2, b As Vector2) As Single
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector2
        - id: b
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.AngleBetween*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.OrthogonalityCheck(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.OrthogonalityCheck(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: OrthogonalityCheck(Vector2, Vector2)
        VB: OrthogonalityCheck(Vector2, Vector2)
      nameWithType:
        CSharp: Vector2.OrthogonalityCheck(Vector2, Vector2)
        VB: Vector2.OrthogonalityCheck(Vector2, Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.OrthogonalityCheck(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.OrthogonalityCheck(Engine.Core.Maths.Vector2, Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: OrthogonalityCheck
        path: ''
        startLine: 4621
      syntax:
        content:
          CSharp: public static bool OrthogonalityCheck(Vector2 a, Vector2 b)
          VB: Public Shared Function OrthogonalityCheck(a As Vector2, b As Vector2) As Boolean
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector2
        - id: b
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector2.OrthogonalityCheck*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector2.Normalize
      commentId: M:Engine.Core.Maths.Vector2.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector2.Normalize()
        VB: Vector2.Normalize()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Normalize()
        VB: Engine.Core.Maths.Vector2.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalize
        path: ''
        startLine: 4631
      syntax:
        content:
          CSharp: public Vector2 Normalize()
          VB: Public Function Normalize As Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.GetLength
      commentId: M:Engine.Core.Maths.Vector2.GetLength
      language: CSharp
      name:
        CSharp: GetLength()
        VB: GetLength()
      nameWithType:
        CSharp: Vector2.GetLength()
        VB: Vector2.GetLength()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.GetLength()
        VB: Engine.Core.Maths.Vector2.GetLength()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetLength
        path: ''
        startLine: 4636
      syntax:
        content:
          CSharp: public float GetLength()
          VB: Public Function GetLength As Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.GetLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector3@)
      commentId: M:Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2,Engine.Core.Maths.Vector3@)
      language: CSharp
      name:
        CSharp: CrossProduct(Vector2, out Vector3)
        VB: CrossProduct(Vector2, ByRef Vector3)
      nameWithType:
        CSharp: Vector2.CrossProduct(Vector2, out Vector3)
        VB: Vector2.CrossProduct(Vector2, ByRef Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2, out Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector2.CrossProduct(Engine.Core.Maths.Vector2, ByRef Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CrossProduct
        path: ''
        startLine: 4649
      syntax:
        content:
          CSharp: public float CrossProduct(Vector2 v, out Vector3 resultAsVector3)
          VB: Public Function CrossProduct(v As Vector2, ByRef resultAsVector3 As Vector3) As Single
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        - id: resultAsVector3
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.CrossProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: DotProduct(Vector2)
        VB: DotProduct(Vector2)
      nameWithType:
        CSharp: Vector2.DotProduct(Vector2)
        VB: Vector2.DotProduct(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.DotProduct(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DotProduct
        path: ''
        startLine: 4653
      syntax:
        content:
          CSharp: public float DotProduct(Vector2 v)
          VB: Public Function DotProduct(v As Vector2) As Single
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector2.DotProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.ScalarProduct(System.Single)
      commentId: M:Engine.Core.Maths.Vector2.ScalarProduct(System.Single)
      language: CSharp
      name:
        CSharp: ScalarProduct(Single)
        VB: ScalarProduct(Single)
      nameWithType:
        CSharp: Vector2.ScalarProduct(Single)
        VB: Vector2.ScalarProduct(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.ScalarProduct(System.Single)
        VB: Engine.Core.Maths.Vector2.ScalarProduct(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarProduct
        path: ''
        startLine: 4657
      syntax:
        content:
          CSharp: public Vector2 ScalarProduct(float scalar)
          VB: Public Function ScalarProduct(scalar As Single) As Vector2
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.ScalarProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Addition(Vector2)
        VB: Addition(Vector2)
      nameWithType:
        CSharp: Vector2.Addition(Vector2)
        VB: Vector2.Addition(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Addition(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 4661
      syntax:
        content:
          CSharp: public Vector2 Addition(Vector2 vector)
          VB: Public Function Addition(vector As Vector2) As Vector2
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Addition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.Substraction(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.Substraction(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: Substraction(Vector2)
        VB: Substraction(Vector2)
      nameWithType:
        CSharp: Vector2.Substraction(Vector2)
        VB: Vector2.Substraction(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Substraction(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.Substraction(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 4665
      syntax:
        content:
          CSharp: public Vector2 Substraction(Vector2 v)
          VB: Public Function Substraction(v As Vector2) As Vector2
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Substraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.Division(System.Single)
      commentId: M:Engine.Core.Maths.Vector2.Division(System.Single)
      language: CSharp
      name:
        CSharp: Division(Single)
        VB: Division(Single)
      nameWithType:
        CSharp: Vector2.Division(Single)
        VB: Vector2.Division(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.Division(System.Single)
        VB: Engine.Core.Maths.Vector2.Division(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Division
        path: ''
        startLine: 4669
      syntax:
        content:
          CSharp: public Vector2 Division(float scalar)
          VB: Public Function Division(scalar As Single) As Vector2
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.Division*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.IsPerpendicularTo(Engine.Core.Maths.Vector2)
      commentId: M:Engine.Core.Maths.Vector2.IsPerpendicularTo(Engine.Core.Maths.Vector2)
      language: CSharp
      name:
        CSharp: IsPerpendicularTo(Vector2)
        VB: IsPerpendicularTo(Vector2)
      nameWithType:
        CSharp: Vector2.IsPerpendicularTo(Vector2)
        VB: Vector2.IsPerpendicularTo(Vector2)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.IsPerpendicularTo(Engine.Core.Maths.Vector2)
        VB: Engine.Core.Maths.Vector2.IsPerpendicularTo(Engine.Core.Maths.Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IsPerpendicularTo
        path: ''
        startLine: 4673
      syntax:
        content:
          CSharp: public bool IsPerpendicularTo(Vector2 v)
          VB: Public Function IsPerpendicularTo(v As Vector2) As Boolean
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector2
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector2.IsPerpendicularTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.GetNormalVector(System.Boolean)
      commentId: M:Engine.Core.Maths.Vector2.GetNormalVector(System.Boolean)
      language: CSharp
      name:
        CSharp: GetNormalVector(Boolean)
        VB: GetNormalVector(Boolean)
      nameWithType:
        CSharp: Vector2.GetNormalVector(Boolean)
        VB: Vector2.GetNormalVector(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.GetNormalVector(System.Boolean)
        VB: Engine.Core.Maths.Vector2.GetNormalVector(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetNormalVector
        path: ''
        startLine: 4682
      syntax:
        content:
          CSharp: public Vector2 GetNormalVector(bool negateYEntryInstead)
          VB: Public Function GetNormalVector(negateYEntryInstead As Boolean) As Vector2
        parameters:
        - id: negateYEntryInstead
          type: System.Boolean
        return:
          type: Engine.Core.Maths.Vector2
      overload: Engine.Core.Maths.Vector2.GetNormalVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.IsZero
      commentId: M:Engine.Core.Maths.Vector2.IsZero
      language: CSharp
      name:
        CSharp: IsZero()
        VB: IsZero()
      nameWithType:
        CSharp: Vector2.IsZero()
        VB: Vector2.IsZero()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.IsZero()
        VB: Engine.Core.Maths.Vector2.IsZero()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IsZero
        path: ''
        startLine: 4696
      syntax:
        content:
          CSharp: public bool IsZero()
          VB: Public Function IsZero As Boolean
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector2.IsZero*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector2.ToMatrix(System.Boolean)
      commentId: M:Engine.Core.Maths.Vector2.ToMatrix(System.Boolean)
      language: CSharp
      name:
        CSharp: ToMatrix(Boolean)
        VB: ToMatrix(Boolean)
      nameWithType:
        CSharp: Vector2.ToMatrix(Boolean)
        VB: Vector2.ToMatrix(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector2.ToMatrix(System.Boolean)
        VB: Engine.Core.Maths.Vector2.ToMatrix(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix
        path: ''
        startLine: 4700
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix(bool isColumn = false)
          VB: Public Function ToMatrix(isColumn As Boolean = False) As MatrixMxN
        parameters:
        - id: isColumn
          type: System.Boolean
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Vector2.ToMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Vector3
    commentId: T:Engine.Core.Maths.Vector3
    language: CSharp
    name:
      CSharp: Vector3
      VB: Vector3
    nameWithType:
      CSharp: Vector3
      VB: Vector3
    qualifiedName:
      CSharp: Engine.Core.Maths.Vector3
      VB: Engine.Core.Maths.Vector3
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths
    source:
      id: Vector3
      path: ''
      startLine: 4742
    syntax:
      content:
        CSharp: public class Vector3
        VB: Public Class Vector3
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Vector3.Zero
      commentId: F:Engine.Core.Maths.Vector3.Zero
      language: CSharp
      name:
        CSharp: Zero
        VB: Zero
      nameWithType:
        CSharp: Vector3.Zero
        VB: Vector3.Zero
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Zero
        VB: Engine.Core.Maths.Vector3.Zero
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Zero
        path: ''
        startLine: 4744
      syntax:
        content:
          CSharp: public static readonly Vector3 Zero
          VB: Public Shared ReadOnly Zero As Vector3
        return:
          type: Engine.Core.Maths.Vector3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.One
      commentId: F:Engine.Core.Maths.Vector3.One
      language: CSharp
      name:
        CSharp: One
        VB: One
      nameWithType:
        CSharp: Vector3.One
        VB: Vector3.One
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.One
        VB: Engine.Core.Maths.Vector3.One
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: One
        path: ''
        startLine: 4745
      syntax:
        content:
          CSharp: public static readonly Vector3 One
          VB: Public Shared ReadOnly One As Vector3
        return:
          type: Engine.Core.Maths.Vector3
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.X1
      commentId: P:Engine.Core.Maths.Vector3.X1
      language: CSharp
      name:
        CSharp: X1
        VB: X1
      nameWithType:
        CSharp: Vector3.X1
        VB: Vector3.X1
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.X1
        VB: Engine.Core.Maths.Vector3.X1
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X1
        path: ''
        startLine: 4754
      syntax:
        content:
          CSharp: public float X1 { get; set; }
          VB: Public Property X1 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.X1*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.X2
      commentId: P:Engine.Core.Maths.Vector3.X2
      language: CSharp
      name:
        CSharp: X2
        VB: X2
      nameWithType:
        CSharp: Vector3.X2
        VB: Vector3.X2
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.X2
        VB: Engine.Core.Maths.Vector3.X2
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X2
        path: ''
        startLine: 4755
      syntax:
        content:
          CSharp: public float X2 { get; set; }
          VB: Public Property X2 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.X2*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.X3
      commentId: P:Engine.Core.Maths.Vector3.X3
      language: CSharp
      name:
        CSharp: X3
        VB: X3
      nameWithType:
        CSharp: Vector3.X3
        VB: Vector3.X3
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.X3
        VB: Engine.Core.Maths.Vector3.X3
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: X3
        path: ''
        startLine: 4756
      syntax:
        content:
          CSharp: public float X3 { get; set; }
          VB: Public Property X3 As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.X3*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Length
      commentId: P:Engine.Core.Maths.Vector3.Length
      language: CSharp
      name:
        CSharp: Length
        VB: Length
      nameWithType:
        CSharp: Vector3.Length
        VB: Vector3.Length
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Length
        VB: Engine.Core.Maths.Vector3.Length
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Length
        path: ''
        startLine: 4757
      syntax:
        content:
          CSharp: public float Length { get; }
          VB: Public ReadOnly Property Length As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.Length*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.LengthSquared
      commentId: P:Engine.Core.Maths.Vector3.LengthSquared
      language: CSharp
      name:
        CSharp: LengthSquared
        VB: LengthSquared
      nameWithType:
        CSharp: Vector3.LengthSquared
        VB: Vector3.LengthSquared
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.LengthSquared
        VB: Engine.Core.Maths.Vector3.LengthSquared
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: LengthSquared
        path: ''
        startLine: 4758
      syntax:
        content:
          CSharp: public float LengthSquared { get; }
          VB: Public ReadOnly Property LengthSquared As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.LengthSquared*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.Normalized
      commentId: P:Engine.Core.Maths.Vector3.Normalized
      language: CSharp
      name:
        CSharp: Normalized
        VB: Normalized
      nameWithType:
        CSharp: Vector3.Normalized
        VB: Vector3.Normalized
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Normalized
        VB: Engine.Core.Maths.Vector3.Normalized
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalized
        path: ''
        startLine: 4759
      syntax:
        content:
          CSharp: public Vector3 Normalized { get; }
          VB: Public ReadOnly Property Normalized As Vector3
        parameters: []
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Normalized*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.Dimension
      commentId: P:Engine.Core.Maths.Vector3.Dimension
      language: CSharp
      name:
        CSharp: Dimension
        VB: Dimension
      nameWithType:
        CSharp: Vector3.Dimension
        VB: Vector3.Dimension
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Dimension
        VB: Engine.Core.Maths.Vector3.Dimension
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Dimension
        path: ''
        startLine: 4760
      syntax:
        content:
          CSharp: public int Dimension { get; }
          VB: Public ReadOnly Property Dimension As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Vector3.Dimension*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Vector3.Item(System.Int32)
      commentId: P:Engine.Core.Maths.Vector3.Item(System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32]
        VB: Item(Int32)
      nameWithType:
        CSharp: Vector3.Item[Int32]
        VB: Vector3.Item(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Item[System.Int32]
        VB: Engine.Core.Maths.Vector3.Item(System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: this[]
        path: ''
        startLine: 4762
      syntax:
        content:
          CSharp: public float this[int xindex] { get; set; }
          VB: Public Property Item(xindex As Integer) As Single
        parameters:
        - id: xindex
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.#ctor(System.Single,System.Single,System.Single)
      commentId: M:Engine.Core.Maths.Vector3.#ctor(System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: Vector3(Single, Single, Single)
        VB: Vector3(Single, Single, Single)
      nameWithType:
        CSharp: Vector3.Vector3(Single, Single, Single)
        VB: Vector3.Vector3(Single, Single, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Vector3(System.Single, System.Single, System.Single)
        VB: Engine.Core.Maths.Vector3.Vector3(System.Single, System.Single, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4800
      syntax:
        content:
          CSharp: public Vector3(float x1, float x2, float x3)
          VB: Public Sub New(x1 As Single, x2 As Single, x3 As Single)
        parameters:
        - id: x1
          type: System.Single
        - id: x2
          type: System.Single
        - id: x3
          type: System.Single
      overload: Engine.Core.Maths.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.#ctor(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.#ctor(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Vector3(Vector3)
        VB: Vector3(Vector3)
      nameWithType:
        CSharp: Vector3.Vector3(Vector3)
        VB: Vector3.Vector3(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Vector3(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Vector3(Engine.Core.Maths.Vector3)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: .ctor
        path: ''
        startLine: 4806
      syntax:
        content:
          CSharp: public Vector3(Vector3 vector)
          VB: Public Sub New(vector As Vector3)
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.op_Multiply(System.Single,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.op_Multiply(System.Single,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(Single, Vector3)
        VB: Multiply(Single, Vector3)
      nameWithType:
        CSharp: Vector3.Multiply(Single, Vector3)
        VB: Vector3.Multiply(Single, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Multiply(System.Single, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Multiply(System.Single, Engine.Core.Maths.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4813
      syntax:
        content:
          CSharp: public static Vector3 operator *(float f, Vector3 v)
          VB: Public Shared Operator *(f As Single, v As Vector3) As Vector3
        parameters:
        - id: f
          type: System.Single
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Multiply(Engine.Core.Maths.Vector3,System.Single)
      commentId: M:Engine.Core.Maths.Vector3.op_Multiply(Engine.Core.Maths.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Vector3, Single)
        VB: Multiply(Vector3, Single)
      nameWithType:
        CSharp: Vector3.Multiply(Vector3, Single)
        VB: Vector3.Multiply(Vector3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Multiply(Engine.Core.Maths.Vector3, System.Single)
        VB: Engine.Core.Maths.Vector3.Multiply(Engine.Core.Maths.Vector3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4817
      syntax:
        content:
          CSharp: public static Vector3 operator *(Vector3 v, float f)
          VB: Public Shared Operator *(v As Vector3, f As Single) As Vector3
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Multiply(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.op_Multiply(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Multiply(Vector3, Vector3)
        VB: Multiply(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Multiply(Vector3, Vector3)
        VB: Vector3.Multiply(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Multiply(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Multiply(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Multiply
        path: ''
        startLine: 4821
      syntax:
        content:
          CSharp: public static float operator *(Vector3 v1, Vector3 v2)
          VB: Public Shared Operator *(v1 As Vector3, v2 As Vector3) As Single
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector3
        - id: v2
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Addition(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.op_Addition(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Addition(Vector3, Vector3)
        VB: Addition(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Addition(Vector3, Vector3)
        VB: Vector3.Addition(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Addition
        path: ''
        startLine: 4825
      syntax:
        content:
          CSharp: public static Vector3 operator +(Vector3 v1, Vector3 v2)
          VB: Public Shared Operator +(v1 As Vector3, v2 As Vector3) As Vector3
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector3
        - id: v2
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Subtraction(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.op_Subtraction(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Subtraction(Vector3, Vector3)
        VB: Subtraction(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.Subtraction(Vector3, Vector3)
        VB: Vector3.Subtraction(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Subtraction(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Subtraction(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Subtraction
        path: ''
        startLine: 4829
      syntax:
        content:
          CSharp: public static Vector3 operator -(Vector3 v1, Vector3 v2)
          VB: Public Shared Operator -(v1 As Vector3, v2 As Vector3) As Vector3
        parameters:
        - id: v1
          type: Engine.Core.Maths.Vector3
        - id: v2
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Division(Engine.Core.Maths.Vector3,System.Single)
      commentId: M:Engine.Core.Maths.Vector3.op_Division(Engine.Core.Maths.Vector3,System.Single)
      language: CSharp
      name:
        CSharp: Division(Vector3, Single)
        VB: Division(Vector3, Single)
      nameWithType:
        CSharp: Vector3.Division(Vector3, Single)
        VB: Vector3.Division(Vector3, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Division(Engine.Core.Maths.Vector3, System.Single)
        VB: Engine.Core.Maths.Vector3.Division(Engine.Core.Maths.Vector3, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Division
        path: ''
        startLine: 4833
      syntax:
        content:
          CSharp: public static Vector3 operator /(Vector3 v, float f)
          VB: Public Shared Operator /(v As Vector3, f As Single) As Vector3
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        - id: f
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.op_Division*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.op_Implicit(Engine.Core.Maths.Vector3)~Engine.Core.Maths.Vector
      commentId: M:Engine.Core.Maths.Vector3.op_Implicit(Engine.Core.Maths.Vector3)~Engine.Core.Maths.Vector
      language: CSharp
      name:
        CSharp: Implicit(Vector3 to Vector)
        VB: Widening(Vector3 to Vector)
      nameWithType:
        CSharp: Vector3.Implicit(Vector3 to Vector)
        VB: Vector3.Widening(Vector3 to Vector)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Implicit(Engine.Core.Maths.Vector3 to Engine.Core.Maths.Vector)
        VB: Engine.Core.Maths.Vector3.Widening(Engine.Core.Maths.Vector3 to Engine.Core.Maths.Vector)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: op_Implicit
        path: ''
        startLine: 4837
      syntax:
        content:
          CSharp: public static implicit operator Vector(Vector3 v)
          VB: Public Shared Widening Operator CType(v As Vector3) As Vector
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector
      overload: Engine.Core.Maths.Vector3.op_Implicit*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
      commentId: M:Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
      language: CSharp
      name:
        CSharp: ToMatrix(Vector3, Boolean)
        VB: ToMatrix(Vector3, Boolean)
      nameWithType:
        CSharp: Vector3.ToMatrix(Vector3, Boolean)
        VB: Vector3.ToMatrix(Vector3, Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3, System.Boolean)
        VB: Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix
        path: ''
        startLine: 4847
      summary: "\nTurns the vector into single-row matrix, as long as <code data-dev-comment-type=\"paramref\" class=\"paramref\">isColumn</code> is false.\nOtherwise it turns the vector into a single-column matrix\n"
      example: []
      syntax:
        content:
          CSharp: public static MatrixMxN ToMatrix(Vector3 v, bool isColumn = false)
          VB: Public Shared Function ToMatrix(v As Vector3, isColumn As Boolean = False) As MatrixMxN
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
          description: ''
        - id: isColumn
          type: System.Boolean
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Vector3.ToMatrix*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: CrossProduct(Vector3, Vector3)
        VB: CrossProduct(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.CrossProduct(Vector3, Vector3)
        VB: Vector3.CrossProduct(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CrossProduct
        path: ''
        startLine: 4851
      syntax:
        content:
          CSharp: public static Vector3 CrossProduct(Vector3 u, Vector3 v)
          VB: Public Shared Function CrossProduct(u As Vector3, v As Vector3) As Vector3
        parameters:
        - id: u
          type: Engine.Core.Maths.Vector3
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.CrossProduct*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: DotProduct(Vector3, Vector3)
        VB: DotProduct(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.DotProduct(Vector3, Vector3)
        VB: Vector3.DotProduct(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DotProduct
        path: ''
        startLine: 4855
      syntax:
        content:
          CSharp: public static float DotProduct(Vector3 u, Vector3 v)
          VB: Public Shared Function DotProduct(u As Vector3, v As Vector3) As Single
        parameters:
        - id: u
          type: Engine.Core.Maths.Vector3
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.DotProduct*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Normalize(Vector3)
        VB: Normalize(Vector3)
      nameWithType:
        CSharp: Vector3.Normalize(Vector3)
        VB: Vector3.Normalize(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalize
        path: ''
        startLine: 4859
      syntax:
        content:
          CSharp: public static Vector3 Normalize(Vector3 v)
          VB: Public Shared Function Normalize(v As Vector3) As Vector3
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Normalize*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: GetLength(Vector3)
        VB: GetLength(Vector3)
      nameWithType:
        CSharp: Vector3.GetLength(Vector3)
        VB: Vector3.GetLength(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetLength
        path: ''
        startLine: 4864
      syntax:
        content:
          CSharp: public static float GetLength(Vector3 v)
          VB: Public Shared Function GetLength(v As Vector3) As Single
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.GetLength*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: AngleBetween(Vector3, Vector3)
        VB: AngleBetween(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.AngleBetween(Vector3, Vector3)
        VB: Vector3.AngleBetween(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: AngleBetween
        path: ''
        startLine: 4868
      syntax:
        content:
          CSharp: public static float AngleBetween(Vector3 a, Vector3 b)
          VB: Public Shared Function AngleBetween(a As Vector3, b As Vector3) As Single
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector3
        - id: b
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.AngleBetween*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: OrthogonalityCheck(Vector3, Vector3)
        VB: OrthogonalityCheck(Vector3, Vector3)
      nameWithType:
        CSharp: Vector3.OrthogonalityCheck(Vector3, Vector3)
        VB: Vector3.OrthogonalityCheck(Vector3, Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3, Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: OrthogonalityCheck
        path: ''
        startLine: 4873
      syntax:
        content:
          CSharp: public static bool OrthogonalityCheck(Vector3 a, Vector3 b)
          VB: Public Shared Function OrthogonalityCheck(a As Vector3, b As Vector3) As Boolean
        parameters:
        - id: a
          type: Engine.Core.Maths.Vector3
        - id: b
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector3.OrthogonalityCheck*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Vector3.Normalize
      commentId: M:Engine.Core.Maths.Vector3.Normalize
      language: CSharp
      name:
        CSharp: Normalize()
        VB: Normalize()
      nameWithType:
        CSharp: Vector3.Normalize()
        VB: Vector3.Normalize()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Normalize()
        VB: Engine.Core.Maths.Vector3.Normalize()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Normalize
        path: ''
        startLine: 4883
      syntax:
        content:
          CSharp: public Vector3 Normalize()
          VB: Public Function Normalize As Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Normalize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.GetLength
      commentId: M:Engine.Core.Maths.Vector3.GetLength
      language: CSharp
      name:
        CSharp: GetLength()
        VB: GetLength()
      nameWithType:
        CSharp: Vector3.GetLength()
        VB: Vector3.GetLength()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.GetLength()
        VB: Engine.Core.Maths.Vector3.GetLength()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetLength
        path: ''
        startLine: 4888
      syntax:
        content:
          CSharp: public float GetLength()
          VB: Public Function GetLength As Single
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.GetLength*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: CrossProduct(Vector3)
        VB: CrossProduct(Vector3)
      nameWithType:
        CSharp: Vector3.CrossProduct(Vector3)
        VB: Vector3.CrossProduct(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: CrossProduct
        path: ''
        startLine: 4902
      syntax:
        content:
          CSharp: public Vector3 CrossProduct(Vector3 v)
          VB: Public Function CrossProduct(v As Vector3) As Vector3
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.CrossProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: DotProduct(Vector3)
        VB: DotProduct(Vector3)
      nameWithType:
        CSharp: Vector3.DotProduct(Vector3)
        VB: Vector3.DotProduct(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: DotProduct
        path: ''
        startLine: 4906
      syntax:
        content:
          CSharp: public float DotProduct(Vector3 v)
          VB: Public Function DotProduct(v As Vector3) As Single
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Single
      overload: Engine.Core.Maths.Vector3.DotProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
      commentId: M:Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
      language: CSharp
      name:
        CSharp: ScalarProduct(Single)
        VB: ScalarProduct(Single)
      nameWithType:
        CSharp: Vector3.ScalarProduct(Single)
        VB: Vector3.ScalarProduct(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
        VB: Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ScalarProduct
        path: ''
        startLine: 4910
      syntax:
        content:
          CSharp: public Vector3 ScalarProduct(float scalar)
          VB: Public Function ScalarProduct(scalar As Single) As Vector3
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.ScalarProduct*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Addition(Vector3)
        VB: Addition(Vector3)
      nameWithType:
        CSharp: Vector3.Addition(Vector3)
        VB: Vector3.Addition(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Addition
        path: ''
        startLine: 4914
      syntax:
        content:
          CSharp: public Vector3 Addition(Vector3 vector)
          VB: Public Function Addition(vector As Vector3) As Vector3
        parameters:
        - id: vector
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Addition*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Substraction(Vector3)
        VB: Substraction(Vector3)
      nameWithType:
        CSharp: Vector3.Substraction(Vector3)
        VB: Vector3.Substraction(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Substraction
        path: ''
        startLine: 4918
      syntax:
        content:
          CSharp: public Vector3 Substraction(Vector3 v)
          VB: Public Function Substraction(v As Vector3) As Vector3
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Substraction*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Division(System.Single)
      commentId: M:Engine.Core.Maths.Vector3.Division(System.Single)
      language: CSharp
      name:
        CSharp: Division(Single)
        VB: Division(Single)
      nameWithType:
        CSharp: Vector3.Division(Single)
        VB: Vector3.Division(Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Division(System.Single)
        VB: Engine.Core.Maths.Vector3.Division(System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Division
        path: ''
        startLine: 4922
      syntax:
        content:
          CSharp: public Vector3 Division(float scalar)
          VB: Public Function Division(scalar As Single) As Vector3
        parameters:
        - id: scalar
          type: System.Single
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Division*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: IsPerpendicularTo(Vector3)
        VB: IsPerpendicularTo(Vector3)
      nameWithType:
        CSharp: Vector3.IsPerpendicularTo(Vector3)
        VB: Vector3.IsPerpendicularTo(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IsPerpendicularTo
        path: ''
        startLine: 4926
      syntax:
        content:
          CSharp: public bool IsPerpendicularTo(Vector3 v)
          VB: Public Function IsPerpendicularTo(v As Vector3) As Boolean
        parameters:
        - id: v
          type: Engine.Core.Maths.Vector3
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector3.IsPerpendicularTo*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
      commentId: M:Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
      language: CSharp
      name:
        CSharp: GetNormalVector(Int32)
        VB: GetNormalVector(Int32)
      nameWithType:
        CSharp: Vector3.GetNormalVector(Int32)
        VB: Vector3.GetNormalVector(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
        VB: Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: GetNormalVector
        path: ''
        startLine: 4941
      summary: "\n<code data-dev-comment-type=\"paramref\" class=\"paramref\">zeroAt</code> ‚àà [1;3]; everything else results in a null vector.\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 GetNormalVector(int zeroAt)
          VB: Public Function GetNormalVector(zeroAt As Integer) As Vector3
        parameters:
        - id: zeroAt
          type: System.Int32
          description: ''
        return:
          type: Engine.Core.Maths.Vector3
          description: ''
      overload: Engine.Core.Maths.Vector3.GetNormalVector*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.IsZero
      commentId: M:Engine.Core.Maths.Vector3.IsZero
      language: CSharp
      name:
        CSharp: IsZero()
        VB: IsZero()
      nameWithType:
        CSharp: Vector3.IsZero()
        VB: Vector3.IsZero()
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.IsZero()
        VB: Engine.Core.Maths.Vector3.IsZero()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: IsZero
        path: ''
        startLine: 4959
      syntax:
        content:
          CSharp: public bool IsZero()
          VB: Public Function IsZero As Boolean
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Vector3.IsZero*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
      commentId: M:Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
      language: CSharp
      name:
        CSharp: ToMatrix(Boolean)
        VB: ToMatrix(Boolean)
      nameWithType:
        CSharp: Vector3.ToMatrix(Boolean)
        VB: Vector3.ToMatrix(Boolean)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
        VB: Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: ToMatrix
        path: ''
        startLine: 4963
      syntax:
        content:
          CSharp: public MatrixMxN ToMatrix(bool isColumn = false)
          VB: Public Function ToMatrix(isColumn As Boolean = False) As MatrixMxN
        parameters:
        - id: isColumn
          type: System.Boolean
        return:
          type: Engine.Core.Maths.MatrixMxN
      overload: Engine.Core.Maths.Vector3.ToMatrix*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
      commentId: M:Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
      language: CSharp
      name:
        CSharp: Project(Vector3)
        VB: Project(Vector3)
      nameWithType:
        CSharp: Vector3.Project(Vector3)
        VB: Vector3.Project(Vector3)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
        VB: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Project
        path: ''
        startLine: 4984
      syntax:
        content:
          CSharp: public Vector3 Project(Vector3 to)
          VB: Public Function Project(to As Vector3) As Vector3
        parameters:
        - id: to
          type: Engine.Core.Maths.Vector3
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Project*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
      commentId: M:Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
      language: CSharp
      name:
        CSharp: Project(Plane)
        VB: Project(Plane)
      nameWithType:
        CSharp: Vector3.Project(Plane)
        VB: Vector3.Project(Plane)
      qualifiedName:
        CSharp: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
        VB: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths
      source:
        id: Project
        path: ''
        startLine: 4989
      syntax:
        content:
          CSharp: public Vector3 Project(Plane to)
          VB: Public Function Project(to As Plane) As Vector3
        parameters:
        - id: to
          type: Engine.Core.Maths.Plane
        return:
          type: Engine.Core.Maths.Vector3
      overload: Engine.Core.Maths.Vector3.Project*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Engine.Core.Maths.Obsolete
  commentId: N:Engine.Core.Maths.Obsolete
  language: CSharp
  name:
    CSharp: Engine.Core.Maths.Obsolete
    VB: Engine.Core.Maths.Obsolete
  nameWithType:
    CSharp: Engine.Core.Maths.Obsolete
    VB: Engine.Core.Maths.Obsolete
  qualifiedName:
    CSharp: Engine.Core.Maths.Obsolete
    VB: Engine.Core.Maths.Obsolete
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.Maths.Obsolete.Gaussian
    commentId: T:Engine.Core.Maths.Obsolete.Gaussian
    language: CSharp
    name:
      CSharp: Gaussian
      VB: Gaussian
    nameWithType:
      CSharp: Gaussian
      VB: Gaussian
    qualifiedName:
      CSharp: Engine.Core.Maths.Obsolete.Gaussian
      VB: Engine.Core.Maths.Obsolete.Gaussian
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths.Obsolete
    source:
      id: Gaussian
      path: ''
      startLine: 5010
    syntax:
      content:
        CSharp: >-
          [Obsolete]

          public class Gaussian
        VB: >-
          <Obsolete>

          Public Class Gaussian
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.ObsoleteAttribute
      ctor: System.ObsoleteAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Obsolete.Gaussian.Elimination(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Gaussian.GaussianResult@)
      commentId: M:Engine.Core.Maths.Obsolete.Gaussian.Elimination(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Gaussian.GaussianResult@)
      language: CSharp
      name:
        CSharp: Elimination(Matrix, Matrix, out Gaussian.GaussianResult)
        VB: Elimination(Matrix, Matrix, ByRef Gaussian.GaussianResult)
      nameWithType:
        CSharp: Gaussian.Elimination(Matrix, Matrix, out Gaussian.GaussianResult)
        VB: Gaussian.Elimination(Matrix, Matrix, ByRef Gaussian.GaussianResult)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Gaussian.Elimination(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix, out Engine.Core.Maths.Obsolete.Gaussian.GaussianResult)
        VB: Engine.Core.Maths.Obsolete.Gaussian.Elimination(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix, ByRef Engine.Core.Maths.Obsolete.Gaussian.GaussianResult)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: Elimination
        path: ''
        startLine: 5021
      syntax:
        content:
          CSharp: public static bool Elimination(Matrix matrix, Matrix augmentation, out Gaussian.GaussianResult result)
          VB: Public Shared Function Elimination(matrix As Matrix, augmentation As Matrix, ByRef result As Gaussian.GaussianResult) As Boolean
        parameters:
        - id: matrix
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: augmentation
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: result
          type: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
        return:
          type: System.Boolean
      overload: Engine.Core.Maths.Obsolete.Gaussian.Elimination*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
    commentId: T:Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
    language: CSharp
    name:
      CSharp: Gaussian.GaussianResult
      VB: Gaussian.GaussianResult
    nameWithType:
      CSharp: Gaussian.GaussianResult
      VB: Gaussian.GaussianResult
    qualifiedName:
      CSharp: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
      VB: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths.Obsolete
    source:
      id: GaussianResult
      path: ''
      startLine: 5013
    syntax:
      content:
        CSharp: >-
          [Obsolete]

          public class GaussianResult
        VB: >-
          <Obsolete>

          Public Class GaussianResult
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.ObsoleteAttribute
      ctor: System.ObsoleteAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.results
      commentId: F:Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.results
      language: CSharp
      name:
        CSharp: results
        VB: results
      nameWithType:
        CSharp: Gaussian.GaussianResult.results
        VB: Gaussian.GaussianResult.results
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.results
        VB: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.results
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: results
        path: ''
        startLine: 5016
      syntax:
        content:
          CSharp: public List<float> results
          VB: Public results As List(Of Single)
        return:
          type: System.Collections.Generic.List{System.Single}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.straight
      commentId: F:Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.straight
      language: CSharp
      name:
        CSharp: straight
        VB: straight
      nameWithType:
        CSharp: Gaussian.GaussianResult.straight
        VB: Gaussian.GaussianResult.straight
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.straight
        VB: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.straight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: straight
        path: ''
        startLine: 5017
      syntax:
        content:
          CSharp: public Straight straight
          VB: Public straight As Straight
        return:
          type: Engine.Core.Maths.Straight
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.plane
      commentId: F:Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.plane
      language: CSharp
      name:
        CSharp: plane
        VB: plane
      nameWithType:
        CSharp: Gaussian.GaussianResult.plane
        VB: Gaussian.GaussianResult.plane
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.plane
        VB: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult.plane
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: plane
        path: ''
        startLine: 5018
      syntax:
        content:
          CSharp: public Plane plane
          VB: Public plane As Plane
        return:
          type: Engine.Core.Maths.Plane
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Maths.Obsolete.Matrix
    commentId: T:Engine.Core.Maths.Obsolete.Matrix
    language: CSharp
    name:
      CSharp: Matrix
      VB: Matrix
    nameWithType:
      CSharp: Matrix
      VB: Matrix
    qualifiedName:
      CSharp: Engine.Core.Maths.Obsolete.Matrix
      VB: Engine.Core.Maths.Obsolete.Matrix
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Maths.Obsolete
    source:
      id: Matrix
      path: ''
      startLine: 5143
    syntax:
      content:
        CSharp: >-
          [Obsolete("Deprecated")]

          public class Matrix
        VB: >-
          <Obsolete("Deprecated")>

          Public Class Matrix
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.ObsoleteAttribute
      ctor: System.ObsoleteAttribute.#ctor(System.String)
      arguments:
      - type: System.String
        value: Deprecated
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Maths.Obsolete.Matrix.Values
      commentId: P:Engine.Core.Maths.Obsolete.Matrix.Values
      language: CSharp
      name:
        CSharp: Values
        VB: Values
      nameWithType:
        CSharp: Matrix.Values
        VB: Matrix.Values
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Values
        VB: Engine.Core.Maths.Obsolete.Matrix.Values
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: Values
        path: ''
        startLine: 5146
      syntax:
        content:
          CSharp: public List<List<float>> Values { get; set; }
          VB: Public Property Values As List(Of List(Of Single))
        parameters: []
        return:
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.Single}}
      overload: Engine.Core.Maths.Obsolete.Matrix.Values*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.RowCount
      commentId: P:Engine.Core.Maths.Obsolete.Matrix.RowCount
      language: CSharp
      name:
        CSharp: RowCount
        VB: RowCount
      nameWithType:
        CSharp: Matrix.RowCount
        VB: Matrix.RowCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.RowCount
        VB: Engine.Core.Maths.Obsolete.Matrix.RowCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: RowCount
        path: ''
        startLine: 5147
      syntax:
        content:
          CSharp: public int RowCount { get; }
          VB: Public ReadOnly Property RowCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Obsolete.Matrix.RowCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Obsolete.Matrix.ColumnCount
      commentId: P:Engine.Core.Maths.Obsolete.Matrix.ColumnCount
      language: CSharp
      name:
        CSharp: ColumnCount
        VB: ColumnCount
      nameWithType:
        CSharp: Matrix.ColumnCount
        VB: Matrix.ColumnCount
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.ColumnCount
        VB: Engine.Core.Maths.Obsolete.Matrix.ColumnCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: ColumnCount
        path: ''
        startLine: 5148
      syntax:
        content:
          CSharp: public int ColumnCount { get; }
          VB: Public ReadOnly Property ColumnCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.Maths.Obsolete.Matrix.ColumnCount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Maths.Obsolete.Matrix.Item(System.Int32,System.Int32)
      commentId: P:Engine.Core.Maths.Obsolete.Matrix.Item(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Item[Int32, Int32]
        VB: Item(Int32, Int32)
      nameWithType:
        CSharp: Matrix.Item[Int32, Int32]
        VB: Matrix.Item(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Item[System.Int32, System.Int32]
        VB: Engine.Core.Maths.Obsolete.Matrix.Item(System.Int32, System.Int32)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: this[]
        path: ''
        startLine: 5150
      syntax:
        content:
          CSharp: public float this[int row, int column] { get; set; }
          VB: Public Property Item(row As Integer, column As Integer) As Single
        parameters:
        - id: row
          type: System.Int32
        - id: column
          type: System.Int32
        return:
          type: System.Single
      overload: Engine.Core.Maths.Obsolete.Matrix.Item*
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.#ctor(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.#ctor(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: Matrix(Int32, Int32)
        VB: Matrix(Int32, Int32)
      nameWithType:
        CSharp: Matrix.Matrix(Int32, Int32)
        VB: Matrix.Matrix(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Matrix(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Obsolete.Matrix.Matrix(System.Int32, System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: .ctor
        path: ''
        startLine: 5162
      syntax:
        content:
          CSharp: public Matrix(int rowCount, int columnCount)
          VB: Public Sub New(rowCount As Integer, columnCount As Integer)
        parameters:
        - id: rowCount
          type: System.Int32
        - id: columnCount
          type: System.Int32
      overload: Engine.Core.Maths.Obsolete.Matrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{System.Single}})
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.#ctor(System.Collections.Generic.List{System.Collections.Generic.List{System.Single}})
      language: CSharp
      name:
        CSharp: Matrix(List<List<Single>>)
        VB: Matrix(List(Of List(Of Single)))
      nameWithType:
        CSharp: Matrix.Matrix(List<List<Single>>)
        VB: Matrix.Matrix(List(Of List(Of Single)))
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Matrix(System.Collections.Generic.List<System.Collections.Generic.List<System.Single>>)
        VB: Engine.Core.Maths.Obsolete.Matrix.Matrix(System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Single)))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: .ctor
        path: ''
        startLine: 5175
      syntax:
        content:
          CSharp: public Matrix(List<List<float>> values)
          VB: Public Sub New(values As List(Of List(Of Single)))
        parameters:
        - id: values
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.Single}}
      overload: Engine.Core.Maths.Obsolete.Matrix.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.op_Multiply(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.op_Multiply(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      language: CSharp
      name:
        CSharp: Multiply(Matrix, Matrix)
        VB: Multiply(Matrix, Matrix)
      nameWithType:
        CSharp: Matrix.Multiply(Matrix, Matrix)
        VB: Matrix.Multiply(Matrix, Matrix)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Multiply(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
        VB: Engine.Core.Maths.Obsolete.Matrix.Multiply(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: op_Multiply
        path: ''
        startLine: 5180
      syntax:
        content:
          CSharp: public static Matrix operator *(Matrix a, Matrix b)
          VB: Public Shared Operator *(a As Matrix, b As Matrix) As Matrix
        parameters:
        - id: a
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: b
          type: Engine.Core.Maths.Obsolete.Matrix
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.op_Multiply(System.Single,Engine.Core.Maths.Obsolete.Matrix)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.op_Multiply(System.Single,Engine.Core.Maths.Obsolete.Matrix)
      language: CSharp
      name:
        CSharp: Multiply(Single, Matrix)
        VB: Multiply(Single, Matrix)
      nameWithType:
        CSharp: Matrix.Multiply(Single, Matrix)
        VB: Matrix.Multiply(Single, Matrix)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Multiply(System.Single, Engine.Core.Maths.Obsolete.Matrix)
        VB: Engine.Core.Maths.Obsolete.Matrix.Multiply(System.Single, Engine.Core.Maths.Obsolete.Matrix)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: op_Multiply
        path: ''
        startLine: 5201
      syntax:
        content:
          CSharp: public static Matrix operator *(float a, Matrix b)
          VB: Public Shared Operator *(a As Single, b As Matrix) As Matrix
        parameters:
        - id: a
          type: System.Single
        - id: b
          type: Engine.Core.Maths.Obsolete.Matrix
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.op_Multiply(Engine.Core.Maths.Obsolete.Matrix,System.Single)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.op_Multiply(Engine.Core.Maths.Obsolete.Matrix,System.Single)
      language: CSharp
      name:
        CSharp: Multiply(Matrix, Single)
        VB: Multiply(Matrix, Single)
      nameWithType:
        CSharp: Matrix.Multiply(Matrix, Single)
        VB: Matrix.Multiply(Matrix, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Multiply(Engine.Core.Maths.Obsolete.Matrix, System.Single)
        VB: Engine.Core.Maths.Obsolete.Matrix.Multiply(Engine.Core.Maths.Obsolete.Matrix, System.Single)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: op_Multiply
        path: ''
        startLine: 5214
      syntax:
        content:
          CSharp: public static Matrix operator *(Matrix b, float a)
          VB: Public Shared Operator *(b As Matrix, a As Single) As Matrix
        parameters:
        - id: b
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: a
          type: System.Single
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.op_Multiply*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.op_Addition(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.op_Addition(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      language: CSharp
      name:
        CSharp: Addition(Matrix, Matrix)
        VB: Addition(Matrix, Matrix)
      nameWithType:
        CSharp: Matrix.Addition(Matrix, Matrix)
        VB: Matrix.Addition(Matrix, Matrix)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Addition(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
        VB: Engine.Core.Maths.Obsolete.Matrix.Addition(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: op_Addition
        path: ''
        startLine: 5227
      syntax:
        content:
          CSharp: public static Matrix operator +(Matrix a, Matrix b)
          VB: Public Shared Operator +(a As Matrix, b As Matrix) As Matrix
        parameters:
        - id: a
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: b
          type: Engine.Core.Maths.Obsolete.Matrix
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.op_Addition*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.op_Subtraction(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.op_Subtraction(Engine.Core.Maths.Obsolete.Matrix,Engine.Core.Maths.Obsolete.Matrix)
      language: CSharp
      name:
        CSharp: Subtraction(Matrix, Matrix)
        VB: Subtraction(Matrix, Matrix)
      nameWithType:
        CSharp: Matrix.Subtraction(Matrix, Matrix)
        VB: Matrix.Subtraction(Matrix, Matrix)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.Subtraction(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
        VB: Engine.Core.Maths.Obsolete.Matrix.Subtraction(Engine.Core.Maths.Obsolete.Matrix, Engine.Core.Maths.Obsolete.Matrix)
      type: Operator
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: op_Subtraction
        path: ''
        startLine: 5249
      syntax:
        content:
          CSharp: public static Matrix operator -(Matrix a, Matrix b)
          VB: Public Shared Operator -(a As Matrix, b As Matrix) As Matrix
        parameters:
        - id: a
          type: Engine.Core.Maths.Obsolete.Matrix
        - id: b
          type: Engine.Core.Maths.Obsolete.Matrix
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.op_Subtraction*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.ConvertTo(System.Collections.Generic.List{System.Collections.Generic.List{System.Single}})
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.ConvertTo(System.Collections.Generic.List{System.Collections.Generic.List{System.Single}})
      language: CSharp
      name:
        CSharp: ConvertTo(List<List<Single>>)
        VB: ConvertTo(List(Of List(Of Single)))
      nameWithType:
        CSharp: Matrix.ConvertTo(List<List<Single>>)
        VB: Matrix.ConvertTo(List(Of List(Of Single)))
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.ConvertTo(System.Collections.Generic.List<System.Collections.Generic.List<System.Single>>)
        VB: Engine.Core.Maths.Obsolete.Matrix.ConvertTo(System.Collections.Generic.List(Of System.Collections.Generic.List(Of System.Single)))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: ConvertTo
        path: ''
        startLine: 5269
      syntax:
        content:
          CSharp: public static Matrix ConvertTo(List<List<float>> matrix)
          VB: Public Shared Function ConvertTo(matrix As List(Of List(Of Single))) As Matrix
        parameters:
        - id: matrix
          type: System.Collections.Generic.List{System.Collections.Generic.List{System.Single}}
        return:
          type: Engine.Core.Maths.Obsolete.Matrix
      overload: Engine.Core.Maths.Obsolete.Matrix.ConvertTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.Maths.Obsolete.Matrix.GetRow(System.Int32)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.GetRow(System.Int32)
      language: CSharp
      name:
        CSharp: GetRow(Int32)
        VB: GetRow(Int32)
      nameWithType:
        CSharp: Matrix.GetRow(Int32)
        VB: Matrix.GetRow(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.GetRow(System.Int32)
        VB: Engine.Core.Maths.Obsolete.Matrix.GetRow(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: GetRow
        path: ''
        startLine: 5274
      syntax:
        content:
          CSharp: public List<float> GetRow(int index)
          VB: Public Function GetRow(index As Integer) As List(Of Single)
        parameters:
        - id: index
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.Single}
      overload: Engine.Core.Maths.Obsolete.Matrix.GetRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.GetColumn(System.Int32)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.GetColumn(System.Int32)
      language: CSharp
      name:
        CSharp: GetColumn(Int32)
        VB: GetColumn(Int32)
      nameWithType:
        CSharp: Matrix.GetColumn(Int32)
        VB: Matrix.GetColumn(Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.GetColumn(System.Int32)
        VB: Engine.Core.Maths.Obsolete.Matrix.GetColumn(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: GetColumn
        path: ''
        startLine: 5280
      syntax:
        content:
          CSharp: public List<float> GetColumn(int index)
          VB: Public Function GetColumn(index As Integer) As List(Of Single)
        parameters:
        - id: index
          type: System.Int32
        return:
          type: System.Collections.Generic.List{System.Single}
      overload: Engine.Core.Maths.Obsolete.Matrix.GetColumn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.ScaleRow(System.Int32,System.Single)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.ScaleRow(System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: ScaleRow(Int32, Single)
        VB: ScaleRow(Int32, Single)
      nameWithType:
        CSharp: Matrix.ScaleRow(Int32, Single)
        VB: Matrix.ScaleRow(Int32, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.ScaleRow(System.Int32, System.Single)
        VB: Engine.Core.Maths.Obsolete.Matrix.ScaleRow(System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: ScaleRow
        path: ''
        startLine: 5291
      syntax:
        content:
          CSharp: public void ScaleRow(int index, float scale)
          VB: Public Sub ScaleRow(index As Integer, scale As Single)
        parameters:
        - id: index
          type: System.Int32
        - id: scale
          type: System.Single
      overload: Engine.Core.Maths.Obsolete.Matrix.ScaleRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.SwapRows(System.Int32,System.Int32)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.SwapRows(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: SwapRows(Int32, Int32)
        VB: SwapRows(Int32, Int32)
      nameWithType:
        CSharp: Matrix.SwapRows(Int32, Int32)
        VB: Matrix.SwapRows(Int32, Int32)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.SwapRows(System.Int32, System.Int32)
        VB: Engine.Core.Maths.Obsolete.Matrix.SwapRows(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: SwapRows
        path: ''
        startLine: 5299
      syntax:
        content:
          CSharp: public void SwapRows(int from, int to)
          VB: Public Sub SwapRows(from As Integer, to As Integer)
        parameters:
        - id: from
          type: System.Int32
        - id: to
          type: System.Int32
      overload: Engine.Core.Maths.Obsolete.Matrix.SwapRows*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Collections.Generic.List{System.Single})
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Collections.Generic.List{System.Single})
      language: CSharp
      name:
        CSharp: AddRow(List<Single>)
        VB: AddRow(List(Of Single))
      nameWithType:
        CSharp: Matrix.AddRow(List<Single>)
        VB: Matrix.AddRow(List(Of Single))
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Collections.Generic.List<System.Single>)
        VB: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Collections.Generic.List(Of System.Single))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: AddRow
        path: ''
        startLine: 5306
      syntax:
        content:
          CSharp: public void AddRow(List<float> row)
          VB: Public Sub AddRow(row As List(Of Single))
        parameters:
        - id: row
          type: System.Collections.Generic.List{System.Single}
      overload: Engine.Core.Maths.Obsolete.Matrix.AddRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Int32,System.Int32,System.Single)
      commentId: M:Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Int32,System.Int32,System.Single)
      language: CSharp
      name:
        CSharp: AddRow(Int32, Int32, Single)
        VB: AddRow(Int32, Int32, Single)
      nameWithType:
        CSharp: Matrix.AddRow(Int32, Int32, Single)
        VB: Matrix.AddRow(Int32, Int32, Single)
      qualifiedName:
        CSharp: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Int32, System.Int32, System.Single)
        VB: Engine.Core.Maths.Obsolete.Matrix.AddRow(System.Int32, System.Int32, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Maths.Obsolete
      source:
        id: AddRow
        path: ''
        startLine: 5311
      syntax:
        content:
          CSharp: public void AddRow(int targetRow, int sourceRow, float factor)
          VB: Public Sub AddRow(targetRow As Integer, sourceRow As Integer, factor As Single)
        parameters:
        - id: targetRow
          type: System.Int32
        - id: sourceRow
          type: System.Int32
        - id: factor
          type: System.Single
      overload: Engine.Core.Maths.Obsolete.Matrix.AddRow*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Engine.Core.Physics.Optics
  commentId: N:Engine.Core.Physics.Optics
  language: CSharp
  name:
    CSharp: Engine.Core.Physics.Optics
    VB: Engine.Core.Physics.Optics
  nameWithType:
    CSharp: Engine.Core.Physics.Optics
    VB: Engine.Core.Physics.Optics
  qualifiedName:
    CSharp: Engine.Core.Physics.Optics
    VB: Engine.Core.Physics.Optics
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.Physics.Optics.LensType
    commentId: T:Engine.Core.Physics.Optics.LensType
    language: CSharp
    name:
      CSharp: LensType
      VB: LensType
    nameWithType:
      CSharp: LensType
      VB: LensType
    qualifiedName:
      CSharp: Engine.Core.Physics.Optics.LensType
      VB: Engine.Core.Physics.Optics.LensType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Physics.Optics
    source:
      id: LensType
      path: ''
      startLine: 5329
    syntax:
      content:
        CSharp: public enum LensType
        VB: Public Enum LensType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Core.Physics.Optics.LensType.None
      commentId: F:Engine.Core.Physics.Optics.LensType.None
      language: CSharp
      name:
        CSharp: None
        VB: None
      nameWithType:
        CSharp: LensType.None
        VB: LensType.None
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.LensType.None
        VB: Engine.Core.Physics.Optics.LensType.None
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: None
        path: ''
        startLine: 5331
      syntax:
        content:
          CSharp: None = 0
          VB: None = 0
        return:
          type: Engine.Core.Physics.Optics.LensType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Physics.Optics.LensType.TwoSided
      commentId: F:Engine.Core.Physics.Optics.LensType.TwoSided
      language: CSharp
      name:
        CSharp: TwoSided
        VB: TwoSided
      nameWithType:
        CSharp: LensType.TwoSided
        VB: LensType.TwoSided
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.LensType.TwoSided
        VB: Engine.Core.Physics.Optics.LensType.TwoSided
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: TwoSided
        path: ''
        startLine: 5332
      syntax:
        content:
          CSharp: TwoSided = 1
          VB: TwoSided = 1
        return:
          type: Engine.Core.Physics.Optics.LensType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Physics.Optics.LensType.FrontSided
      commentId: F:Engine.Core.Physics.Optics.LensType.FrontSided
      language: CSharp
      name:
        CSharp: FrontSided
        VB: FrontSided
      nameWithType:
        CSharp: LensType.FrontSided
        VB: LensType.FrontSided
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.LensType.FrontSided
        VB: Engine.Core.Physics.Optics.LensType.FrontSided
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: FrontSided
        path: ''
        startLine: 5333
      syntax:
        content:
          CSharp: FrontSided = 2
          VB: FrontSided = 2
        return:
          type: Engine.Core.Physics.Optics.LensType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Physics.Optics.LensType.BackSided
      commentId: F:Engine.Core.Physics.Optics.LensType.BackSided
      language: CSharp
      name:
        CSharp: BackSided
        VB: BackSided
      nameWithType:
        CSharp: LensType.BackSided
        VB: LensType.BackSided
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.LensType.BackSided
        VB: Engine.Core.Physics.Optics.LensType.BackSided
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: BackSided
        path: ''
        startLine: 5334
      syntax:
        content:
          CSharp: BackSided = 3
          VB: BackSided = 3
        return:
          type: Engine.Core.Physics.Optics.LensType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Core.Physics.Optics.LensType.Prismatic
      commentId: F:Engine.Core.Physics.Optics.LensType.Prismatic
      language: CSharp
      name:
        CSharp: Prismatic
        VB: Prismatic
      nameWithType:
        CSharp: LensType.Prismatic
        VB: LensType.Prismatic
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.LensType.Prismatic
        VB: Engine.Core.Physics.Optics.LensType.Prismatic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: Prismatic
        path: ''
        startLine: 5335
      syntax:
        content:
          CSharp: Prismatic = 4
          VB: Prismatic = 4
        return:
          type: Engine.Core.Physics.Optics.LensType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Core.Physics.Optics.Lens
    commentId: T:Engine.Core.Physics.Optics.Lens
    language: CSharp
    name:
      CSharp: Lens
      VB: Lens
    nameWithType:
      CSharp: Lens
      VB: Lens
    qualifiedName:
      CSharp: Engine.Core.Physics.Optics.Lens
      VB: Engine.Core.Physics.Optics.Lens
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Physics.Optics
    source:
      id: Lens
      path: ''
      startLine: 5349
    syntax:
      content:
        CSharp: public class Lens
        VB: Public Class Lens
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.Physics.Optics.Lens.Type
      commentId: P:Engine.Core.Physics.Optics.Lens.Type
      language: CSharp
      name:
        CSharp: Type
        VB: Type
      nameWithType:
        CSharp: Lens.Type
        VB: Lens.Type
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.Type
        VB: Engine.Core.Physics.Optics.Lens.Type
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: Type
        path: ''
        startLine: 5361
      syntax:
        content:
          CSharp: public LensType Type { get; }
          VB: Public ReadOnly Property Type As LensType
        parameters: []
        return:
          type: Engine.Core.Physics.Optics.LensType
      overload: Engine.Core.Physics.Optics.Lens.Type*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Physics.Optics.Lens.FovX
      commentId: P:Engine.Core.Physics.Optics.Lens.FovX
      language: CSharp
      name:
        CSharp: FovX
        VB: FovX
      nameWithType:
        CSharp: Lens.FovX
        VB: Lens.FovX
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.FovX
        VB: Engine.Core.Physics.Optics.Lens.FovX
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: FovX
        path: ''
        startLine: 5362
      syntax:
        content:
          CSharp: public float FovX { get; }
          VB: Public ReadOnly Property FovX As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Physics.Optics.Lens.FovX*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Physics.Optics.Lens.FovY
      commentId: P:Engine.Core.Physics.Optics.Lens.FovY
      language: CSharp
      name:
        CSharp: FovY
        VB: FovY
      nameWithType:
        CSharp: Lens.FovY
        VB: Lens.FovY
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.FovY
        VB: Engine.Core.Physics.Optics.Lens.FovY
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: FovY
        path: ''
        startLine: 5363
      syntax:
        content:
          CSharp: public float FovY { get; }
          VB: Public ReadOnly Property FovY As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Physics.Optics.Lens.FovY*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Physics.Optics.Lens.FovXRad
      commentId: P:Engine.Core.Physics.Optics.Lens.FovXRad
      language: CSharp
      name:
        CSharp: FovXRad
        VB: FovXRad
      nameWithType:
        CSharp: Lens.FovXRad
        VB: Lens.FovXRad
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.FovXRad
        VB: Engine.Core.Physics.Optics.Lens.FovXRad
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: FovXRad
        path: ''
        startLine: 5364
      syntax:
        content:
          CSharp: public float FovXRad { get; }
          VB: Public ReadOnly Property FovXRad As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Physics.Optics.Lens.FovXRad*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Physics.Optics.Lens.FovYRad
      commentId: P:Engine.Core.Physics.Optics.Lens.FovYRad
      language: CSharp
      name:
        CSharp: FovYRad
        VB: FovYRad
      nameWithType:
        CSharp: Lens.FovYRad
        VB: Lens.FovYRad
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.FovYRad
        VB: Engine.Core.Physics.Optics.Lens.FovYRad
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: FovYRad
        path: ''
        startLine: 5365
      syntax:
        content:
          CSharp: public float FovYRad { get; }
          VB: Public ReadOnly Property FovYRad As Single
        parameters: []
        return:
          type: System.Single
      overload: Engine.Core.Physics.Optics.Lens.FovYRad*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.Physics.Optics.Lens.#ctor
      commentId: M:Engine.Core.Physics.Optics.Lens.#ctor
      language: CSharp
      name:
        CSharp: Lens()
        VB: Lens()
      nameWithType:
        CSharp: Lens.Lens()
        VB: Lens.Lens()
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.Lens()
        VB: Engine.Core.Physics.Optics.Lens.Lens()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: .ctor
        path: ''
        startLine: 5367
      syntax:
        content:
          CSharp: public Lens()
          VB: Public Sub New
      overload: Engine.Core.Physics.Optics.Lens.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single,System.Single,Camera,System.Single@)
      commentId: M:Engine.Core.Physics.Optics.Lens.CreateRay(System.Single,System.Single,Camera,System.Single@)
      language: CSharp
      name:
        CSharp: CreateRay(Single, Single, Camera, out Single)
        VB: CreateRay(Single, Single, Camera, ByRef Single)
      nameWithType:
        CSharp: Lens.CreateRay(Single, Single, Camera, out Single)
        VB: Lens.CreateRay(Single, Single, Camera, ByRef Single)
      qualifiedName:
        CSharp: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single, System.Single, Camera, out System.Single)
        VB: Engine.Core.Physics.Optics.Lens.CreateRay(System.Single, System.Single, Camera, ByRef System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.Physics.Optics
      source:
        id: CreateRay
        path: ''
        startLine: 5384
      summary: "\nCreates the ray from the image plane to the near plane, and outputs a float &quot;r&quot; defined for when the ray hits the nearplane.\n"
      example: []
      syntax:
        content:
          CSharp: public Straight CreateRay(float s, float t, Camera cam, out float r)
          VB: Public Function CreateRay(s As Single, t As Single, cam As Camera, ByRef r As Single) As Straight
        parameters:
        - id: s
          type: System.Single
          description: ''
        - id: t
          type: System.Single
          description: ''
        - id: cam
          type: Camera
          description: ''
        - id: r
          type: System.Single
          description: ''
        return:
          type: Straight
          description: ''
      overload: Engine.Core.Physics.Optics.Lens.CreateRay*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.Physics.Optics.LightRay
    commentId: T:Engine.Core.Physics.Optics.LightRay
    language: CSharp
    name:
      CSharp: LightRay
      VB: LightRay
    nameWithType:
      CSharp: LightRay
      VB: LightRay
    qualifiedName:
      CSharp: Engine.Core.Physics.Optics.LightRay
      VB: Engine.Core.Physics.Optics.LightRay
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Physics.Optics
    source:
      id: LightRay
      path: ''
      startLine: 5428
    syntax:
      content:
        CSharp: public class LightRay
        VB: Public Class LightRay
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: Engine.Core.Physics.Optics.LightSource
    commentId: T:Engine.Core.Physics.Optics.LightSource
    language: CSharp
    name:
      CSharp: LightSource
      VB: LightSource
    nameWithType:
      CSharp: LightSource
      VB: LightSource
    qualifiedName:
      CSharp: Engine.Core.Physics.Optics.LightSource
      VB: Engine.Core.Physics.Optics.LightSource
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.Physics.Optics
    source:
      id: LightSource
      path: ''
      startLine: 5442
    syntax:
      content:
        CSharp: public class LightSource
        VB: Public Class LightSource
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: Engine.Core.SceneManagement
  commentId: N:Engine.Core.SceneManagement
  language: CSharp
  name:
    CSharp: Engine.Core.SceneManagement
    VB: Engine.Core.SceneManagement
  nameWithType:
    CSharp: Engine.Core.SceneManagement
    VB: Engine.Core.SceneManagement
  qualifiedName:
    CSharp: Engine.Core.SceneManagement
    VB: Engine.Core.SceneManagement
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Core.SceneManagement.Scene
    commentId: T:Engine.Core.SceneManagement.Scene
    language: CSharp
    name:
      CSharp: Scene
      VB: Scene
    nameWithType:
      CSharp: Scene
      VB: Scene
    qualifiedName:
      CSharp: Engine.Core.SceneManagement.Scene
      VB: Engine.Core.SceneManagement.Scene
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.SceneManagement
    source:
      id: Scene
      path: ''
      startLine: 5456
    syntax:
      content:
        CSharp: public class Scene
        VB: Public Class Scene
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.SceneManagement.Scene.Name
      commentId: F:Engine.Core.SceneManagement.Scene.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Scene.Name
        VB: Scene.Name
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.Scene.Name
        VB: Engine.Core.SceneManagement.Scene.Name
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: Name
        path: ''
        startLine: 5458
      syntax:
        content:
          CSharp: public string Name
          VB: Public Name As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.SceneManagement.Scene.SceneId
      commentId: P:Engine.Core.SceneManagement.Scene.SceneId
      language: CSharp
      name:
        CSharp: SceneId
        VB: SceneId
      nameWithType:
        CSharp: Scene.SceneId
        VB: Scene.SceneId
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.Scene.SceneId
        VB: Engine.Core.SceneManagement.Scene.SceneId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: SceneId
        path: ''
        startLine: 5460
      syntax:
        content:
          CSharp: public int SceneId { get; }
          VB: Public ReadOnly Property SceneId As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Core.SceneManagement.Scene.SceneId*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.SceneManagement.Scene.#ctor(System.Int32)
      commentId: M:Engine.Core.SceneManagement.Scene.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Scene(Int32)
        VB: Scene(Int32)
      nameWithType:
        CSharp: Scene.Scene(Int32)
        VB: Scene.Scene(Int32)
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.Scene.Scene(System.Int32)
        VB: Engine.Core.SceneManagement.Scene.Scene(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: .ctor
        path: ''
        startLine: 5462
      syntax:
        content:
          CSharp: public Scene(int sceneId)
          VB: Public Sub New(sceneId As Integer)
        parameters:
        - id: sceneId
          type: System.Int32
      overload: Engine.Core.SceneManagement.Scene.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.SceneManagement.Scene3D
    commentId: T:Engine.Core.SceneManagement.Scene3D
    language: CSharp
    name:
      CSharp: Scene3D
      VB: Scene3D
    nameWithType:
      CSharp: Scene3D
      VB: Scene3D
    qualifiedName:
      CSharp: Engine.Core.SceneManagement.Scene3D
      VB: Engine.Core.SceneManagement.Scene3D
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.SceneManagement
    source:
      id: Scene3D
      path: ''
      startLine: 5485
    syntax:
      content:
        CSharp: 'public class Scene3D : Scene'
        VB: >-
          Public Class Scene3D

              Inherits Scene
    inheritance:
    - System.Object
    - Engine.Core.SceneManagement.Scene
    inheritedMembers:
    - Engine.Core.SceneManagement.Scene.Name
    - Engine.Core.SceneManagement.Scene.SceneId
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
      commentId: P:Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
      language: CSharp
      name:
        CSharp: GlobalCoordinateSystem
        VB: GlobalCoordinateSystem
      nameWithType:
        CSharp: Scene3D.GlobalCoordinateSystem
        VB: Scene3D.GlobalCoordinateSystem
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
        VB: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: GlobalCoordinateSystem
        path: ''
        startLine: 5488
      syntax:
        content:
          CSharp: public GCS3 GlobalCoordinateSystem { get; }
          VB: Public ReadOnly Property GlobalCoordinateSystem As GCS3
        parameters: []
        return:
          type: GCS3
      overload: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Engine.Core.SceneManagement.Scene3D.#ctor(System.Int32)
      commentId: M:Engine.Core.SceneManagement.Scene3D.#ctor(System.Int32)
      language: CSharp
      name:
        CSharp: Scene3D(Int32)
        VB: Scene3D(Int32)
      nameWithType:
        CSharp: Scene3D.Scene3D(Int32)
        VB: Scene3D.Scene3D(Int32)
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.Scene3D.Scene3D(System.Int32)
        VB: Engine.Core.SceneManagement.Scene3D.Scene3D(System.Int32)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: .ctor
        path: ''
        startLine: 5490
      syntax:
        content:
          CSharp: public Scene3D(int sceneId)
          VB: Public Sub New(sceneId As Integer)
        parameters:
        - id: sceneId
          type: System.Int32
      overload: Engine.Core.SceneManagement.Scene3D.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Core.SceneManagement.SceneManager
    commentId: T:Engine.Core.SceneManagement.SceneManager
    language: CSharp
    name:
      CSharp: SceneManager
      VB: SceneManager
    nameWithType:
      CSharp: SceneManager
      VB: SceneManager
    qualifiedName:
      CSharp: Engine.Core.SceneManagement.SceneManager
      VB: Engine.Core.SceneManagement.SceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Core.SceneManagement
    source:
      id: SceneManager
      path: ''
      startLine: 5506
    syntax:
      content:
        CSharp: public class SceneManager
        VB: Public Class SceneManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Core.SceneManagement.SceneManager.Instance
      commentId: F:Engine.Core.SceneManagement.SceneManager.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: SceneManager.Instance
        VB: SceneManager.Instance
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.SceneManager.Instance
        VB: Engine.Core.SceneManagement.SceneManager.Instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: Instance
        path: ''
        startLine: 5508
      syntax:
        content:
          CSharp: public static SceneManager Instance
          VB: Public Shared Instance As SceneManager
        return:
          type: Engine.Core.SceneManagement.SceneManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Core.SceneManagement.SceneManager.ActiveScene
      commentId: F:Engine.Core.SceneManagement.SceneManager.ActiveScene
      language: CSharp
      name:
        CSharp: ActiveScene
        VB: ActiveScene
      nameWithType:
        CSharp: SceneManager.ActiveScene
        VB: SceneManager.ActiveScene
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.SceneManager.ActiveScene
        VB: Engine.Core.SceneManagement.SceneManager.ActiveScene
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: ActiveScene
        path: ''
        startLine: 5510
      syntax:
        content:
          CSharp: public Scene ActiveScene
          VB: Public ActiveScene As Scene
        return:
          type: Engine.Core.SceneManagement.Scene
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.SceneManagement.SceneManager.#ctor
      commentId: M:Engine.Core.SceneManagement.SceneManager.#ctor
      language: CSharp
      name:
        CSharp: SceneManager()
        VB: SceneManager()
      nameWithType:
        CSharp: SceneManager.SceneManager()
        VB: SceneManager.SceneManager()
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.SceneManager.SceneManager()
        VB: Engine.Core.SceneManagement.SceneManager.SceneManager()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: .ctor
        path: ''
        startLine: 5512
      syntax:
        content:
          CSharp: public SceneManager()
          VB: Public Sub New
      overload: Engine.Core.SceneManagement.SceneManager.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
      commentId: M:Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
      language: CSharp
      name:
        CSharp: AddScene(Scene)
        VB: AddScene(Scene)
      nameWithType:
        CSharp: SceneManager.AddScene(Scene)
        VB: SceneManager.AddScene(Scene)
      qualifiedName:
        CSharp: Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
        VB: Engine.Core.SceneManagement.SceneManager.AddScene(Engine.Core.SceneManagement.Scene)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Core.SceneManagement
      source:
        id: AddScene
        path: ''
        startLine: 5518
      syntax:
        content:
          CSharp: public void AddScene(Scene scene)
          VB: Public Sub AddScene(scene As Scene)
        parameters:
        - id: scene
          type: Engine.Core.SceneManagement.Scene
      overload: Engine.Core.SceneManagement.SceneManager.AddScene*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: Engine.Rendering
  commentId: N:Engine.Rendering
  language: CSharp
  name:
    CSharp: Engine.Rendering
    VB: Engine.Rendering
  nameWithType:
    CSharp: Engine.Rendering
    VB: Engine.Rendering
  qualifiedName:
    CSharp: Engine.Rendering
    VB: Engine.Rendering
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Engine.Rendering.ColorExtension
    commentId: T:Engine.Rendering.ColorExtension
    language: CSharp
    name:
      CSharp: ColorExtension
      VB: ColorExtension
    nameWithType:
      CSharp: ColorExtension
      VB: ColorExtension
    qualifiedName:
      CSharp: Engine.Rendering.ColorExtension
      VB: Engine.Rendering.ColorExtension
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: ColorExtension
      path: ''
      startLine: 5535
    syntax:
      content:
        CSharp: public static class ColorExtension
        VB: Public Module ColorExtension
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - isExtensionMethod: true
      id: Engine.Rendering.ColorExtension.Interpolate(Color,Color,System.Single)
      commentId: M:Engine.Rendering.ColorExtension.Interpolate(Color,Color,System.Single)
      language: CSharp
      name:
        CSharp: Interpolate(Color, Color, Single)
        VB: Interpolate(Color, Color, Single)
      nameWithType:
        CSharp: ColorExtension.Interpolate(Color, Color, Single)
        VB: ColorExtension.Interpolate(Color, Color, Single)
      qualifiedName:
        CSharp: Engine.Rendering.ColorExtension.Interpolate(Color, Color, System.Single)
        VB: Engine.Rendering.ColorExtension.Interpolate(Color, Color, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Interpolate
        path: ''
        startLine: 5537
      syntax:
        content:
          CSharp: public static Color Interpolate(this Color c1, Color c2, float t)
          VB: >-
            <ExtensionAttribute>

            Public Shared Function Interpolate(c1 As Color, c2 As Color, t As Single) As Color
        parameters:
        - id: c1
          type: Color
        - id: c2
          type: Color
        - id: t
          type: System.Single
        return:
          type: Color
      overload: Engine.Rendering.ColorExtension.Interpolate*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: Engine.Rendering.Projection
    commentId: T:Engine.Rendering.Projection
    language: CSharp
    name:
      CSharp: Projection
      VB: Projection
    nameWithType:
      CSharp: Projection
      VB: Projection
    qualifiedName:
      CSharp: Engine.Rendering.Projection
      VB: Engine.Rendering.Projection
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: Projection
      path: ''
      startLine: 5555
    syntax:
      content:
        CSharp: public enum Projection
        VB: Public Enum Projection
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: Engine.Rendering.Projection.Orthographic
      commentId: F:Engine.Rendering.Projection.Orthographic
      language: CSharp
      name:
        CSharp: Orthographic
        VB: Orthographic
      nameWithType:
        CSharp: Projection.Orthographic
        VB: Projection.Orthographic
      qualifiedName:
        CSharp: Engine.Rendering.Projection.Orthographic
        VB: Engine.Rendering.Projection.Orthographic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Orthographic
        path: ''
        startLine: 5556
      syntax:
        content:
          CSharp: Orthographic = 0
          VB: Orthographic = 0
        return:
          type: Engine.Rendering.Projection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Rendering.Projection.Perspective
      commentId: F:Engine.Rendering.Projection.Perspective
      language: CSharp
      name:
        CSharp: Perspective
        VB: Perspective
      nameWithType:
        CSharp: Projection.Perspective
        VB: Projection.Perspective
      qualifiedName:
        CSharp: Engine.Rendering.Projection.Perspective
        VB: Engine.Rendering.Projection.Perspective
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Perspective
        path: ''
        startLine: 5557
      syntax:
        content:
          CSharp: Perspective = 1
          VB: Perspective = 1
        return:
          type: Engine.Rendering.Projection
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: Engine.Rendering.RenderImage
    commentId: T:Engine.Rendering.RenderImage
    language: CSharp
    name:
      CSharp: RenderImage
      VB: RenderImage
    nameWithType:
      CSharp: RenderImage
      VB: RenderImage
    qualifiedName:
      CSharp: Engine.Rendering.RenderImage
      VB: Engine.Rendering.RenderImage
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: RenderImage
      path: ''
      startLine: 5570
    syntax:
      content:
        CSharp: public class RenderImage
        VB: Public Class RenderImage
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Rendering.RenderImage.#ctor(Engine.Rendering.Projection,PictureBox@)
      commentId: M:Engine.Rendering.RenderImage.#ctor(Engine.Rendering.Projection,PictureBox@)
      language: CSharp
      name:
        CSharp: RenderImage(Projection, ref PictureBox)
        VB: RenderImage(Projection, ByRef PictureBox)
      nameWithType:
        CSharp: RenderImage.RenderImage(Projection, ref PictureBox)
        VB: RenderImage.RenderImage(Projection, ByRef PictureBox)
      qualifiedName:
        CSharp: Engine.Rendering.RenderImage.RenderImage(Engine.Rendering.Projection, ref PictureBox)
        VB: Engine.Rendering.RenderImage.RenderImage(Engine.Rendering.Projection, ByRef PictureBox)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: .ctor
        path: ''
        startLine: 5577
      syntax:
        content:
          CSharp: public RenderImage(Projection projection, ref PictureBox pictureBox)
          VB: Public Sub New(projection As Projection, ByRef pictureBox As PictureBox)
        parameters:
        - id: projection
          type: Engine.Rendering.Projection
        - id: pictureBox
          type: PictureBox
      overload: Engine.Rendering.RenderImage.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderImage.Render
      commentId: M:Engine.Rendering.RenderImage.Render
      language: CSharp
      name:
        CSharp: Render()
        VB: Render()
      nameWithType:
        CSharp: RenderImage.Render()
        VB: RenderImage.Render()
      qualifiedName:
        CSharp: Engine.Rendering.RenderImage.Render()
        VB: Engine.Rendering.RenderImage.Render()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Render
        path: ''
        startLine: 5585
      syntax:
        content:
          CSharp: public void Render()
          VB: Public Sub Render
      overload: Engine.Rendering.RenderImage.Render*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Rendering.RenderingConstants
    commentId: T:Engine.Rendering.RenderingConstants
    language: CSharp
    name:
      CSharp: RenderingConstants
      VB: RenderingConstants
    nameWithType:
      CSharp: RenderingConstants
      VB: RenderingConstants
    qualifiedName:
      CSharp: Engine.Rendering.RenderingConstants
      VB: Engine.Rendering.RenderingConstants
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: RenderingConstants
      path: ''
      startLine: 5649
    syntax:
      content:
        CSharp: public static class RenderingConstants
        VB: Public Module RenderingConstants
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - static
      - class
      VB:
      - Public
      - Module
    items:
    - id: Engine.Rendering.RenderingConstants.Unit
      commentId: F:Engine.Rendering.RenderingConstants.Unit
      language: CSharp
      name:
        CSharp: Unit
        VB: Unit
      nameWithType:
        CSharp: RenderingConstants.Unit
        VB: RenderingConstants.Unit
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.Unit
        VB: Engine.Rendering.RenderingConstants.Unit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Unit
        path: ''
        startLine: 5654
      summary: "\nDefines the Unit size in units\n"
      example: []
      syntax:
        content:
          CSharp: public const int Unit = 1
          VB: Public Const Unit As Integer = 1
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: Engine.Rendering.RenderingConstants.Sin135
      commentId: F:Engine.Rendering.RenderingConstants.Sin135
      language: CSharp
      name:
        CSharp: Sin135
        VB: Sin135
      nameWithType:
        CSharp: RenderingConstants.Sin135
        VB: RenderingConstants.Sin135
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.Sin135
        VB: Engine.Rendering.RenderingConstants.Sin135
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Sin135
        path: ''
        startLine: 5655
      syntax:
        content:
          CSharp: public static readonly float Sin135
          VB: Public Shared ReadOnly Sin135 As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Rendering.RenderingConstants._screenHeight
      commentId: F:Engine.Rendering.RenderingConstants._screenHeight
      language: CSharp
      name:
        CSharp: _screenHeight
        VB: _screenHeight
      nameWithType:
        CSharp: RenderingConstants._screenHeight
        VB: RenderingConstants._screenHeight
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants._screenHeight
        VB: Engine.Rendering.RenderingConstants._screenHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: _screenHeight
        path: ''
        startLine: 5661
      summary: "\nOnly applies when rendering with the orthographic perspective\nUnitXY multiplied with sqrt(2) / 2\n"
      example: []
      syntax:
        content:
          CSharp: public static int _screenHeight
          VB: Public Shared _screenHeight As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants._screenWidth
      commentId: F:Engine.Rendering.RenderingConstants._screenWidth
      language: CSharp
      name:
        CSharp: _screenWidth
        VB: _screenWidth
      nameWithType:
        CSharp: RenderingConstants._screenWidth
        VB: RenderingConstants._screenWidth
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants._screenWidth
        VB: Engine.Rendering.RenderingConstants._screenWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: _screenWidth
        path: ''
        startLine: 5662
      syntax:
        content:
          CSharp: public static int _screenWidth
          VB: Public Shared _screenWidth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants._halfScreenHeight
      commentId: F:Engine.Rendering.RenderingConstants._halfScreenHeight
      language: CSharp
      name:
        CSharp: _halfScreenHeight
        VB: _halfScreenHeight
      nameWithType:
        CSharp: RenderingConstants._halfScreenHeight
        VB: RenderingConstants._halfScreenHeight
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants._halfScreenHeight
        VB: Engine.Rendering.RenderingConstants._halfScreenHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: _halfScreenHeight
        path: ''
        startLine: 5663
      syntax:
        content:
          CSharp: public static int _halfScreenHeight
          VB: Public Shared _halfScreenHeight As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants._halfScreenWidth
      commentId: F:Engine.Rendering.RenderingConstants._halfScreenWidth
      language: CSharp
      name:
        CSharp: _halfScreenWidth
        VB: _halfScreenWidth
      nameWithType:
        CSharp: RenderingConstants._halfScreenWidth
        VB: RenderingConstants._halfScreenWidth
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants._halfScreenWidth
        VB: Engine.Rendering.RenderingConstants._halfScreenWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: _halfScreenWidth
        path: ''
        startLine: 5664
      syntax:
        content:
          CSharp: public static int _halfScreenWidth
          VB: Public Shared _halfScreenWidth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants.FoV
      commentId: F:Engine.Rendering.RenderingConstants.FoV
      language: CSharp
      name:
        CSharp: FoV
        VB: FoV
      nameWithType:
        CSharp: RenderingConstants.FoV
        VB: RenderingConstants.FoV
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.FoV
        VB: Engine.Rendering.RenderingConstants.FoV
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: FoV
        path: ''
        startLine: 5665
      syntax:
        content:
          CSharp: public static int FoV
          VB: Public Shared FoV As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants.ScreenHeight
      commentId: P:Engine.Rendering.RenderingConstants.ScreenHeight
      language: CSharp
      name:
        CSharp: ScreenHeight
        VB: ScreenHeight
      nameWithType:
        CSharp: RenderingConstants.ScreenHeight
        VB: RenderingConstants.ScreenHeight
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.ScreenHeight
        VB: Engine.Rendering.RenderingConstants.ScreenHeight
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: ScreenHeight
        path: ''
        startLine: 5667
      syntax:
        content:
          CSharp: public static int ScreenHeight { get; set; }
          VB: Public Shared Property ScreenHeight As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Rendering.RenderingConstants.ScreenHeight*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants.ScreenWidth
      commentId: P:Engine.Rendering.RenderingConstants.ScreenWidth
      language: CSharp
      name:
        CSharp: ScreenWidth
        VB: ScreenWidth
      nameWithType:
        CSharp: RenderingConstants.ScreenWidth
        VB: RenderingConstants.ScreenWidth
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.ScreenWidth
        VB: Engine.Rendering.RenderingConstants.ScreenWidth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: ScreenWidth
        path: ''
        startLine: 5668
      syntax:
        content:
          CSharp: public static int ScreenWidth { get; set; }
          VB: Public Shared Property ScreenWidth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Rendering.RenderingConstants.ScreenWidth*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: Engine.Rendering.RenderingConstants.HalfScreenHeight
      commentId: P:Engine.Rendering.RenderingConstants.HalfScreenHeight
      language: CSharp
      name:
        CSharp: HalfScreenHeight
        VB: HalfScreenHeight
      nameWithType:
        CSharp: RenderingConstants.HalfScreenHeight
        VB: RenderingConstants.HalfScreenHeight
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.HalfScreenHeight
        VB: Engine.Rendering.RenderingConstants.HalfScreenHeight
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: HalfScreenHeight
        path: ''
        startLine: 5669
      syntax:
        content:
          CSharp: public static int HalfScreenHeight { get; }
          VB: Public Shared ReadOnly Property HalfScreenHeight As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Rendering.RenderingConstants.HalfScreenHeight*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: Engine.Rendering.RenderingConstants.HalfScreenWidth
      commentId: P:Engine.Rendering.RenderingConstants.HalfScreenWidth
      language: CSharp
      name:
        CSharp: HalfScreenWidth
        VB: HalfScreenWidth
      nameWithType:
        CSharp: RenderingConstants.HalfScreenWidth
        VB: RenderingConstants.HalfScreenWidth
      qualifiedName:
        CSharp: Engine.Rendering.RenderingConstants.HalfScreenWidth
        VB: Engine.Rendering.RenderingConstants.HalfScreenWidth
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: HalfScreenWidth
        path: ''
        startLine: 5670
      syntax:
        content:
          CSharp: public static int HalfScreenWidth { get; }
          VB: Public Shared ReadOnly Property HalfScreenWidth As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Engine.Rendering.RenderingConstants.HalfScreenWidth*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
  - id: Engine.Rendering.RenderPoint
    commentId: T:Engine.Rendering.RenderPoint
    language: CSharp
    name:
      CSharp: RenderPoint
      VB: RenderPoint
    nameWithType:
      CSharp: RenderPoint
      VB: RenderPoint
    qualifiedName:
      CSharp: Engine.Rendering.RenderPoint
      VB: Engine.Rendering.RenderPoint
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: RenderPoint
      path: ''
      startLine: 5685
    syntax:
      content:
        CSharp: public class RenderPoint
        VB: Public Class RenderPoint
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Rendering.RenderPoint.X
      commentId: F:Engine.Rendering.RenderPoint.X
      language: CSharp
      name:
        CSharp: X
        VB: X
      nameWithType:
        CSharp: RenderPoint.X
        VB: RenderPoint.X
      qualifiedName:
        CSharp: Engine.Rendering.RenderPoint.X
        VB: Engine.Rendering.RenderPoint.X
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: X
        path: ''
        startLine: 5687
      syntax:
        content:
          CSharp: public int X
          VB: Public X As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderPoint.Y
      commentId: F:Engine.Rendering.RenderPoint.Y
      language: CSharp
      name:
        CSharp: Y
        VB: Y
      nameWithType:
        CSharp: RenderPoint.Y
        VB: RenderPoint.Y
      qualifiedName:
        CSharp: Engine.Rendering.RenderPoint.Y
        VB: Engine.Rendering.RenderPoint.Y
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Y
        path: ''
        startLine: 5688
      syntax:
        content:
          CSharp: public int Y
          VB: Public Y As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderPoint.Color
      commentId: F:Engine.Rendering.RenderPoint.Color
      language: CSharp
      name:
        CSharp: Color
        VB: Color
      nameWithType:
        CSharp: RenderPoint.Color
        VB: RenderPoint.Color
      qualifiedName:
        CSharp: Engine.Rendering.RenderPoint.Color
        VB: Engine.Rendering.RenderPoint.Color
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: Color
        path: ''
        startLine: 5689
      syntax:
        content:
          CSharp: public Color Color
          VB: Public Color As Color
        return:
          type: Color
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderPoint.#ctor(System.Int32,System.Int32,Color)
      commentId: M:Engine.Rendering.RenderPoint.#ctor(System.Int32,System.Int32,Color)
      language: CSharp
      name:
        CSharp: RenderPoint(Int32, Int32, Color)
        VB: RenderPoint(Int32, Int32, Color)
      nameWithType:
        CSharp: RenderPoint.RenderPoint(Int32, Int32, Color)
        VB: RenderPoint.RenderPoint(Int32, Int32, Color)
      qualifiedName:
        CSharp: Engine.Rendering.RenderPoint.RenderPoint(System.Int32, System.Int32, Color)
        VB: Engine.Rendering.RenderPoint.RenderPoint(System.Int32, System.Int32, Color)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: .ctor
        path: ''
        startLine: 5691
      syntax:
        content:
          CSharp: public RenderPoint(int x, int y, Color color)
          VB: Public Sub New(x As Integer, y As Integer, color As Color)
        parameters:
        - id: x
          type: System.Int32
        - id: y
          type: System.Int32
        - id: color
          type: Color
      overload: Engine.Rendering.RenderPoint.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderPoint.LerpColor(Color,System.Single)
      commentId: M:Engine.Rendering.RenderPoint.LerpColor(Color,System.Single)
      language: CSharp
      name:
        CSharp: LerpColor(Color, Single)
        VB: LerpColor(Color, Single)
      nameWithType:
        CSharp: RenderPoint.LerpColor(Color, Single)
        VB: RenderPoint.LerpColor(Color, Single)
      qualifiedName:
        CSharp: Engine.Rendering.RenderPoint.LerpColor(Color, System.Single)
        VB: Engine.Rendering.RenderPoint.LerpColor(Color, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: LerpColor
        path: ''
        startLine: 5698
      syntax:
        content:
          CSharp: public void LerpColor(Color color, float t)
          VB: Public Sub LerpColor(color As Color, t As Single)
        parameters:
        - id: color
          type: Color
        - id: t
          type: System.Single
      overload: Engine.Rendering.RenderPoint.LerpColor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: Engine.Rendering.RenderTexture
    commentId: T:Engine.Rendering.RenderTexture
    language: CSharp
    name:
      CSharp: RenderTexture
      VB: RenderTexture
    nameWithType:
      CSharp: RenderTexture
      VB: RenderTexture
    qualifiedName:
      CSharp: Engine.Rendering.RenderTexture
      VB: Engine.Rendering.RenderTexture
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Engine.Rendering
    source:
      id: RenderTexture
      path: ''
      startLine: 5718
    syntax:
      content:
        CSharp: public class RenderTexture
        VB: Public Class RenderTexture
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Engine.Rendering.RenderTexture.#ctor(PictureBox,System.Single)
      commentId: M:Engine.Rendering.RenderTexture.#ctor(PictureBox,System.Single)
      language: CSharp
      name:
        CSharp: RenderTexture(PictureBox, Single)
        VB: RenderTexture(PictureBox, Single)
      nameWithType:
        CSharp: RenderTexture.RenderTexture(PictureBox, Single)
        VB: RenderTexture.RenderTexture(PictureBox, Single)
      qualifiedName:
        CSharp: Engine.Rendering.RenderTexture.RenderTexture(PictureBox, System.Single)
        VB: Engine.Rendering.RenderTexture.RenderTexture(PictureBox, System.Single)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: .ctor
        path: ''
        startLine: 5725
      syntax:
        content:
          CSharp: public RenderTexture(PictureBox pictureBox, float pixelDensity = 90F)
          VB: Public Sub New(pictureBox As PictureBox, pixelDensity As Single = 90F)
        parameters:
        - id: pictureBox
          type: PictureBox
        - id: pixelDensity
          type: System.Single
      overload: Engine.Rendering.RenderTexture.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Engine.Rendering.RenderTexture.RenderPixel(System.Single,System.Single,Camera)
      commentId: M:Engine.Rendering.RenderTexture.RenderPixel(System.Single,System.Single,Camera)
      language: CSharp
      name:
        CSharp: RenderPixel(Single, Single, Camera)
        VB: RenderPixel(Single, Single, Camera)
      nameWithType:
        CSharp: RenderTexture.RenderPixel(Single, Single, Camera)
        VB: RenderTexture.RenderPixel(Single, Single, Camera)
      qualifiedName:
        CSharp: Engine.Rendering.RenderTexture.RenderPixel(System.Single, System.Single, Camera)
        VB: Engine.Rendering.RenderTexture.RenderPixel(System.Single, System.Single, Camera)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Engine.Rendering
      source:
        id: RenderPixel
        path: ''
        startLine: 5736
      syntax:
        content:
          CSharp: public Pixel RenderPixel(float x, float y, Camera camera)
          VB: Public Function RenderPixel(x As Single, y As Single, camera As Camera) As Pixel
        parameters:
        - id: x
          type: System.Single
        - id: y
          type: System.Single
        - id: camera
          type: Camera
        return:
          type: Pixel
      overload: Engine.Rendering.RenderTexture.RenderPixel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
references:
  Engine.Main.#ctor*:
    name:
      CSharp:
      - id: Engine.Main.#ctor*
        name: Main
        nameWithType: Main.Main
        qualifiedName: Engine.Main.Main
      VB:
      - id: Engine.Main.#ctor*
        name: Main
        nameWithType: Main.Main
        qualifiedName: Engine.Main.Main
    isDefinition: true
    commentId: Overload:Engine.Main.#ctor
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  Engine.Main.Dispose*:
    name:
      CSharp:
      - id: Engine.Main.Dispose*
        name: Dispose
        nameWithType: Main.Dispose
        qualifiedName: Engine.Main.Dispose
      VB:
      - id: Engine.Main.Dispose*
        name: Dispose
        nameWithType: Main.Dispose
        qualifiedName: Engine.Main.Dispose
    isDefinition: true
    commentId: Overload:Engine.Main.Dispose
  Engine.Main:
    name:
      CSharp:
      - id: Engine.Main
        name: Main
        nameWithType: Main
        qualifiedName: Engine.Main
      VB:
      - id: Engine.Main
        name: Main
        nameWithType: Main
        qualifiedName: Engine.Main
    isDefinition: true
    commentId: T:Engine.Main
  Engine:
    name:
      CSharp:
      - name: Engine
        nameWithType: Engine
        qualifiedName: Engine
      VB:
      - name: Engine
        nameWithType: Engine
        qualifiedName: Engine
    isDefinition: true
    commentId: N:Engine
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  Engine.Core:
    name:
      CSharp:
      - name: Engine.Core
        nameWithType: Engine.Core
        qualifiedName: Engine.Core
      VB:
      - name: Engine.Core
        nameWithType: Engine.Core
        qualifiedName: Engine.Core
    isDefinition: true
    commentId: N:Engine.Core
  Engine.Core.Object3D:
    name:
      CSharp:
      - id: Engine.Core.Object3D
        name: Object3D
        nameWithType: Object3D
        qualifiedName: Engine.Core.Object3D
      VB:
      - id: Engine.Core.Object3D
        name: Object3D
        nameWithType: Object3D
        qualifiedName: Engine.Core.Object3D
    isDefinition: true
    parent: Engine.Core
    commentId: T:Engine.Core.Object3D
  Engine.Core.Component.Dependency*:
    name:
      CSharp:
      - id: Engine.Core.Component.Dependency*
        name: Dependency
        nameWithType: Component.Dependency
        qualifiedName: Engine.Core.Component.Dependency
      VB:
      - id: Engine.Core.Component.Dependency*
        name: Dependency
        nameWithType: Component.Dependency
        qualifiedName: Engine.Core.Component.Dependency
    isDefinition: true
    commentId: Overload:Engine.Core.Component.Dependency
  Engine.Core.Component.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Component.#ctor*
        name: Component
        nameWithType: Component.Component
        qualifiedName: Engine.Core.Component.Component
      VB:
      - id: Engine.Core.Component.#ctor*
        name: Component
        nameWithType: Component.Component
        qualifiedName: Engine.Core.Component.Component
    isDefinition: true
    commentId: Overload:Engine.Core.Component.#ctor
  Engine.Core.Component:
    name:
      CSharp:
      - id: Engine.Core.Component
        name: Component
        nameWithType: Component
        qualifiedName: Engine.Core.Component
      VB:
      - id: Engine.Core.Component
        name: Component
        nameWithType: Component
        qualifiedName: Engine.Core.Component
    isDefinition: true
    parent: Engine.Core
    commentId: T:Engine.Core.Component
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Engine.Core.Layer}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Engine.Core.Layer
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Engine.Core.Layer
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Layer}
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  Engine.Core.Layer:
    name:
      CSharp:
      - id: Engine.Core.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Engine.Core.Layer
      VB:
      - id: Engine.Core.Layer
        name: Layer
        nameWithType: Layer
        qualifiedName: Engine.Core.Layer
    isDefinition: true
    parent: Engine.Core
    commentId: T:Engine.Core.Layer
  Engine.Core.Layer.Item*:
    name:
      CSharp:
      - id: Engine.Core.Layer.Item*
        name: Item
        nameWithType: Layer.Item
        qualifiedName: Engine.Core.Layer.Item
      VB:
      - id: Engine.Core.Layer.Item*
        name: Item
        nameWithType: Layer.Item
        qualifiedName: Engine.Core.Layer.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.Item
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  Engine.Core.Layer.Name*:
    name:
      CSharp:
      - id: Engine.Core.Layer.Name*
        name: Name
        nameWithType: Layer.Name
        qualifiedName: Engine.Core.Layer.Name
      VB:
      - id: Engine.Core.Layer.Name*
        name: Name
        nameWithType: Layer.Name
        qualifiedName: Engine.Core.Layer.Name
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.Name
  Engine.Core.Layer.ID*:
    name:
      CSharp:
      - id: Engine.Core.Layer.ID*
        name: ID
        nameWithType: Layer.ID
        qualifiedName: Engine.Core.Layer.ID
      VB:
      - id: Engine.Core.Layer.ID*
        name: ID
        nameWithType: Layer.ID
        qualifiedName: Engine.Core.Layer.ID
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.ID
  Engine.Core.Layer.Index*:
    name:
      CSharp:
      - id: Engine.Core.Layer.Index*
        name: Index
        nameWithType: Layer.Index
        qualifiedName: Engine.Core.Layer.Index
      VB:
      - id: Engine.Core.Layer.Index*
        name: Index
        nameWithType: Layer.Index
        qualifiedName: Engine.Core.Layer.Index
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.Index
  Engine.Core.Layer.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Layer.#ctor*
        name: Layer
        nameWithType: Layer.Layer
        qualifiedName: Engine.Core.Layer.Layer
      VB:
      - id: Engine.Core.Layer.#ctor*
        name: Layer
        nameWithType: Layer.Layer
        qualifiedName: Engine.Core.Layer.Layer
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.#ctor
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{System.Int32}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{System.Int32}
  Engine.Core.Layer.ChangeLayer*:
    name:
      CSharp:
      - id: Engine.Core.Layer.ChangeLayer*
        name: ChangeLayer
        nameWithType: Layer.ChangeLayer
        qualifiedName: Engine.Core.Layer.ChangeLayer
      VB:
      - id: Engine.Core.Layer.ChangeLayer*
        name: ChangeLayer
        nameWithType: Layer.ChangeLayer
        qualifiedName: Engine.Core.Layer.ChangeLayer
    isDefinition: true
    commentId: Overload:Engine.Core.Layer.ChangeLayer
  System.Collections.Generic.List{Engine.Core.Component}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Component
        name: Component
        nameWithType: Component
        qualifiedName: Engine.Core.Component
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Component
        name: Component
        nameWithType: Component
        qualifiedName: Engine.Core.Component
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Component}
  LCS3:
    name:
      CSharp:
      - id: LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: LCS3
        isExternal: true
      VB:
      - id: LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: LCS3
        isExternal: true
    isDefinition: true
  Engine.Core.Object3D.Local*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.Local*
        name: Local
        nameWithType: Object3D.Local
        qualifiedName: Engine.Core.Object3D.Local
      VB:
      - id: Engine.Core.Object3D.Local*
        name: Local
        nameWithType: Object3D.Local
        qualifiedName: Engine.Core.Object3D.Local
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.Local
  Engine.Core.Object3D.Parent*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.Parent*
        name: Parent
        nameWithType: Object3D.Parent
        qualifiedName: Engine.Core.Object3D.Parent
      VB:
      - id: Engine.Core.Object3D.Parent*
        name: Parent
        nameWithType: Object3D.Parent
        qualifiedName: Engine.Core.Object3D.Parent
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.Parent
  Engine.Core.Object3D.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.#ctor*
        name: Object3D
        nameWithType: Object3D.Object3D
        qualifiedName: Engine.Core.Object3D.Object3D
      VB:
      - id: Engine.Core.Object3D.#ctor*
        name: Object3D
        nameWithType: Object3D.Object3D
        qualifiedName: Engine.Core.Object3D.Object3D
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.#ctor
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  RotationVector3:
    name:
      CSharp:
      - id: RotationVector3
        name: RotationVector3
        nameWithType: RotationVector3
        qualifiedName: RotationVector3
        isExternal: true
      VB:
      - id: RotationVector3
        name: RotationVector3
        nameWithType: RotationVector3
        qualifiedName: RotationVector3
        isExternal: true
    isDefinition: true
  Engine.Core.Object3D.SetParent*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.SetParent*
        name: SetParent
        nameWithType: Object3D.SetParent
        qualifiedName: Engine.Core.Object3D.SetParent
      VB:
      - id: Engine.Core.Object3D.SetParent*
        name: SetParent
        nameWithType: Object3D.SetParent
        qualifiedName: Engine.Core.Object3D.SetParent
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.SetParent
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  Engine.Core.Object3D.AddComponent*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.AddComponent*
        name: AddComponent
        nameWithType: Object3D.AddComponent
        qualifiedName: Engine.Core.Object3D.AddComponent
      VB:
      - id: Engine.Core.Object3D.AddComponent*
        name: AddComponent
        nameWithType: Object3D.AddComponent
        qualifiedName: Engine.Core.Object3D.AddComponent
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.AddComponent
  Engine.Core.Object3D.RemoveComponent*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.RemoveComponent*
        name: RemoveComponent
        nameWithType: Object3D.RemoveComponent
        qualifiedName: Engine.Core.Object3D.RemoveComponent
      VB:
      - id: Engine.Core.Object3D.RemoveComponent*
        name: RemoveComponent
        nameWithType: Object3D.RemoveComponent
        qualifiedName: Engine.Core.Object3D.RemoveComponent
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.RemoveComponent
  Engine.Core.Object3D.GetComponent*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.GetComponent*
        name: GetComponent
        nameWithType: Object3D.GetComponent
        qualifiedName: Engine.Core.Object3D.GetComponent
      VB:
      - id: Engine.Core.Object3D.GetComponent*
        name: GetComponent
        nameWithType: Object3D.GetComponent
        qualifiedName: Engine.Core.Object3D.GetComponent
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.GetComponent
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{``0}
  Engine.Core.Object3D.GetComponents*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.GetComponents*
        name: GetComponents
        nameWithType: Object3D.GetComponents
        qualifiedName: Engine.Core.Object3D.GetComponents
      VB:
      - id: Engine.Core.Object3D.GetComponents*
        name: GetComponents
        nameWithType: Object3D.GetComponents
        qualifiedName: Engine.Core.Object3D.GetComponents
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.GetComponents
  Engine.Core.Object3D.FindChild*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.FindChild*
        name: FindChild
        nameWithType: Object3D.FindChild
        qualifiedName: Engine.Core.Object3D.FindChild
      VB:
      - id: Engine.Core.Object3D.FindChild*
        name: FindChild
        nameWithType: Object3D.FindChild
        qualifiedName: Engine.Core.Object3D.FindChild
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.FindChild
  Engine.Core.Object3D.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Object3D.op_Implicit*
        name: Implicit
        nameWithType: Object3D.Implicit
        qualifiedName: Engine.Core.Object3D.Implicit
      VB:
      - id: Engine.Core.Object3D.op_Implicit*
        name: Widening
        nameWithType: Object3D.Widening
        qualifiedName: Engine.Core.Object3D.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Object3D.op_Implicit
  Engine.Core.Particle.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Particle.#ctor*
        name: Particle
        nameWithType: Particle.Particle
        qualifiedName: Engine.Core.Particle.Particle
      VB:
      - id: Engine.Core.Particle.#ctor*
        name: Particle
        nameWithType: Particle.Particle
        qualifiedName: Engine.Core.Particle.Particle
    isDefinition: true
    commentId: Overload:Engine.Core.Particle.#ctor
  Engine.Core.Particle.SetPosition*:
    name:
      CSharp:
      - id: Engine.Core.Particle.SetPosition*
        name: SetPosition
        nameWithType: Particle.SetPosition
        qualifiedName: Engine.Core.Particle.SetPosition
      VB:
      - id: Engine.Core.Particle.SetPosition*
        name: SetPosition
        nameWithType: Particle.SetPosition
        qualifiedName: Engine.Core.Particle.SetPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Particle.SetPosition
  Engine.Core.Particle.CheckPosition*:
    name:
      CSharp:
      - id: Engine.Core.Particle.CheckPosition*
        name: CheckPosition
        nameWithType: Particle.CheckPosition
        qualifiedName: Engine.Core.Particle.CheckPosition
      VB:
      - id: Engine.Core.Particle.CheckPosition*
        name: CheckPosition
        nameWithType: Particle.CheckPosition
        qualifiedName: Engine.Core.Particle.CheckPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Particle.CheckPosition
  Engine.Core.Particle:
    name:
      CSharp:
      - id: Engine.Core.Particle
        name: Particle
        nameWithType: Particle
        qualifiedName: Engine.Core.Particle
      VB:
      - id: Engine.Core.Particle
        name: Particle
        nameWithType: Particle
        qualifiedName: Engine.Core.Particle
    isDefinition: true
    parent: Engine.Core
    commentId: T:Engine.Core.Particle
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  Color:
    name:
      CSharp:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
      VB:
      - id: Color
        name: Color
        nameWithType: Color
        qualifiedName: Color
        isExternal: true
    isDefinition: true
  Engine.Core.Pixel:
    name:
      CSharp:
      - id: Engine.Core.Pixel
        name: Pixel
        nameWithType: Pixel
        qualifiedName: Engine.Core.Pixel
      VB:
      - id: Engine.Core.Pixel
        name: Pixel
        nameWithType: Pixel
        qualifiedName: Engine.Core.Pixel
    isDefinition: true
    parent: Engine.Core
    commentId: T:Engine.Core.Pixel
  Straight:
    name:
      CSharp:
      - id: Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Straight
        isExternal: true
      VB:
      - id: Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Straight
        isExternal: true
    isDefinition: true
  Engine.Core.Ray.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Ray.#ctor*
        name: Ray
        nameWithType: Ray.Ray
        qualifiedName: Engine.Core.Ray.Ray
      VB:
      - id: Engine.Core.Ray.#ctor*
        name: Ray
        nameWithType: Ray.Ray
        qualifiedName: Engine.Core.Ray.Ray
    isDefinition: true
    commentId: Overload:Engine.Core.Ray.#ctor
  Engine.Core.Ray.Emit*:
    name:
      CSharp:
      - id: Engine.Core.Ray.Emit*
        name: Emit
        nameWithType: Ray.Emit
        qualifiedName: Engine.Core.Ray.Emit
      VB:
      - id: Engine.Core.Ray.Emit*
        name: Emit
        nameWithType: Ray.Emit
        qualifiedName: Engine.Core.Ray.Emit
    isDefinition: true
    commentId: Overload:Engine.Core.Ray.Emit
  Engine.Core.Ray:
    name:
      CSharp:
      - id: Engine.Core.Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Engine.Core.Ray
      VB:
      - id: Engine.Core.Ray
        name: Ray
        nameWithType: Ray
        qualifiedName: Engine.Core.Ray
    isDefinition: true
    commentId: T:Engine.Core.Ray
  Engine.Core.Component.Dependency:
    name:
      CSharp:
      - id: Engine.Core.Component.Dependency
        name: Dependency
        nameWithType: Component.Dependency
        qualifiedName: Engine.Core.Component.Dependency
      VB:
      - id: Engine.Core.Component.Dependency
        name: Dependency
        nameWithType: Component.Dependency
        qualifiedName: Engine.Core.Component.Dependency
    isDefinition: true
    parent: Engine.Core.Component
    commentId: P:Engine.Core.Component.Dependency
  Engine.Core.Components.Camera.NearPlaneDistance*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.NearPlaneDistance*
        name: NearPlaneDistance
        nameWithType: Camera.NearPlaneDistance
        qualifiedName: Engine.Core.Components.Camera.NearPlaneDistance
      VB:
      - id: Engine.Core.Components.Camera.NearPlaneDistance*
        name: NearPlaneDistance
        nameWithType: Camera.NearPlaneDistance
        qualifiedName: Engine.Core.Components.Camera.NearPlaneDistance
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.NearPlaneDistance
  Engine.Core.Components.Camera.FarPlaneDistance*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.FarPlaneDistance*
        name: FarPlaneDistance
        nameWithType: Camera.FarPlaneDistance
        qualifiedName: Engine.Core.Components.Camera.FarPlaneDistance
      VB:
      - id: Engine.Core.Components.Camera.FarPlaneDistance*
        name: FarPlaneDistance
        nameWithType: Camera.FarPlaneDistance
        qualifiedName: Engine.Core.Components.Camera.FarPlaneDistance
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.FarPlaneDistance
  Engine.Core.Components:
    name:
      CSharp:
      - name: Engine.Core.Components
        nameWithType: Engine.Core.Components
        qualifiedName: Engine.Core.Components
      VB:
      - name: Engine.Core.Components
        nameWithType: Engine.Core.Components
        qualifiedName: Engine.Core.Components
    isDefinition: true
    commentId: N:Engine.Core.Components
  Engine.Core.Components.Camera.CameraPlane:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane
        name: Camera.CameraPlane
        nameWithType: Camera.CameraPlane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane
        name: Camera.CameraPlane
        nameWithType: Camera.CameraPlane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane
    isDefinition: true
    parent: Engine.Core.Components
    commentId: T:Engine.Core.Components.Camera.CameraPlane
  Engine.Core.Components.Camera.NearPlane*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.NearPlane*
        name: NearPlane
        nameWithType: Camera.NearPlane
        qualifiedName: Engine.Core.Components.Camera.NearPlane
      VB:
      - id: Engine.Core.Components.Camera.NearPlane*
        name: NearPlane
        nameWithType: Camera.NearPlane
        qualifiedName: Engine.Core.Components.Camera.NearPlane
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.NearPlane
  Engine.Core.Components.Camera.FarPlane*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.FarPlane*
        name: FarPlane
        nameWithType: Camera.FarPlane
        qualifiedName: Engine.Core.Components.Camera.FarPlane
      VB:
      - id: Engine.Core.Components.Camera.FarPlane*
        name: FarPlane
        nameWithType: Camera.FarPlane
        qualifiedName: Engine.Core.Components.Camera.FarPlane
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.FarPlane
  Engine.Core.Components.Camera.ImagePlane*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.ImagePlane*
        name: ImagePlane
        nameWithType: Camera.ImagePlane
        qualifiedName: Engine.Core.Components.Camera.ImagePlane
      VB:
      - id: Engine.Core.Components.Camera.ImagePlane*
        name: ImagePlane
        nameWithType: Camera.ImagePlane
        qualifiedName: Engine.Core.Components.Camera.ImagePlane
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.ImagePlane
  Engine.Core.Components.Camera.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.#ctor*
        name: Camera
        nameWithType: Camera.Camera
        qualifiedName: Engine.Core.Components.Camera.Camera
      VB:
      - id: Engine.Core.Components.Camera.#ctor*
        name: Camera
        nameWithType: Camera.Camera
        qualifiedName: Engine.Core.Components.Camera.Camera
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.#ctor
  Engine.Core.Components.Camera.RenderPoint*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.RenderPoint*
        name: RenderPoint
        nameWithType: Camera.RenderPoint
        qualifiedName: Engine.Core.Components.Camera.RenderPoint
      VB:
      - id: Engine.Core.Components.Camera.RenderPoint*
        name: RenderPoint
        nameWithType: Camera.RenderPoint
        qualifiedName: Engine.Core.Components.Camera.RenderPoint
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.RenderPoint
  System.Collections.Generic.List{LightSource}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: LightSource
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: LightSource
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{LightSource}
  Engine.Core.Components.Camera.AnyLightSource*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.AnyLightSource*
        name: AnyLightSource
        nameWithType: Camera.AnyLightSource
        qualifiedName: Engine.Core.Components.Camera.AnyLightSource
      VB:
      - id: Engine.Core.Components.Camera.AnyLightSource*
        name: AnyLightSource
        nameWithType: Camera.AnyLightSource
        qualifiedName: Engine.Core.Components.Camera.AnyLightSource
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.AnyLightSource
  System.ObsoleteAttribute:
    name:
      CSharp:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
      VB:
      - id: System.ObsoleteAttribute
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ObsoleteAttribute
  System.ObsoleteAttribute.#ctor(System.String):
    name:
      CSharp:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ObsoleteAttribute.#ctor(System.String)
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ObsoleteAttribute
    commentId: M:System.ObsoleteAttribute.#ctor(System.String)
  Engine.Core.Components.Camera:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Engine.Core.Components.Camera
      VB:
      - id: Engine.Core.Components.Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Engine.Core.Components.Camera
    isDefinition: true
    commentId: T:Engine.Core.Components.Camera
  Plane:
    name:
      CSharp:
      - id: Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Plane
        isExternal: true
      VB:
      - id: Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Plane
        isExternal: true
    isDefinition: true
    commentId: '!:Plane'
  Engine.Core.Components.Camera.CameraPlane.plane*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.plane*
        name: plane
        nameWithType: Camera.CameraPlane.plane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.plane
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.plane*
        name: plane
        nameWithType: Camera.CameraPlane.plane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.plane
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.plane
  Engine.Core.Components.Camera.CameraPlane.GlobalVertical*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.GlobalVertical*
        name: GlobalVertical
        nameWithType: Camera.CameraPlane.GlobalVertical
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GlobalVertical
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.GlobalVertical*
        name: GlobalVertical
        nameWithType: Camera.CameraPlane.GlobalVertical
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GlobalVertical
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.GlobalVertical
  Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal*
        name: GlobalHorizontal
        nameWithType: Camera.CameraPlane.GlobalHorizontal
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal*
        name: GlobalHorizontal
        nameWithType: Camera.CameraPlane.GlobalHorizontal
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.GlobalHorizontal
  Engine.Core.Components.Camera.CameraPlane.Normal*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.Normal*
        name: Normal
        nameWithType: Camera.CameraPlane.Normal
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.Normal
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.Normal*
        name: Normal
        nameWithType: Camera.CameraPlane.Normal
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.Normal
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.Normal
  System.Single[]:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Engine.Core.Components.Camera.CameraPlane.BoundaryS*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.BoundaryS*
        name: BoundaryS
        nameWithType: Camera.CameraPlane.BoundaryS
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.BoundaryS
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.BoundaryS*
        name: BoundaryS
        nameWithType: Camera.CameraPlane.BoundaryS
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.BoundaryS
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.BoundaryS
  Engine.Core.Components.Camera.CameraPlane.BoundaryT*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.BoundaryT*
        name: BoundaryT
        nameWithType: Camera.CameraPlane.BoundaryT
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.BoundaryT
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.BoundaryT*
        name: BoundaryT
        nameWithType: Camera.CameraPlane.BoundaryT
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.BoundaryT
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.BoundaryT
  Engine.Core.Components.Camera.CameraPlane.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.#ctor*
        name: CameraPlane
        nameWithType: Camera.CameraPlane.CameraPlane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.CameraPlane
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.#ctor*
        name: CameraPlane
        nameWithType: Camera.CameraPlane.CameraPlane
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.CameraPlane
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.#ctor
  Engine.Core.Components.Camera.CameraPlane.GetPoint*:
    name:
      CSharp:
      - id: Engine.Core.Components.Camera.CameraPlane.GetPoint*
        name: GetPoint
        nameWithType: Camera.CameraPlane.GetPoint
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GetPoint
      VB:
      - id: Engine.Core.Components.Camera.CameraPlane.GetPoint*
        name: GetPoint
        nameWithType: Camera.CameraPlane.GetPoint
        qualifiedName: Engine.Core.Components.Camera.CameraPlane.GetPoint
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Camera.CameraPlane.GetPoint
  Engine.Core.Components.Vertex:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
      VB:
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
    isDefinition: true
    parent: Engine.Core.Components
    commentId: T:Engine.Core.Components.Vertex
  Engine.Core.Components.Edge.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Edge.#ctor*
        name: Edge
        nameWithType: Edge.Edge
        qualifiedName: Engine.Core.Components.Edge.Edge
      VB:
      - id: Engine.Core.Components.Edge.#ctor*
        name: Edge
        nameWithType: Edge.Edge
        qualifiedName: Engine.Core.Components.Edge.Edge
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Edge.#ctor
  System.ArgumentOutOfRangeException:
    commentId: T:System.ArgumentOutOfRangeException
  Engine.Core.Components.Edge.GetVertexOnEdge*:
    name:
      CSharp:
      - id: Engine.Core.Components.Edge.GetVertexOnEdge*
        name: GetVertexOnEdge
        nameWithType: Edge.GetVertexOnEdge
        qualifiedName: Engine.Core.Components.Edge.GetVertexOnEdge
      VB:
      - id: Engine.Core.Components.Edge.GetVertexOnEdge*
        name: GetVertexOnEdge
        nameWithType: Edge.GetVertexOnEdge
        qualifiedName: Engine.Core.Components.Edge.GetVertexOnEdge
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Edge.GetVertexOnEdge
  Engine.Core.Components.Edge:
    name:
      CSharp:
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
      VB:
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
    isDefinition: true
    parent: Engine.Core.Components
    commentId: T:Engine.Core.Components.Edge
  Engine.Core.Components.Face.NormalVector*:
    name:
      CSharp:
      - id: Engine.Core.Components.Face.NormalVector*
        name: NormalVector
        nameWithType: Face.NormalVector
        qualifiedName: Engine.Core.Components.Face.NormalVector
      VB:
      - id: Engine.Core.Components.Face.NormalVector*
        name: NormalVector
        nameWithType: Face.NormalVector
        qualifiedName: Engine.Core.Components.Face.NormalVector
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Face.NormalVector
  Engine.Core.Components.Vertex[]:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Engine.Core.Components.Edge[]:
    name:
      CSharp:
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Engine.Core.Components.Face.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Face.#ctor*
        name: Face
        nameWithType: Face.Face
        qualifiedName: Engine.Core.Components.Face.Face
      VB:
      - id: Engine.Core.Components.Face.#ctor*
        name: Face
        nameWithType: Face.Face
        qualifiedName: Engine.Core.Components.Face.Face
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Face.#ctor
  Engine.Core.Components.Face.GetVertexOnFace*:
    name:
      CSharp:
      - id: Engine.Core.Components.Face.GetVertexOnFace*
        name: GetVertexOnFace
        nameWithType: Face.GetVertexOnFace
        qualifiedName: Engine.Core.Components.Face.GetVertexOnFace
      VB:
      - id: Engine.Core.Components.Face.GetVertexOnFace*
        name: GetVertexOnFace
        nameWithType: Face.GetVertexOnFace
        qualifiedName: Engine.Core.Components.Face.GetVertexOnFace
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Face.GetVertexOnFace
  Engine.Core.Components.Face.SetFace*:
    name:
      CSharp:
      - id: Engine.Core.Components.Face.SetFace*
        name: SetFace
        nameWithType: Face.SetFace
        qualifiedName: Engine.Core.Components.Face.SetFace
      VB:
      - id: Engine.Core.Components.Face.SetFace*
        name: SetFace
        nameWithType: Face.SetFace
        qualifiedName: Engine.Core.Components.Face.SetFace
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Face.SetFace
  Engine.Core.Components.Face:
    name:
      CSharp:
      - id: Engine.Core.Components.Face
        name: Face
        nameWithType: Face
        qualifiedName: Engine.Core.Components.Face
      VB:
      - id: Engine.Core.Components.Face
        name: Face
        nameWithType: Face
        qualifiedName: Engine.Core.Components.Face
    isDefinition: true
    parent: Engine.Core.Components
    commentId: T:Engine.Core.Components.Face
  System.Collections.Generic.IEnumerable`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerable`1
  System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}
  System.Collections:
    name:
      CSharp:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
        isExternal: true
      VB:
      - name: System.Collections
        nameWithType: System.Collections
        qualifiedName: System.Collections
    isDefinition: true
    commentId: N:System.Collections
  System.Collections.IEnumerable:
    name:
      CSharp:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
      VB:
      - id: System.Collections.IEnumerable
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.IEnumerable
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerable
  System.Collections.Generic.IEnumerator`1:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.IEnumerator`1
  System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}
  System.Collections.IEnumerator:
    name:
      CSharp:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
      VB:
      - id: System.Collections.IEnumerator
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.IEnumerator
        isExternal: true
    isDefinition: true
    parent: System.Collections
    commentId: T:System.Collections.IEnumerator
  System.IDisposable:
    name:
      CSharp:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
      VB:
      - id: System.IDisposable
        name: IDisposable
        nameWithType: IDisposable
        qualifiedName: System.IDisposable
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.IDisposable
  Straight[]:
    name:
      CSharp:
      - id: Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Straight
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Straight
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Engine.Core.Components.LCS3:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      VB:
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
    isDefinition: true
    parent: Engine.Core.Components
    commentId: T:Engine.Core.Components.LCS3
  Engine.Core.Components.LCS3.Current*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.Current*
        name: Current
        nameWithType: LCS3.Current
        qualifiedName: Engine.Core.Components.LCS3.Current
      VB:
      - id: Engine.Core.Components.LCS3.Current*
        name: Current
        nameWithType: LCS3.Current
        qualifiedName: Engine.Core.Components.LCS3.Current
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.Current
  System.Collections.Generic.IEnumerator`1.Current:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator<T>.Current
        qualifiedName: System.Collections.Generic.IEnumerator<T>.Current
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator(Of T).Current
        qualifiedName: System.Collections.Generic.IEnumerator(Of T).Current
        isExternal: true
    isDefinition: true
    commentId: P:System.Collections.Generic.IEnumerator`1.Current
  System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}.Current:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator<LCS3>.Current
        qualifiedName: System.Collections.Generic.IEnumerator<Engine.Core.Components.LCS3>.Current
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator(Of LCS3).Current
        qualifiedName: System.Collections.Generic.IEnumerator(Of Engine.Core.Components.LCS3).Current
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1.Current
    parent: System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}
    commentId: P:System.Collections.Generic.IEnumerator{Engine.Core.Components.LCS3}.Current
  Engine.Core.Components.LCS3.GlobalPosition*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.GlobalPosition*
        name: GlobalPosition
        nameWithType: LCS3.GlobalPosition
        qualifiedName: Engine.Core.Components.LCS3.GlobalPosition
      VB:
      - id: Engine.Core.Components.LCS3.GlobalPosition*
        name: GlobalPosition
        nameWithType: LCS3.GlobalPosition
        qualifiedName: Engine.Core.Components.LCS3.GlobalPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.GlobalPosition
  Engine.Core.Components.LCS3.GlobalRotation*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.GlobalRotation*
        name: GlobalRotation
        nameWithType: LCS3.GlobalRotation
        qualifiedName: Engine.Core.Components.LCS3.GlobalRotation
      VB:
      - id: Engine.Core.Components.LCS3.GlobalRotation*
        name: GlobalRotation
        nameWithType: LCS3.GlobalRotation
        qualifiedName: Engine.Core.Components.LCS3.GlobalRotation
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.GlobalRotation
  Engine.Core.Components.LCS3.GlobalScale*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.GlobalScale*
        name: GlobalScale
        nameWithType: LCS3.GlobalScale
        qualifiedName: Engine.Core.Components.LCS3.GlobalScale
      VB:
      - id: Engine.Core.Components.LCS3.GlobalScale*
        name: GlobalScale
        nameWithType: LCS3.GlobalScale
        qualifiedName: Engine.Core.Components.LCS3.GlobalScale
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.GlobalScale
  Engine.Core.Components.LCS3.LocalPosition*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.LocalPosition*
        name: LocalPosition
        nameWithType: LCS3.LocalPosition
        qualifiedName: Engine.Core.Components.LCS3.LocalPosition
      VB:
      - id: Engine.Core.Components.LCS3.LocalPosition*
        name: LocalPosition
        nameWithType: LCS3.LocalPosition
        qualifiedName: Engine.Core.Components.LCS3.LocalPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.LocalPosition
  Engine.Core.Components.LCS3.LocalRotation*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.LocalRotation*
        name: LocalRotation
        nameWithType: LCS3.LocalRotation
        qualifiedName: Engine.Core.Components.LCS3.LocalRotation
      VB:
      - id: Engine.Core.Components.LCS3.LocalRotation*
        name: LocalRotation
        nameWithType: LCS3.LocalRotation
        qualifiedName: Engine.Core.Components.LCS3.LocalRotation
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.LocalRotation
  Engine.Core.Components.LCS3.LocalScale*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.LocalScale*
        name: LocalScale
        nameWithType: LCS3.LocalScale
        qualifiedName: Engine.Core.Components.LCS3.LocalScale
      VB:
      - id: Engine.Core.Components.LCS3.LocalScale*
        name: LocalScale
        nameWithType: LCS3.LocalScale
        qualifiedName: Engine.Core.Components.LCS3.LocalScale
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.LocalScale
  System.Collections.Generic.List{Engine.Core.Components.LCS3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: Engine.Core.Components.LCS3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Components.LCS3}
  Engine.Core.Components.LCS3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.#ctor*
        name: LCS3
        nameWithType: LCS3.LCS3
        qualifiedName: Engine.Core.Components.LCS3.LCS3
      VB:
      - id: Engine.Core.Components.LCS3.#ctor*
        name: LCS3
        nameWithType: LCS3.LCS3
        qualifiedName: Engine.Core.Components.LCS3.LCS3
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.#ctor
  Engine.Core.Components.LCS3.CalculateGlobals*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.CalculateGlobals*
        name: CalculateGlobals
        nameWithType: LCS3.CalculateGlobals
        qualifiedName: Engine.Core.Components.LCS3.CalculateGlobals
      VB:
      - id: Engine.Core.Components.LCS3.CalculateGlobals*
        name: CalculateGlobals
        nameWithType: LCS3.CalculateGlobals
        qualifiedName: Engine.Core.Components.LCS3.CalculateGlobals
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.CalculateGlobals
  Engine.Core.Components.LCS3.GetChilds*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.GetChilds*
        name: GetChilds
        nameWithType: LCS3.GetChilds
        qualifiedName: Engine.Core.Components.LCS3.GetChilds
      VB:
      - id: Engine.Core.Components.LCS3.GetChilds*
        name: GetChilds
        nameWithType: LCS3.GetChilds
        qualifiedName: Engine.Core.Components.LCS3.GetChilds
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.GetChilds
  Vector3[]:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  Engine.Core.Components.LCS3.AxisToGlobalUnitVectors*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors*
        name: AxisToGlobalUnitVectors
        nameWithType: LCS3.AxisToGlobalUnitVectors
        qualifiedName: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors
      VB:
      - id: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors*
        name: AxisToGlobalUnitVectors
        nameWithType: LCS3.AxisToGlobalUnitVectors
        qualifiedName: Engine.Core.Components.LCS3.AxisToGlobalUnitVectors
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.AxisToGlobalUnitVectors
  Engine.Core.Components.LCS3.GetEnumerator*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.GetEnumerator*
        name: GetEnumerator
        nameWithType: LCS3.GetEnumerator
        qualifiedName: Engine.Core.Components.LCS3.GetEnumerator
      VB:
      - id: Engine.Core.Components.LCS3.GetEnumerator*
        name: GetEnumerator
        nameWithType: LCS3.GetEnumerator
        qualifiedName: Engine.Core.Components.LCS3.GetEnumerator
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.GetEnumerator
  System.Collections.Generic.IEnumerable`1.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<T>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of T).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:System.Collections.Generic.IEnumerable`1.GetEnumerator
  System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<LCS3>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<Engine.Core.Components.LCS3>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of LCS3).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of Engine.Core.Components.LCS3).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}
    commentId: M:System.Collections.Generic.IEnumerable{Engine.Core.Components.LCS3}.GetEnumerator
  Engine.Core.Components.LCS3.MoveNext*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.MoveNext*
        name: MoveNext
        nameWithType: LCS3.MoveNext
        qualifiedName: Engine.Core.Components.LCS3.MoveNext
      VB:
      - id: Engine.Core.Components.LCS3.MoveNext*
        name: MoveNext
        nameWithType: LCS3.MoveNext
        qualifiedName: Engine.Core.Components.LCS3.MoveNext
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.MoveNext
  System.Collections.IEnumerator.MoveNext:
    name:
      CSharp:
      - id: System.Collections.IEnumerator.MoveNext
        name: MoveNext
        nameWithType: IEnumerator.MoveNext
        qualifiedName: System.Collections.IEnumerator.MoveNext
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IEnumerator.MoveNext
        name: MoveNext
        nameWithType: IEnumerator.MoveNext
        qualifiedName: System.Collections.IEnumerator.MoveNext
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IEnumerator
    commentId: M:System.Collections.IEnumerator.MoveNext
  Engine.Core.Components.LCS3.Reset*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.Reset*
        name: Reset
        nameWithType: LCS3.Reset
        qualifiedName: Engine.Core.Components.LCS3.Reset
      VB:
      - id: Engine.Core.Components.LCS3.Reset*
        name: Reset
        nameWithType: LCS3.Reset
        qualifiedName: Engine.Core.Components.LCS3.Reset
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.Reset
  System.Collections.IEnumerator.Reset:
    name:
      CSharp:
      - id: System.Collections.IEnumerator.Reset
        name: Reset
        nameWithType: IEnumerator.Reset
        qualifiedName: System.Collections.IEnumerator.Reset
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.IEnumerator.Reset
        name: Reset
        nameWithType: IEnumerator.Reset
        qualifiedName: System.Collections.IEnumerator.Reset
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Collections.IEnumerator
    commentId: M:System.Collections.IEnumerator.Reset
  Engine.Core.Components.LCS3.Dispose*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.Dispose*
        name: Dispose
        nameWithType: LCS3.Dispose
        qualifiedName: Engine.Core.Components.LCS3.Dispose
      VB:
      - id: Engine.Core.Components.LCS3.Dispose*
        name: Dispose
        nameWithType: LCS3.Dispose
        qualifiedName: Engine.Core.Components.LCS3.Dispose
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.Dispose
  System.IDisposable.Dispose:
    name:
      CSharp:
      - id: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        qualifiedName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.IDisposable.Dispose
        name: Dispose
        nameWithType: IDisposable.Dispose
        qualifiedName: System.IDisposable.Dispose
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.IDisposable
    commentId: M:System.IDisposable.Dispose
  Engine.Core.Components.LCS3.Finalize*:
    name:
      CSharp:
      - id: Engine.Core.Components.LCS3.Finalize*
        name: Finalize
        nameWithType: LCS3.Finalize
        qualifiedName: Engine.Core.Components.LCS3.Finalize
      VB:
      - id: Engine.Core.Components.LCS3.Finalize*
        name: Finalize
        nameWithType: LCS3.Finalize
        qualifiedName: Engine.Core.Components.LCS3.Finalize
    isDefinition: true
    commentId: Overload:Engine.Core.Components.LCS3.Finalize
  Engine.Core.Components.Mesh.VerticesCount*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.VerticesCount*
        name: VerticesCount
        nameWithType: Mesh.VerticesCount
        qualifiedName: Engine.Core.Components.Mesh.VerticesCount
      VB:
      - id: Engine.Core.Components.Mesh.VerticesCount*
        name: VerticesCount
        nameWithType: Mesh.VerticesCount
        qualifiedName: Engine.Core.Components.Mesh.VerticesCount
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.VerticesCount
  Engine.Core.Components.Mesh.EdgesCount*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.EdgesCount*
        name: EdgesCount
        nameWithType: Mesh.EdgesCount
        qualifiedName: Engine.Core.Components.Mesh.EdgesCount
      VB:
      - id: Engine.Core.Components.Mesh.EdgesCount*
        name: EdgesCount
        nameWithType: Mesh.EdgesCount
        qualifiedName: Engine.Core.Components.Mesh.EdgesCount
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.EdgesCount
  Engine.Core.Components.Mesh.FacesCount*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.FacesCount*
        name: FacesCount
        nameWithType: Mesh.FacesCount
        qualifiedName: Engine.Core.Components.Mesh.FacesCount
      VB:
      - id: Engine.Core.Components.Mesh.FacesCount*
        name: FacesCount
        nameWithType: Mesh.FacesCount
        qualifiedName: Engine.Core.Components.Mesh.FacesCount
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.FacesCount
  Engine.Core.Components.Mesh.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.#ctor*
        name: Mesh
        nameWithType: Mesh.Mesh
        qualifiedName: Engine.Core.Components.Mesh.Mesh
      VB:
      - id: Engine.Core.Components.Mesh.#ctor*
        name: Mesh
        nameWithType: Mesh.Mesh
        qualifiedName: Engine.Core.Components.Mesh.Mesh
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.#ctor
  System.Collections.Generic.List{Engine.Core.Components.Vertex}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.Vertex
        name: Vertex
        nameWithType: Vertex
        qualifiedName: Engine.Core.Components.Vertex
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Components.Vertex}
  System.Collections.Generic.List{Engine.Core.Components.Edge}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.Edge
        name: Edge
        nameWithType: Edge
        qualifiedName: Engine.Core.Components.Edge
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Components.Edge}
  System.Collections.Generic.List{Engine.Core.Components.Face}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Components.Face
        name: Face
        nameWithType: Face
        qualifiedName: Engine.Core.Components.Face
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Components.Face
        name: Face
        nameWithType: Face
        qualifiedName: Engine.Core.Components.Face
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Components.Face}
  Engine.Core.Components.Mesh.AddVertex*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.AddVertex*
        name: AddVertex
        nameWithType: Mesh.AddVertex
        qualifiedName: Engine.Core.Components.Mesh.AddVertex
      VB:
      - id: Engine.Core.Components.Mesh.AddVertex*
        name: AddVertex
        nameWithType: Mesh.AddVertex
        qualifiedName: Engine.Core.Components.Mesh.AddVertex
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.AddVertex
  Engine.Core.Components.Mesh.AddEdge*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.AddEdge*
        name: AddEdge
        nameWithType: Mesh.AddEdge
        qualifiedName: Engine.Core.Components.Mesh.AddEdge
      VB:
      - id: Engine.Core.Components.Mesh.AddEdge*
        name: AddEdge
        nameWithType: Mesh.AddEdge
        qualifiedName: Engine.Core.Components.Mesh.AddEdge
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.AddEdge
  Engine.Core.Components.Mesh.AddFace*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.AddFace*
        name: AddFace
        nameWithType: Mesh.AddFace
        qualifiedName: Engine.Core.Components.Mesh.AddFace
      VB:
      - id: Engine.Core.Components.Mesh.AddFace*
        name: AddFace
        nameWithType: Mesh.AddFace
        qualifiedName: Engine.Core.Components.Mesh.AddFace
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.AddFace
  Engine.Core.Components.Mesh.GetVertex*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.GetVertex*
        name: GetVertex
        nameWithType: Mesh.GetVertex
        qualifiedName: Engine.Core.Components.Mesh.GetVertex
      VB:
      - id: Engine.Core.Components.Mesh.GetVertex*
        name: GetVertex
        nameWithType: Mesh.GetVertex
        qualifiedName: Engine.Core.Components.Mesh.GetVertex
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.GetVertex
  Engine.Core.Components.Mesh.FindVertex*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.FindVertex*
        name: FindVertex
        nameWithType: Mesh.FindVertex
        qualifiedName: Engine.Core.Components.Mesh.FindVertex
      VB:
      - id: Engine.Core.Components.Mesh.FindVertex*
        name: FindVertex
        nameWithType: Mesh.FindVertex
        qualifiedName: Engine.Core.Components.Mesh.FindVertex
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.FindVertex
  Engine.Core.Components.Mesh.GetEdge*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.GetEdge*
        name: GetEdge
        nameWithType: Mesh.GetEdge
        qualifiedName: Engine.Core.Components.Mesh.GetEdge
      VB:
      - id: Engine.Core.Components.Mesh.GetEdge*
        name: GetEdge
        nameWithType: Mesh.GetEdge
        qualifiedName: Engine.Core.Components.Mesh.GetEdge
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.GetEdge
  Engine.Core.Components.Mesh.FindEdge*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.FindEdge*
        name: FindEdge
        nameWithType: Mesh.FindEdge
        qualifiedName: Engine.Core.Components.Mesh.FindEdge
      VB:
      - id: Engine.Core.Components.Mesh.FindEdge*
        name: FindEdge
        nameWithType: Mesh.FindEdge
        qualifiedName: Engine.Core.Components.Mesh.FindEdge
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.FindEdge
  Engine.Core.Components.Mesh.GetFace*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.GetFace*
        name: GetFace
        nameWithType: Mesh.GetFace
        qualifiedName: Engine.Core.Components.Mesh.GetFace
      VB:
      - id: Engine.Core.Components.Mesh.GetFace*
        name: GetFace
        nameWithType: Mesh.GetFace
        qualifiedName: Engine.Core.Components.Mesh.GetFace
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.GetFace
  Engine.Core.Components.Mesh.FindFace*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.FindFace*
        name: FindFace
        nameWithType: Mesh.FindFace
        qualifiedName: Engine.Core.Components.Mesh.FindFace
      VB:
      - id: Engine.Core.Components.Mesh.FindFace*
        name: FindFace
        nameWithType: Mesh.FindFace
        qualifiedName: Engine.Core.Components.Mesh.FindFace
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.FindFace
  Engine.Core.Components.Mesh.FindIndex*:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh.FindIndex*
        name: FindIndex
        nameWithType: Mesh.FindIndex
        qualifiedName: Engine.Core.Components.Mesh.FindIndex
      VB:
      - id: Engine.Core.Components.Mesh.FindIndex*
        name: FindIndex
        nameWithType: Mesh.FindIndex
        qualifiedName: Engine.Core.Components.Mesh.FindIndex
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Mesh.FindIndex
  Engine.Core.Components.Mesh:
    name:
      CSharp:
      - id: Engine.Core.Components.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Engine.Core.Components.Mesh
      VB:
      - id: Engine.Core.Components.Mesh
        name: Mesh
        nameWithType: Mesh
        qualifiedName: Engine.Core.Components.Mesh
    isDefinition: true
    commentId: T:Engine.Core.Components.Mesh
  Engine.Core.Components.Vertex.LocalPosition*:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex.LocalPosition*
        name: LocalPosition
        nameWithType: Vertex.LocalPosition
        qualifiedName: Engine.Core.Components.Vertex.LocalPosition
      VB:
      - id: Engine.Core.Components.Vertex.LocalPosition*
        name: LocalPosition
        nameWithType: Vertex.LocalPosition
        qualifiedName: Engine.Core.Components.Vertex.LocalPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Vertex.LocalPosition
  Engine.Core.Components.Vertex.GlobalPosition*:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex.GlobalPosition*
        name: GlobalPosition
        nameWithType: Vertex.GlobalPosition
        qualifiedName: Engine.Core.Components.Vertex.GlobalPosition
      VB:
      - id: Engine.Core.Components.Vertex.GlobalPosition*
        name: GlobalPosition
        nameWithType: Vertex.GlobalPosition
        qualifiedName: Engine.Core.Components.Vertex.GlobalPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Vertex.GlobalPosition
  Engine.Core.Components.Vertex.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex.#ctor*
        name: Vertex
        nameWithType: Vertex.Vertex
        qualifiedName: Engine.Core.Components.Vertex.Vertex
      VB:
      - id: Engine.Core.Components.Vertex.#ctor*
        name: Vertex
        nameWithType: Vertex.Vertex
        qualifiedName: Engine.Core.Components.Vertex.Vertex
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Vertex.#ctor
  Engine.Core.Components.Vertex.SetPosition*:
    name:
      CSharp:
      - id: Engine.Core.Components.Vertex.SetPosition*
        name: SetPosition
        nameWithType: Vertex.SetPosition
        qualifiedName: Engine.Core.Components.Vertex.SetPosition
      VB:
      - id: Engine.Core.Components.Vertex.SetPosition*
        name: SetPosition
        nameWithType: Vertex.SetPosition
        qualifiedName: Engine.Core.Components.Vertex.SetPosition
    isDefinition: true
    commentId: Overload:Engine.Core.Components.Vertex.SetPosition
  Engine.Core.Maths.AffineTransformationMatrix:
    name:
      CSharp:
      - id: Engine.Core.Maths.AffineTransformationMatrix
        name: AffineTransformationMatrix
        nameWithType: AffineTransformationMatrix
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix
      VB:
      - id: Engine.Core.Maths.AffineTransformationMatrix
        name: AffineTransformationMatrix
        nameWithType: AffineTransformationMatrix
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.AffineTransformationMatrix
  Engine.Core.Maths:
    name:
      CSharp:
      - name: Engine.Core.Maths
        nameWithType: Engine.Core.Maths
        qualifiedName: Engine.Core.Maths
      VB:
      - name: Engine.Core.Maths
        nameWithType: Engine.Core.Maths
        qualifiedName: Engine.Core.Maths
    isDefinition: true
    commentId: N:Engine.Core.Maths
  Engine.Core.Maths.Vector3:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      VB:
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Vector3
  Engine.Core.Maths.RotationMatrix3x3:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix3x3
        name: RotationMatrix3x3
        nameWithType: RotationMatrix3x3
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3
      VB:
      - id: Engine.Core.Maths.RotationMatrix3x3
        name: RotationMatrix3x3
        nameWithType: RotationMatrix3x3
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationMatrix3x3
  Engine.Core.Maths.Quaternion:
    name:
      CSharp:
      - id: Engine.Core.Maths.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Engine.Core.Maths.Quaternion
      VB:
      - id: Engine.Core.Maths.Quaternion
        name: Quaternion
        nameWithType: Quaternion
        qualifiedName: Engine.Core.Maths.Quaternion
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Quaternion
  Engine.Core.Maths.DilationMatrix3x3:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix3x3
        name: DilationMatrix3x3
        nameWithType: DilationMatrix3x3
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3
      VB:
      - id: Engine.Core.Maths.DilationMatrix3x3
        name: DilationMatrix3x3
        nameWithType: DilationMatrix3x3
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.DilationMatrix3x3
  Engine.Core.Maths.ShearMatrix3D:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D
        name: ShearMatrix3D
        nameWithType: ShearMatrix3D
        qualifiedName: Engine.Core.Maths.ShearMatrix3D
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D
        name: ShearMatrix3D
        nameWithType: ShearMatrix3D
        qualifiedName: Engine.Core.Maths.ShearMatrix3D
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.ShearMatrix3D
  Engine.Core.Maths.TransformationConvention:
    name:
      CSharp:
      - id: Engine.Core.Maths.TransformationConvention
        name: TransformationConvention
        nameWithType: TransformationConvention
        qualifiedName: Engine.Core.Maths.TransformationConvention
      VB:
      - id: Engine.Core.Maths.TransformationConvention
        name: TransformationConvention
        nameWithType: TransformationConvention
        qualifiedName: Engine.Core.Maths.TransformationConvention
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.TransformationConvention
  Engine.Core.Maths.MatrixMxN:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN
        name: MatrixMxN
        nameWithType: MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN
      VB:
      - id: Engine.Core.Maths.MatrixMxN
        name: MatrixMxN
        nameWithType: MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.MatrixMxN
  Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor*
        name: AffineTransformationMatrix4x4
        nameWithType: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4
      VB:
      - id: Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor*
        name: AffineTransformationMatrix4x4
        nameWithType: AffineTransformationMatrix4x4.AffineTransformationMatrix4x4
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix4x4.AffineTransformationMatrix4x4
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AffineTransformationMatrix4x4.#ctor
  Engine.Core.Maths.RotationConvention:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationConvention
        name: RotationConvention
        nameWithType: RotationConvention
        qualifiedName: Engine.Core.Maths.RotationConvention
      VB:
      - id: Engine.Core.Maths.RotationConvention
        name: RotationConvention
        nameWithType: RotationConvention
        qualifiedName: Engine.Core.Maths.RotationConvention
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationConvention
  Engine.Core.Maths.AffineTransformationMatrix4x4:
    name:
      CSharp:
      - id: Engine.Core.Maths.AffineTransformationMatrix4x4
        name: AffineTransformationMatrix4x4
        nameWithType: AffineTransformationMatrix4x4
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix4x4
      VB:
      - id: Engine.Core.Maths.AffineTransformationMatrix4x4
        name: AffineTransformationMatrix4x4
        nameWithType: AffineTransformationMatrix4x4
        qualifiedName: Engine.Core.Maths.AffineTransformationMatrix4x4
    isDefinition: true
    commentId: T:Engine.Core.Maths.AffineTransformationMatrix4x4
  Engine.Core.Maths.IMatrix:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
      VB:
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.IMatrix
  Engine.Core.Maths.AugmentedMatrix.Matrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix.Matrix*
        name: Matrix
        nameWithType: AugmentedMatrix.Matrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.Matrix
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix.Matrix*
        name: Matrix
        nameWithType: AugmentedMatrix.Matrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.Matrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AugmentedMatrix.Matrix
  Engine.Core.Maths.AugmentedMatrix.Augmentation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix.Augmentation*
        name: Augmentation
        nameWithType: AugmentedMatrix.Augmentation
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.Augmentation
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix.Augmentation*
        name: Augmentation
        nameWithType: AugmentedMatrix.Augmentation
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.Augmentation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AugmentedMatrix.Augmentation
  Engine.Core.Maths.AugmentedMatrix.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix.#ctor*
        name: AugmentedMatrix
        nameWithType: AugmentedMatrix.AugmentedMatrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.AugmentedMatrix
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix.#ctor*
        name: AugmentedMatrix
        nameWithType: AugmentedMatrix.AugmentedMatrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.AugmentedMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AugmentedMatrix.#ctor
  Engine.Core.Maths.MatrixOperation:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      VB:
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.MatrixOperation
  Engine.Core.Maths.AugmentedMatrix.RowOperation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix.RowOperation*
        name: RowOperation
        nameWithType: AugmentedMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.RowOperation
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix.RowOperation*
        name: RowOperation
        nameWithType: AugmentedMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.RowOperation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AugmentedMatrix.RowOperation
  Engine.Core.Maths.AugmentedMatrix.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix.SwapRows*
        name: SwapRows
        nameWithType: AugmentedMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.SwapRows
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix.SwapRows*
        name: SwapRows
        nameWithType: AugmentedMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.AugmentedMatrix.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.AugmentedMatrix.SwapRows
  Engine.Core.Maths.AugmentedMatrix:
    name:
      CSharp:
      - id: Engine.Core.Maths.AugmentedMatrix
        name: AugmentedMatrix
        nameWithType: AugmentedMatrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix
      VB:
      - id: Engine.Core.Maths.AugmentedMatrix
        name: AugmentedMatrix
        nameWithType: AugmentedMatrix
        qualifiedName: Engine.Core.Maths.AugmentedMatrix
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.AugmentedMatrix
  Engine.Core.Maths.DilationMatrix2x2.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix2x2.#ctor*
        name: DilationMatrix2x2
        nameWithType: DilationMatrix2x2.DilationMatrix2x2
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2.DilationMatrix2x2
      VB:
      - id: Engine.Core.Maths.DilationMatrix2x2.#ctor*
        name: DilationMatrix2x2
        nameWithType: DilationMatrix2x2.DilationMatrix2x2
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2.DilationMatrix2x2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.DilationMatrix2x2.#ctor
  Engine.Core.Maths.DilationMatrix2x2:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix2x2
        name: DilationMatrix2x2
        nameWithType: DilationMatrix2x2
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2
      VB:
      - id: Engine.Core.Maths.DilationMatrix2x2
        name: DilationMatrix2x2
        nameWithType: DilationMatrix2x2
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.DilationMatrix2x2
  Engine.Core.Maths.DilationMatrix2x2.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix2x2.op_Implicit*
        name: Implicit
        nameWithType: DilationMatrix2x2.Implicit
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2.Implicit
      VB:
      - id: Engine.Core.Maths.DilationMatrix2x2.op_Implicit*
        name: Widening
        nameWithType: DilationMatrix2x2.Widening
        qualifiedName: Engine.Core.Maths.DilationMatrix2x2.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.DilationMatrix2x2.op_Implicit
  Engine.Core.Maths.Matrix3x3:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3
        name: Matrix3x3
        nameWithType: Matrix3x3
        qualifiedName: Engine.Core.Maths.Matrix3x3
      VB:
      - id: Engine.Core.Maths.Matrix3x3
        name: Matrix3x3
        nameWithType: Matrix3x3
        qualifiedName: Engine.Core.Maths.Matrix3x3
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Matrix3x3
  Engine.Core.Maths.DilationMatrix3x3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix3x3.#ctor*
        name: DilationMatrix3x3
        nameWithType: DilationMatrix3x3.DilationMatrix3x3
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.DilationMatrix3x3
      VB:
      - id: Engine.Core.Maths.DilationMatrix3x3.#ctor*
        name: DilationMatrix3x3
        nameWithType: DilationMatrix3x3.DilationMatrix3x3
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.DilationMatrix3x3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.DilationMatrix3x3.#ctor
  Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4*:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: DilationMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4
      VB:
      - id: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: DilationMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.DilationMatrix3x3.ToMatrix4x4
  Engine.Core.Maths.DilationMatrix3x3.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.DilationMatrix3x3.op_Implicit*
        name: Implicit
        nameWithType: DilationMatrix3x3.Implicit
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.Implicit
      VB:
      - id: Engine.Core.Maths.DilationMatrix3x3.op_Implicit*
        name: Widening
        nameWithType: DilationMatrix3x3.Widening
        qualifiedName: Engine.Core.Maths.DilationMatrix3x3.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.DilationMatrix3x3.op_Implicit
  Engine.Core.Maths.Axis:
    name:
      CSharp:
      - id: Engine.Core.Maths.Axis
        name: Axis
        nameWithType: Axis
        qualifiedName: Engine.Core.Maths.Axis
      VB:
      - id: Engine.Core.Maths.Axis
        name: Axis
        nameWithType: Axis
        qualifiedName: Engine.Core.Maths.Axis
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Axis
  Engine.Core.Maths.ShearConvention:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearConvention
        name: ShearConvention
        nameWithType: ShearConvention
        qualifiedName: Engine.Core.Maths.ShearConvention
      VB:
      - id: Engine.Core.Maths.ShearConvention
        name: ShearConvention
        nameWithType: ShearConvention
        qualifiedName: Engine.Core.Maths.ShearConvention
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.ShearConvention
  Engine.Core.Maths.RotationType:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationType
        name: RotationType
        nameWithType: RotationType
        qualifiedName: Engine.Core.Maths.RotationType
      VB:
      - id: Engine.Core.Maths.RotationType
        name: RotationType
        nameWithType: RotationType
        qualifiedName: Engine.Core.Maths.RotationType
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationType
  Engine.Core.Maths.BasePlane:
    name:
      CSharp:
      - id: Engine.Core.Maths.BasePlane
        name: BasePlane
        nameWithType: BasePlane
        qualifiedName: Engine.Core.Maths.BasePlane
      VB:
      - id: Engine.Core.Maths.BasePlane
        name: BasePlane
        nameWithType: BasePlane
        qualifiedName: Engine.Core.Maths.BasePlane
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.BasePlane
  Engine.Core.Maths.BaseDirections2D:
    name:
      CSharp:
      - id: Engine.Core.Maths.BaseDirections2D
        name: BaseDirections2D
        nameWithType: BaseDirections2D
        qualifiedName: Engine.Core.Maths.BaseDirections2D
      VB:
      - id: Engine.Core.Maths.BaseDirections2D
        name: BaseDirections2D
        nameWithType: BaseDirections2D
        qualifiedName: Engine.Core.Maths.BaseDirections2D
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.BaseDirections2D
  Engine.Core.Maths.RotationMeasure:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMeasure
        name: RotationMeasure
        nameWithType: RotationMeasure
        qualifiedName: Engine.Core.Maths.RotationMeasure
      VB:
      - id: Engine.Core.Maths.RotationMeasure
        name: RotationMeasure
        nameWithType: RotationMeasure
        qualifiedName: Engine.Core.Maths.RotationMeasure
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationMeasure
  System.Collections.Generic.IEnumerator{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerator`1
        name: IEnumerator
        nameWithType: IEnumerator
        qualifiedName: System.Collections.Generic.IEnumerator
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerator{System.Single}
  Engine.Core.Maths.FloatEnumerator.Current*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.Current*
        name: Current
        nameWithType: FloatEnumerator.Current
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Current
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.Current*
        name: Current
        nameWithType: FloatEnumerator.Current
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Current
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.Current
  System.Collections.Generic.IEnumerator{System.Single}.Current:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator<Single>.Current
        qualifiedName: System.Collections.Generic.IEnumerator<System.Single>.Current
        isExternal: true
      VB:
      - id: System.Collections.Generic.IEnumerator`1.Current
        name: Current
        nameWithType: IEnumerator(Of Single).Current
        qualifiedName: System.Collections.Generic.IEnumerator(Of System.Single).Current
        isExternal: true
    isDefinition: false
    definition: System.Collections.Generic.IEnumerator`1.Current
    parent: System.Collections.Generic.IEnumerator{System.Single}
    commentId: P:System.Collections.Generic.IEnumerator{System.Single}.Current
  Engine.Core.Maths.FloatEnumerator.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.#ctor*
        name: FloatEnumerator
        nameWithType: FloatEnumerator.FloatEnumerator
        qualifiedName: Engine.Core.Maths.FloatEnumerator.FloatEnumerator
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.#ctor*
        name: FloatEnumerator
        nameWithType: FloatEnumerator.FloatEnumerator
        qualifiedName: Engine.Core.Maths.FloatEnumerator.FloatEnumerator
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.#ctor
  Engine.Core.Maths.FloatEnumerator.MoveNext*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.MoveNext*
        name: MoveNext
        nameWithType: FloatEnumerator.MoveNext
        qualifiedName: Engine.Core.Maths.FloatEnumerator.MoveNext
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.MoveNext*
        name: MoveNext
        nameWithType: FloatEnumerator.MoveNext
        qualifiedName: Engine.Core.Maths.FloatEnumerator.MoveNext
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.MoveNext
  Engine.Core.Maths.FloatEnumerator.Reset*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.Reset*
        name: Reset
        nameWithType: FloatEnumerator.Reset
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Reset
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.Reset*
        name: Reset
        nameWithType: FloatEnumerator.Reset
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Reset
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.Reset
  Engine.Core.Maths.FloatEnumerator.Dispose*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.Dispose*
        name: Dispose
        nameWithType: FloatEnumerator.Dispose
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Dispose
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.Dispose*
        name: Dispose
        nameWithType: FloatEnumerator.Dispose
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Dispose
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.Dispose
  Engine.Core.Maths.FloatEnumerator.Finalize*:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator.Finalize*
        name: Finalize
        nameWithType: FloatEnumerator.Finalize
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Finalize
      VB:
      - id: Engine.Core.Maths.FloatEnumerator.Finalize*
        name: Finalize
        nameWithType: FloatEnumerator.Finalize
        qualifiedName: Engine.Core.Maths.FloatEnumerator.Finalize
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.FloatEnumerator.Finalize
  Engine.Core.Maths.FloatEnumerator:
    name:
      CSharp:
      - id: Engine.Core.Maths.FloatEnumerator
        name: FloatEnumerator
        nameWithType: FloatEnumerator
        qualifiedName: Engine.Core.Maths.FloatEnumerator
      VB:
      - id: Engine.Core.Maths.FloatEnumerator
        name: FloatEnumerator
        nameWithType: FloatEnumerator
        qualifiedName: Engine.Core.Maths.FloatEnumerator
    isDefinition: true
    commentId: T:Engine.Core.Maths.FloatEnumerator
  Engine.Core.Maths.Gauss.EliminationResult:
    name:
      CSharp:
      - id: Engine.Core.Maths.Gauss.EliminationResult
        name: Gauss.EliminationResult
        nameWithType: Gauss.EliminationResult
        qualifiedName: Engine.Core.Maths.Gauss.EliminationResult
      VB:
      - id: Engine.Core.Maths.Gauss.EliminationResult
        name: Gauss.EliminationResult
        nameWithType: Gauss.EliminationResult
        qualifiedName: Engine.Core.Maths.Gauss.EliminationResult
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Gauss.EliminationResult
  Engine.Core.Maths.Gauss.GaussianElimination*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Gauss.GaussianElimination*
        name: GaussianElimination
        nameWithType: Gauss.GaussianElimination
        qualifiedName: Engine.Core.Maths.Gauss.GaussianElimination
      VB:
      - id: Engine.Core.Maths.Gauss.GaussianElimination*
        name: GaussianElimination
        nameWithType: Gauss.GaussianElimination
        qualifiedName: Engine.Core.Maths.Gauss.GaussianElimination
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Gauss.GaussianElimination
  Engine.Core.Maths.Gauss:
    name:
      CSharp:
      - id: Engine.Core.Maths.Gauss
        name: Gauss
        nameWithType: Gauss
        qualifiedName: Engine.Core.Maths.Gauss
      VB:
      - id: Engine.Core.Maths.Gauss
        name: Gauss
        nameWithType: Gauss
        qualifiedName: Engine.Core.Maths.Gauss
    isDefinition: true
    commentId: T:Engine.Core.Maths.Gauss
  System.Collections.Generic.List{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Single}
  Engine.Core.Maths.Straight:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Engine.Core.Maths.Straight
      VB:
      - id: Engine.Core.Maths.Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Engine.Core.Maths.Straight
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Straight
  Engine.Core.Maths.Plane:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Engine.Core.Maths.Plane
      VB:
      - id: Engine.Core.Maths.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Engine.Core.Maths.Plane
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Plane
  Engine.Core.Maths.Straight[]:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Engine.Core.Maths.Straight
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Engine.Core.Maths.Straight
        name: Straight
        nameWithType: Straight
        qualifiedName: Engine.Core.Maths.Straight
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  System.Collections.Generic.List{LCS3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: LCS3
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: LCS3
        name: LCS3
        nameWithType: LCS3
        qualifiedName: LCS3
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{LCS3}
  Engine.Core.Maths.GCS3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.GCS3.#ctor*
        name: GCS3
        nameWithType: GCS3.GCS3
        qualifiedName: Engine.Core.Maths.GCS3.GCS3
      VB:
      - id: Engine.Core.Maths.GCS3.#ctor*
        name: GCS3
        nameWithType: GCS3.GCS3
        qualifiedName: Engine.Core.Maths.GCS3.GCS3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.GCS3.#ctor
  Engine.Core.Maths.GCS3.Add*:
    name:
      CSharp:
      - id: Engine.Core.Maths.GCS3.Add*
        name: Add
        nameWithType: GCS3.Add
        qualifiedName: Engine.Core.Maths.GCS3.Add
      VB:
      - id: Engine.Core.Maths.GCS3.Add*
        name: Add
        nameWithType: GCS3.Add
        qualifiedName: Engine.Core.Maths.GCS3.Add
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.GCS3.Add
  Engine.Core.Maths.GCS3.Remove*:
    name:
      CSharp:
      - id: Engine.Core.Maths.GCS3.Remove*
        name: Remove
        nameWithType: GCS3.Remove
        qualifiedName: Engine.Core.Maths.GCS3.Remove
      VB:
      - id: Engine.Core.Maths.GCS3.Remove*
        name: Remove
        nameWithType: GCS3.Remove
        qualifiedName: Engine.Core.Maths.GCS3.Remove
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.GCS3.Remove
  LightSource:
    name:
      CSharp:
      - id: LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: LightSource
        isExternal: true
      VB:
      - id: LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: LightSource
        isExternal: true
    isDefinition: true
  Engine.Core.Maths.GCS3:
    name:
      CSharp:
      - id: Engine.Core.Maths.GCS3
        name: GCS3
        nameWithType: GCS3
        qualifiedName: Engine.Core.Maths.GCS3
      VB:
      - id: Engine.Core.Maths.GCS3
        name: GCS3
        nameWithType: GCS3
        qualifiedName: Engine.Core.Maths.GCS3
    isDefinition: true
    commentId: T:Engine.Core.Maths.GCS3
  Engine.Core.Maths.IMatrix.RowCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.RowCount*
        name: RowCount
        nameWithType: IMatrix.RowCount
        qualifiedName: Engine.Core.Maths.IMatrix.RowCount
      VB:
      - id: Engine.Core.Maths.IMatrix.RowCount*
        name: RowCount
        nameWithType: IMatrix.RowCount
        qualifiedName: Engine.Core.Maths.IMatrix.RowCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.RowCount
  Engine.Core.Maths.IMatrix.ColumnCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.ColumnCount*
        name: ColumnCount
        nameWithType: IMatrix.ColumnCount
        qualifiedName: Engine.Core.Maths.IMatrix.ColumnCount
      VB:
      - id: Engine.Core.Maths.IMatrix.ColumnCount*
        name: ColumnCount
        nameWithType: IMatrix.ColumnCount
        qualifiedName: Engine.Core.Maths.IMatrix.ColumnCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.ColumnCount
  Engine.Core.Maths.IMatrix.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.Item*
        name: Item
        nameWithType: IMatrix.Item
        qualifiedName: Engine.Core.Maths.IMatrix.Item
      VB:
      - id: Engine.Core.Maths.IMatrix.Item*
        name: Item
        nameWithType: IMatrix.Item
        qualifiedName: Engine.Core.Maths.IMatrix.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.Item
  Engine.Core.Maths.IMatrix.RowOperation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.RowOperation*
        name: RowOperation
        nameWithType: IMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.IMatrix.RowOperation
      VB:
      - id: Engine.Core.Maths.IMatrix.RowOperation*
        name: RowOperation
        nameWithType: IMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.IMatrix.RowOperation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.RowOperation
  Engine.Core.Maths.IMatrix.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.SwapRows*
        name: SwapRows
        nameWithType: IMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.IMatrix.SwapRows
      VB:
      - id: Engine.Core.Maths.IMatrix.SwapRows*
        name: SwapRows
        nameWithType: IMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.IMatrix.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.SwapRows
  Engine.Core.Maths.IMatrix.Operation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.Operation*
        name: Operation
        nameWithType: IMatrix.Operation
        qualifiedName: Engine.Core.Maths.IMatrix.Operation
      VB:
      - id: Engine.Core.Maths.IMatrix.Operation*
        name: Operation
        nameWithType: IMatrix.Operation
        qualifiedName: Engine.Core.Maths.IMatrix.Operation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.IMatrix.Operation
  Engine.Core.Maths.Mathf.Acos*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Acos*
        name: Acos
        nameWithType: Mathf.Acos
        qualifiedName: Engine.Core.Maths.Mathf.Acos
      VB:
      - id: Engine.Core.Maths.Mathf.Acos*
        name: Acos
        nameWithType: Mathf.Acos
        qualifiedName: Engine.Core.Maths.Mathf.Acos
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Acos
  Engine.Core.Maths.Mathf.Asin*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Asin*
        name: Asin
        nameWithType: Mathf.Asin
        qualifiedName: Engine.Core.Maths.Mathf.Asin
      VB:
      - id: Engine.Core.Maths.Mathf.Asin*
        name: Asin
        nameWithType: Mathf.Asin
        qualifiedName: Engine.Core.Maths.Mathf.Asin
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Asin
  Engine.Core.Maths.Mathf.Atan*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Atan*
        name: Atan
        nameWithType: Mathf.Atan
        qualifiedName: Engine.Core.Maths.Mathf.Atan
      VB:
      - id: Engine.Core.Maths.Mathf.Atan*
        name: Atan
        nameWithType: Mathf.Atan
        qualifiedName: Engine.Core.Maths.Mathf.Atan
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Atan
  Engine.Core.Maths.Mathf.Abs*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Abs*
        name: Abs
        nameWithType: Mathf.Abs
        qualifiedName: Engine.Core.Maths.Mathf.Abs
      VB:
      - id: Engine.Core.Maths.Mathf.Abs*
        name: Abs
        nameWithType: Mathf.Abs
        qualifiedName: Engine.Core.Maths.Mathf.Abs
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Abs
  Engine.Core.Maths.Mathf.Atan2*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Atan2*
        name: Atan2
        nameWithType: Mathf.Atan2
        qualifiedName: Engine.Core.Maths.Mathf.Atan2
      VB:
      - id: Engine.Core.Maths.Mathf.Atan2*
        name: Atan2
        nameWithType: Mathf.Atan2
        qualifiedName: Engine.Core.Maths.Mathf.Atan2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Atan2
  Engine.Core.Maths.Mathf.Ceiling*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Ceiling*
        name: Ceiling
        nameWithType: Mathf.Ceiling
        qualifiedName: Engine.Core.Maths.Mathf.Ceiling
      VB:
      - id: Engine.Core.Maths.Mathf.Ceiling*
        name: Ceiling
        nameWithType: Mathf.Ceiling
        qualifiedName: Engine.Core.Maths.Mathf.Ceiling
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Ceiling
  Engine.Core.Maths.Mathf.Cos*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Cos*
        name: Cos
        nameWithType: Mathf.Cos
        qualifiedName: Engine.Core.Maths.Mathf.Cos
      VB:
      - id: Engine.Core.Maths.Mathf.Cos*
        name: Cos
        nameWithType: Mathf.Cos
        qualifiedName: Engine.Core.Maths.Mathf.Cos
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Cos
  Engine.Core.Maths.Mathf.Cosh*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Cosh*
        name: Cosh
        nameWithType: Mathf.Cosh
        qualifiedName: Engine.Core.Maths.Mathf.Cosh
      VB:
      - id: Engine.Core.Maths.Mathf.Cosh*
        name: Cosh
        nameWithType: Mathf.Cosh
        qualifiedName: Engine.Core.Maths.Mathf.Cosh
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Cosh
  Engine.Core.Maths.Mathf.Cot*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Cot*
        name: Cot
        nameWithType: Mathf.Cot
        qualifiedName: Engine.Core.Maths.Mathf.Cot
      VB:
      - id: Engine.Core.Maths.Mathf.Cot*
        name: Cot
        nameWithType: Mathf.Cot
        qualifiedName: Engine.Core.Maths.Mathf.Cot
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Cot
  Engine.Core.Maths.Mathf.Sec*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sec*
        name: Sec
        nameWithType: Mathf.Sec
        qualifiedName: Engine.Core.Maths.Mathf.Sec
      VB:
      - id: Engine.Core.Maths.Mathf.Sec*
        name: Sec
        nameWithType: Mathf.Sec
        qualifiedName: Engine.Core.Maths.Mathf.Sec
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sec
  Engine.Core.Maths.Mathf.Csc*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Csc*
        name: Csc
        nameWithType: Mathf.Csc
        qualifiedName: Engine.Core.Maths.Mathf.Csc
      VB:
      - id: Engine.Core.Maths.Mathf.Csc*
        name: Csc
        nameWithType: Mathf.Csc
        qualifiedName: Engine.Core.Maths.Mathf.Csc
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Csc
  Engine.Core.Maths.Mathf.Exp*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Exp*
        name: Exp
        nameWithType: Mathf.Exp
        qualifiedName: Engine.Core.Maths.Mathf.Exp
      VB:
      - id: Engine.Core.Maths.Mathf.Exp*
        name: Exp
        nameWithType: Mathf.Exp
        qualifiedName: Engine.Core.Maths.Mathf.Exp
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Exp
  Engine.Core.Maths.Mathf.Floor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Floor*
        name: Floor
        nameWithType: Mathf.Floor
        qualifiedName: Engine.Core.Maths.Mathf.Floor
      VB:
      - id: Engine.Core.Maths.Mathf.Floor*
        name: Floor
        nameWithType: Mathf.Floor
        qualifiedName: Engine.Core.Maths.Mathf.Floor
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Floor
  Engine.Core.Maths.Mathf.IEEERemainder*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.IEEERemainder*
        name: IEEERemainder
        nameWithType: Mathf.IEEERemainder
        qualifiedName: Engine.Core.Maths.Mathf.IEEERemainder
      VB:
      - id: Engine.Core.Maths.Mathf.IEEERemainder*
        name: IEEERemainder
        nameWithType: Mathf.IEEERemainder
        qualifiedName: Engine.Core.Maths.Mathf.IEEERemainder
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.IEEERemainder
  Engine.Core.Maths.Mathf.Log*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Log*
        name: Log
        nameWithType: Mathf.Log
        qualifiedName: Engine.Core.Maths.Mathf.Log
      VB:
      - id: Engine.Core.Maths.Mathf.Log*
        name: Log
        nameWithType: Mathf.Log
        qualifiedName: Engine.Core.Maths.Mathf.Log
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Log
  Engine.Core.Maths.Mathf.Log10*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Log10*
        name: Log10
        nameWithType: Mathf.Log10
        qualifiedName: Engine.Core.Maths.Mathf.Log10
      VB:
      - id: Engine.Core.Maths.Mathf.Log10*
        name: Log10
        nameWithType: Mathf.Log10
        qualifiedName: Engine.Core.Maths.Mathf.Log10
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Log10
  Engine.Core.Maths.Mathf.Max*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Max*
        name: Max
        nameWithType: Mathf.Max
        qualifiedName: Engine.Core.Maths.Mathf.Max
      VB:
      - id: Engine.Core.Maths.Mathf.Max*
        name: Max
        nameWithType: Mathf.Max
        qualifiedName: Engine.Core.Maths.Mathf.Max
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Max
  Engine.Core.Maths.Mathf.Min*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Min*
        name: Min
        nameWithType: Mathf.Min
        qualifiedName: Engine.Core.Maths.Mathf.Min
      VB:
      - id: Engine.Core.Maths.Mathf.Min*
        name: Min
        nameWithType: Mathf.Min
        qualifiedName: Engine.Core.Maths.Mathf.Min
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Min
  Engine.Core.Maths.Mathf.Pow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Pow*
        name: Pow
        nameWithType: Mathf.Pow
        qualifiedName: Engine.Core.Maths.Mathf.Pow
      VB:
      - id: Engine.Core.Maths.Mathf.Pow*
        name: Pow
        nameWithType: Mathf.Pow
        qualifiedName: Engine.Core.Maths.Mathf.Pow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Pow
  Engine.Core.Maths.Mathf.Round*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Round*
        name: Round
        nameWithType: Mathf.Round
        qualifiedName: Engine.Core.Maths.Mathf.Round
      VB:
      - id: Engine.Core.Maths.Mathf.Round*
        name: Round
        nameWithType: Mathf.Round
        qualifiedName: Engine.Core.Maths.Mathf.Round
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Round
  System.MidpointRounding:
    name:
      CSharp:
      - id: System.MidpointRounding
        name: MidpointRounding
        nameWithType: MidpointRounding
        qualifiedName: System.MidpointRounding
        isExternal: true
      VB:
      - id: System.MidpointRounding
        name: MidpointRounding
        nameWithType: MidpointRounding
        qualifiedName: System.MidpointRounding
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.MidpointRounding
  Engine.Core.Maths.Mathf.RoundToInt*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.RoundToInt*
        name: RoundToInt
        nameWithType: Mathf.RoundToInt
        qualifiedName: Engine.Core.Maths.Mathf.RoundToInt
      VB:
      - id: Engine.Core.Maths.Mathf.RoundToInt*
        name: RoundToInt
        nameWithType: Mathf.RoundToInt
        qualifiedName: Engine.Core.Maths.Mathf.RoundToInt
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.RoundToInt
  Engine.Core.Maths.Mathf.Sign*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sign*
        name: Sign
        nameWithType: Mathf.Sign
        qualifiedName: Engine.Core.Maths.Mathf.Sign
      VB:
      - id: Engine.Core.Maths.Mathf.Sign*
        name: Sign
        nameWithType: Mathf.Sign
        qualifiedName: Engine.Core.Maths.Mathf.Sign
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sign
  Engine.Core.Maths.Mathf.Sin*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sin*
        name: Sin
        nameWithType: Mathf.Sin
        qualifiedName: Engine.Core.Maths.Mathf.Sin
      VB:
      - id: Engine.Core.Maths.Mathf.Sin*
        name: Sin
        nameWithType: Mathf.Sin
        qualifiedName: Engine.Core.Maths.Mathf.Sin
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sin
  Engine.Core.Maths.Mathf.Sinh*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sinh*
        name: Sinh
        nameWithType: Mathf.Sinh
        qualifiedName: Engine.Core.Maths.Mathf.Sinh
      VB:
      - id: Engine.Core.Maths.Mathf.Sinh*
        name: Sinh
        nameWithType: Mathf.Sinh
        qualifiedName: Engine.Core.Maths.Mathf.Sinh
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sinh
  Engine.Core.Maths.Mathf.Sqrt*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sqrt*
        name: Sqrt
        nameWithType: Mathf.Sqrt
        qualifiedName: Engine.Core.Maths.Mathf.Sqrt
      VB:
      - id: Engine.Core.Maths.Mathf.Sqrt*
        name: Sqrt
        nameWithType: Mathf.Sqrt
        qualifiedName: Engine.Core.Maths.Mathf.Sqrt
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sqrt
  Engine.Core.Maths.Mathf.NthSqrt*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.NthSqrt*
        name: NthSqrt
        nameWithType: Mathf.NthSqrt
        qualifiedName: Engine.Core.Maths.Mathf.NthSqrt
      VB:
      - id: Engine.Core.Maths.Mathf.NthSqrt*
        name: NthSqrt
        nameWithType: Mathf.NthSqrt
        qualifiedName: Engine.Core.Maths.Mathf.NthSqrt
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.NthSqrt
  Engine.Core.Maths.Mathf.Tan*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Tan*
        name: Tan
        nameWithType: Mathf.Tan
        qualifiedName: Engine.Core.Maths.Mathf.Tan
      VB:
      - id: Engine.Core.Maths.Mathf.Tan*
        name: Tan
        nameWithType: Mathf.Tan
        qualifiedName: Engine.Core.Maths.Mathf.Tan
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Tan
  Engine.Core.Maths.Mathf.Tanh*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Tanh*
        name: Tanh
        nameWithType: Mathf.Tanh
        qualifiedName: Engine.Core.Maths.Mathf.Tanh
      VB:
      - id: Engine.Core.Maths.Mathf.Tanh*
        name: Tanh
        nameWithType: Mathf.Tanh
        qualifiedName: Engine.Core.Maths.Mathf.Tanh
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Tanh
  Engine.Core.Maths.Mathf.Truncate*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Truncate*
        name: Truncate
        nameWithType: Mathf.Truncate
        qualifiedName: Engine.Core.Maths.Mathf.Truncate
      VB:
      - id: Engine.Core.Maths.Mathf.Truncate*
        name: Truncate
        nameWithType: Mathf.Truncate
        qualifiedName: Engine.Core.Maths.Mathf.Truncate
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Truncate
  System.Func`2:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TResult
        nameWithType: TResult
        qualifiedName: TResult
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Func`2
  System.Func{System.Single,System.Single}:
    name:
      CSharp:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Func`2
        name: Func
        nameWithType: Func
        qualifiedName: System.Func
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Func`2
    parent: System
    commentId: T:System.Func{System.Single,System.Single}
  Engine.Core.Maths.Mathf.Pi*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Pi*
        name: Pi
        nameWithType: Mathf.Pi
        qualifiedName: Engine.Core.Maths.Mathf.Pi
      VB:
      - id: Engine.Core.Maths.Mathf.Pi*
        name: Pi
        nameWithType: Mathf.Pi
        qualifiedName: Engine.Core.Maths.Mathf.Pi
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Pi
  Engine.Core.Maths.Mathf.Sigma*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sigma*
        name: Sigma
        nameWithType: Mathf.Sigma
        qualifiedName: Engine.Core.Maths.Mathf.Sigma
      VB:
      - id: Engine.Core.Maths.Mathf.Sigma*
        name: Sigma
        nameWithType: Mathf.Sigma
        qualifiedName: Engine.Core.Maths.Mathf.Sigma
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sigma
  Engine.Core.Maths.Mathf.Approximately*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Approximately*
        name: Approximately
        nameWithType: Mathf.Approximately
        qualifiedName: Engine.Core.Maths.Mathf.Approximately
      VB:
      - id: Engine.Core.Maths.Mathf.Approximately*
        name: Approximately
        nameWithType: Mathf.Approximately
        qualifiedName: Engine.Core.Maths.Mathf.Approximately
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Approximately
  Engine.Core.Maths.Mathf.Deg2Rad*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Deg2Rad*
        name: Deg2Rad
        nameWithType: Mathf.Deg2Rad
        qualifiedName: Engine.Core.Maths.Mathf.Deg2Rad
      VB:
      - id: Engine.Core.Maths.Mathf.Deg2Rad*
        name: Deg2Rad
        nameWithType: Mathf.Deg2Rad
        qualifiedName: Engine.Core.Maths.Mathf.Deg2Rad
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Deg2Rad
  Engine.Core.Maths.Mathf.Rad2Deg*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Rad2Deg*
        name: Rad2Deg
        nameWithType: Mathf.Rad2Deg
        qualifiedName: Engine.Core.Maths.Mathf.Rad2Deg
      VB:
      - id: Engine.Core.Maths.Mathf.Rad2Deg*
        name: Rad2Deg
        nameWithType: Mathf.Rad2Deg
        qualifiedName: Engine.Core.Maths.Mathf.Rad2Deg
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Rad2Deg
  Engine.Core.Maths.Mathf.Sum*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sum*
        name: Sum
        nameWithType: Mathf.Sum
        qualifiedName: Engine.Core.Maths.Mathf.Sum
      VB:
      - id: Engine.Core.Maths.Mathf.Sum*
        name: Sum
        nameWithType: Mathf.Sum
        qualifiedName: Engine.Core.Maths.Mathf.Sum
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sum
  Engine.Core.Maths.Mathf.Sinc*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf.Sinc*
        name: Sinc
        nameWithType: Mathf.Sinc
        qualifiedName: Engine.Core.Maths.Mathf.Sinc
      VB:
      - id: Engine.Core.Maths.Mathf.Sinc*
        name: Sinc
        nameWithType: Mathf.Sinc
        qualifiedName: Engine.Core.Maths.Mathf.Sinc
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Mathf.Sinc
  Engine.Core.Maths.Mathf:
    name:
      CSharp:
      - id: Engine.Core.Maths.Mathf
        name: Mathf
        nameWithType: Mathf
        qualifiedName: Engine.Core.Maths.Mathf
      VB:
      - id: Engine.Core.Maths.Mathf
        name: Mathf
        nameWithType: Mathf
        qualifiedName: Engine.Core.Maths.Mathf
    isDefinition: true
    commentId: T:Engine.Core.Maths.Mathf
  Engine.Core.Maths.Matrix:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix
        name: Matrix
        nameWithType: Matrix
        qualifiedName: Engine.Core.Maths.Matrix
      VB:
      - id: Engine.Core.Maths.Matrix
        name: Matrix
        nameWithType: Matrix
        qualifiedName: Engine.Core.Maths.Matrix
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Matrix
  Engine.Core.Maths.Matrix.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.Item*
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Matrix.Item
      VB:
      - id: Engine.Core.Maths.Matrix.Item*
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Matrix.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.Item
  Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
        name: Item
        nameWithType: IMatrix.Item
        qualifiedName: Engine.Core.Maths.IMatrix.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
        name: Item
        nameWithType: IMatrix.Item
        qualifiedName: Engine.Core.Maths.IMatrix.Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: P:Engine.Core.Maths.IMatrix.Item(System.Int32,System.Int32)
  Engine.Core.Maths.Matrix.RowCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.RowCount*
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Matrix.RowCount
      VB:
      - id: Engine.Core.Maths.Matrix.RowCount*
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Matrix.RowCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.RowCount
  Engine.Core.Maths.IMatrix.RowCount:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.RowCount
        name: RowCount
        nameWithType: IMatrix.RowCount
        qualifiedName: Engine.Core.Maths.IMatrix.RowCount
      VB:
      - id: Engine.Core.Maths.IMatrix.RowCount
        name: RowCount
        nameWithType: IMatrix.RowCount
        qualifiedName: Engine.Core.Maths.IMatrix.RowCount
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: P:Engine.Core.Maths.IMatrix.RowCount
  Engine.Core.Maths.Matrix.ColumnCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix.ColumnCount
      VB:
      - id: Engine.Core.Maths.Matrix.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix.ColumnCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.ColumnCount
  Engine.Core.Maths.IMatrix.ColumnCount:
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.ColumnCount
        name: ColumnCount
        nameWithType: IMatrix.ColumnCount
        qualifiedName: Engine.Core.Maths.IMatrix.ColumnCount
      VB:
      - id: Engine.Core.Maths.IMatrix.ColumnCount
        name: ColumnCount
        nameWithType: IMatrix.ColumnCount
        qualifiedName: Engine.Core.Maths.IMatrix.ColumnCount
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: P:Engine.Core.Maths.IMatrix.ColumnCount
  Engine.Core.Maths.Matrix.Operation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.Operation*
        name: Operation
        nameWithType: Matrix.Operation
        qualifiedName: Engine.Core.Maths.Matrix.Operation
      VB:
      - id: Engine.Core.Maths.Matrix.Operation*
        name: Operation
        nameWithType: Matrix.Operation
        qualifiedName: Engine.Core.Maths.Matrix.Operation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.Operation
  Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
        name: Operation
        nameWithType: IMatrix.Operation
        qualifiedName: Engine.Core.Maths.IMatrix.Operation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
        name: Operation
        nameWithType: IMatrix.Operation
        qualifiedName: Engine.Core.Maths.IMatrix.Operation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: M:Engine.Core.Maths.IMatrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  Engine.Core.Maths.Matrix.RowOperation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.RowOperation*
        name: RowOperation
        nameWithType: Matrix.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix.RowOperation
      VB:
      - id: Engine.Core.Maths.Matrix.RowOperation*
        name: RowOperation
        nameWithType: Matrix.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix.RowOperation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.RowOperation
  Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
        name: RowOperation
        nameWithType: IMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.IMatrix.RowOperation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
        name: RowOperation
        nameWithType: IMatrix.RowOperation
        qualifiedName: Engine.Core.Maths.IMatrix.RowOperation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: M:Engine.Core.Maths.IMatrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  Engine.Core.Maths.Matrix.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.SwapRows*
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix.SwapRows
      VB:
      - id: Engine.Core.Maths.Matrix.SwapRows*
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.SwapRows
  Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
        name: SwapRows
        nameWithType: IMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.IMatrix.SwapRows
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
        name: SwapRows
        nameWithType: IMatrix.SwapRows
        qualifiedName: Engine.Core.Maths.IMatrix.SwapRows
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.IMatrix
    commentId: M:Engine.Core.Maths.IMatrix.SwapRows(System.Int32,System.Int32)
  Engine.Core.Maths.Matrix.GetIdentityMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: Matrix.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix
      VB:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: Matrix.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.GetIdentityMatrix
  Engine.Core.Maths.Matrix.GetInverse*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetInverse*
        name: GetInverse
        nameWithType: Matrix.GetInverse
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse
      VB:
      - id: Engine.Core.Maths.Matrix.GetInverse*
        name: GetInverse
        nameWithType: Matrix.GetInverse
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix.GetInverse
  Engine.Core.Maths.Matrix.I2x2:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.I2x2
        name: I2x2
        nameWithType: Matrix.I2x2
        qualifiedName: Engine.Core.Maths.Matrix.I2x2
      VB:
      - id: Engine.Core.Maths.Matrix.I2x2
        name: I2x2
        nameWithType: Matrix.I2x2
        qualifiedName: Engine.Core.Maths.Matrix.I2x2
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: F:Engine.Core.Maths.Matrix.I2x2
  Engine.Core.Maths.Matrix.I4x4:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.I4x4
        name: I4x4
        nameWithType: Matrix.I4x4
        qualifiedName: Engine.Core.Maths.Matrix.I4x4
      VB:
      - id: Engine.Core.Maths.Matrix.I4x4
        name: I4x4
        nameWithType: Matrix.I4x4
        qualifiedName: Engine.Core.Maths.Matrix.I4x4
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: F:Engine.Core.Maths.Matrix.I4x4
  Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
        name: GetIdentityMatrix<T>
        nameWithType: Matrix.GetIdentityMatrix<T>
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
        name: GetIdentityMatrix(Of T)
        nameWithType: Matrix.GetIdentityMatrix(Of T)
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,{T}@):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
        name: GetIdentityMatrix<T>
        nameWithType: Matrix.GetIdentityMatrix<T>
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
        name: GetIdentityMatrix(Of T)
        nameWithType: Matrix.GetIdentityMatrix(Of T)
        qualifiedName: Engine.Core.Maths.Matrix.GetIdentityMatrix(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
    parent: Engine.Core.Maths.Matrix
    commentId: M:Engine.Core.Maths.Matrix.GetIdentityMatrix``1(System.Int32,``0@)
  Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
        name: GetInverse<T>
        nameWithType: Matrix.GetInverse<T>
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
        name: GetInverse(Of T)
        nameWithType: Matrix.GetInverse(Of T)
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: M:Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  Engine.Core.Maths.Matrix.GetInverse``1({T},{T}@):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
        name: GetInverse<T>
        nameWithType: Matrix.GetInverse<T>
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse<T>
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
        name: GetInverse(Of T)
        nameWithType: Matrix.GetInverse(Of T)
        qualifiedName: Engine.Core.Maths.Matrix.GetInverse(Of T)
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
    parent: Engine.Core.Maths.Matrix
    commentId: M:Engine.Core.Maths.Matrix.GetInverse``1(``0,``0@)
  Engine.Core.Maths.Matrix.RowCount:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.RowCount
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Matrix.RowCount
      VB:
      - id: Engine.Core.Maths.Matrix.RowCount
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Matrix.RowCount
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: P:Engine.Core.Maths.Matrix.RowCount
  Engine.Core.Maths.Matrix3x3.RowCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.RowCount*
        name: RowCount
        nameWithType: Matrix3x3.RowCount
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowCount
      VB:
      - id: Engine.Core.Maths.Matrix3x3.RowCount*
        name: RowCount
        nameWithType: Matrix3x3.RowCount
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.RowCount
  Engine.Core.Maths.Matrix.ColumnCount:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.ColumnCount
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix.ColumnCount
      VB:
      - id: Engine.Core.Maths.Matrix.ColumnCount
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix.ColumnCount
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: P:Engine.Core.Maths.Matrix.ColumnCount
  Engine.Core.Maths.Matrix3x3.ColumnCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix3x3.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix3x3.ColumnCount
      VB:
      - id: Engine.Core.Maths.Matrix3x3.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix3x3.ColumnCount
        qualifiedName: Engine.Core.Maths.Matrix3x3.ColumnCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.ColumnCount
  Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Matrix.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Matrix.Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: P:Engine.Core.Maths.Matrix.Item(System.Int32,System.Int32)
  Engine.Core.Maths.Matrix3x3.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.Item*
        name: Item
        nameWithType: Matrix3x3.Item
        qualifiedName: Engine.Core.Maths.Matrix3x3.Item
      VB:
      - id: Engine.Core.Maths.Matrix3x3.Item*
        name: Item
        nameWithType: Matrix3x3.Item
        qualifiedName: Engine.Core.Maths.Matrix3x3.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.Item
  Engine.Core.Maths.Matrix3x3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.#ctor*
        name: Matrix3x3
        nameWithType: Matrix3x3.Matrix3x3
        qualifiedName: Engine.Core.Maths.Matrix3x3.Matrix3x3
      VB:
      - id: Engine.Core.Maths.Matrix3x3.#ctor*
        name: Matrix3x3
        nameWithType: Matrix3x3.Matrix3x3
        qualifiedName: Engine.Core.Maths.Matrix3x3.Matrix3x3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.#ctor
  System.Collections.Generic.List{Engine.Core.Maths.Vector3}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Maths.Vector3}
  Engine.Core.Maths.Matrix3x3.GetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetValue*
        name: GetValue
        nameWithType: Matrix3x3.GetValue
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetValue
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetValue*
        name: GetValue
        nameWithType: Matrix3x3.GetValue
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetValue
  Engine.Core.Maths.Matrix3x3.SetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.SetValue*
        name: SetValue
        nameWithType: Matrix3x3.SetValue
        qualifiedName: Engine.Core.Maths.Matrix3x3.SetValue
      VB:
      - id: Engine.Core.Maths.Matrix3x3.SetValue*
        name: SetValue
        nameWithType: Matrix3x3.SetValue
        qualifiedName: Engine.Core.Maths.Matrix3x3.SetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.SetValue
  Engine.Core.Maths.Matrix3x3.GetRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetRow*
        name: GetRow
        nameWithType: Matrix3x3.GetRow
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetRow
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetRow*
        name: GetRow
        nameWithType: Matrix3x3.GetRow
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetRow
  Engine.Core.Maths.Matrix3x3.GetColumn*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetColumn*
        name: GetColumn
        nameWithType: Matrix3x3.GetColumn
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetColumn
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetColumn*
        name: GetColumn
        nameWithType: Matrix3x3.GetColumn
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetColumn
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetColumn
  Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix.SwapRows
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix.SwapRows
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: M:Engine.Core.Maths.Matrix.SwapRows(System.Int32,System.Int32)
  Engine.Core.Maths.Matrix3x3.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.SwapRows*
        name: SwapRows
        nameWithType: Matrix3x3.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix3x3.SwapRows
      VB:
      - id: Engine.Core.Maths.Matrix3x3.SwapRows*
        name: SwapRows
        nameWithType: Matrix3x3.SwapRows
        qualifiedName: Engine.Core.Maths.Matrix3x3.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.SwapRows
  Engine.Core.Maths.Matrix3x3.ScalarMultiplication*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.ScalarMultiplication*
        name: ScalarMultiplication
        nameWithType: Matrix3x3.ScalarMultiplication
        qualifiedName: Engine.Core.Maths.Matrix3x3.ScalarMultiplication
      VB:
      - id: Engine.Core.Maths.Matrix3x3.ScalarMultiplication*
        name: ScalarMultiplication
        nameWithType: Matrix3x3.ScalarMultiplication
        qualifiedName: Engine.Core.Maths.Matrix3x3.ScalarMultiplication
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.ScalarMultiplication
  Engine.Core.Maths.Matrix3x3.ScalarDivision*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.ScalarDivision*
        name: ScalarDivision
        nameWithType: Matrix3x3.ScalarDivision
        qualifiedName: Engine.Core.Maths.Matrix3x3.ScalarDivision
      VB:
      - id: Engine.Core.Maths.Matrix3x3.ScalarDivision*
        name: ScalarDivision
        nameWithType: Matrix3x3.ScalarDivision
        qualifiedName: Engine.Core.Maths.Matrix3x3.ScalarDivision
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.ScalarDivision
  Engine.Core.Maths.Matrix3x3.Multiplication*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.Multiplication*
        name: Multiplication
        nameWithType: Matrix3x3.Multiplication
        qualifiedName: Engine.Core.Maths.Matrix3x3.Multiplication
      VB:
      - id: Engine.Core.Maths.Matrix3x3.Multiplication*
        name: Multiplication
        nameWithType: Matrix3x3.Multiplication
        qualifiedName: Engine.Core.Maths.Matrix3x3.Multiplication
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.Multiplication
  Engine.Core.Maths.Matrix3x3.Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.Addition*
        name: Addition
        nameWithType: Matrix3x3.Addition
        qualifiedName: Engine.Core.Maths.Matrix3x3.Addition
      VB:
      - id: Engine.Core.Maths.Matrix3x3.Addition*
        name: Addition
        nameWithType: Matrix3x3.Addition
        qualifiedName: Engine.Core.Maths.Matrix3x3.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.Addition
  Engine.Core.Maths.Matrix3x3.Substraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.Substraction*
        name: Substraction
        nameWithType: Matrix3x3.Substraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.Substraction
      VB:
      - id: Engine.Core.Maths.Matrix3x3.Substraction*
        name: Substraction
        nameWithType: Matrix3x3.Substraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.Substraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.Substraction
  Engine.Core.Maths.Matrix3x3.RowAddition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.RowAddition*
        name: RowAddition
        nameWithType: Matrix3x3.RowAddition
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowAddition
      VB:
      - id: Engine.Core.Maths.Matrix3x3.RowAddition*
        name: RowAddition
        nameWithType: Matrix3x3.RowAddition
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowAddition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.RowAddition
  Engine.Core.Maths.Matrix3x3.RowSubstraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.RowSubstraction*
        name: RowSubstraction
        nameWithType: Matrix3x3.RowSubstraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowSubstraction
      VB:
      - id: Engine.Core.Maths.Matrix3x3.RowSubstraction*
        name: RowSubstraction
        nameWithType: Matrix3x3.RowSubstraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowSubstraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.RowSubstraction
  Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
        name: RowOperation
        nameWithType: Matrix.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix.RowOperation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
        name: RowOperation
        nameWithType: Matrix.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix.RowOperation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: M:Engine.Core.Maths.Matrix.RowOperation(System.Int32,System.Int32,Engine.Core.Maths.MatrixOperation,System.Single)
  Engine.Core.Maths.Matrix3x3.RowOperation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.RowOperation*
        name: RowOperation
        nameWithType: Matrix3x3.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowOperation
      VB:
      - id: Engine.Core.Maths.Matrix3x3.RowOperation*
        name: RowOperation
        nameWithType: Matrix3x3.RowOperation
        qualifiedName: Engine.Core.Maths.Matrix3x3.RowOperation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.RowOperation
  Engine.Core.Maths.Matrix3x3.Operation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.Operation*
        name: Operation
        nameWithType: Matrix3x3.Operation
        qualifiedName: Engine.Core.Maths.Matrix3x3.Operation
      VB:
      - id: Engine.Core.Maths.Matrix3x3.Operation*
        name: Operation
        nameWithType: Matrix3x3.Operation
        qualifiedName: Engine.Core.Maths.Matrix3x3.Operation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.Operation
  Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
        name: Operation
        nameWithType: Matrix.Operation
        qualifiedName: Engine.Core.Maths.Matrix.Operation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
        name: Operation
        nameWithType: Matrix.Operation
        qualifiedName: Engine.Core.Maths.Matrix.Operation
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.IMatrix
        name: IMatrix
        nameWithType: IMatrix
        qualifiedName: Engine.Core.Maths.IMatrix
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.MatrixOperation
        name: MatrixOperation
        nameWithType: MatrixOperation
        qualifiedName: Engine.Core.Maths.MatrixOperation
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: M:Engine.Core.Maths.Matrix.Operation(Engine.Core.Maths.IMatrix,Engine.Core.Maths.MatrixOperation,System.Single)
  Engine.Core.Maths.Matrix3x3.GetDeterminant*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetDeterminant*
        name: GetDeterminant
        nameWithType: Matrix3x3.GetDeterminant
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetDeterminant
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetDeterminant*
        name: GetDeterminant
        nameWithType: Matrix3x3.GetDeterminant
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetDeterminant
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetDeterminant
  Engine.Core.Maths.Matrix3x3.GetIdentityMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: Matrix3x3.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: Matrix3x3.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetIdentityMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetIdentityMatrix
  Engine.Core.Maths.Matrix3x3.GetInverse*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.GetInverse*
        name: GetInverse
        nameWithType: Matrix3x3.GetInverse
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetInverse
      VB:
      - id: Engine.Core.Maths.Matrix3x3.GetInverse*
        name: GetInverse
        nameWithType: Matrix3x3.GetInverse
        qualifiedName: Engine.Core.Maths.Matrix3x3.GetInverse
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.GetInverse
  Engine.Core.Maths.Matrix3x3.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_Multiply*
        name: Multiply
        nameWithType: Matrix3x3.Multiply
        qualifiedName: Engine.Core.Maths.Matrix3x3.Multiply
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_Multiply*
        name: Multiply
        nameWithType: Matrix3x3.Multiply
        qualifiedName: Engine.Core.Maths.Matrix3x3.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_Multiply
  Engine.Core.Maths.Matrix3x3.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_Addition*
        name: Addition
        nameWithType: Matrix3x3.Addition
        qualifiedName: Engine.Core.Maths.Matrix3x3.Addition
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_Addition*
        name: Addition
        nameWithType: Matrix3x3.Addition
        qualifiedName: Engine.Core.Maths.Matrix3x3.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_Addition
  Engine.Core.Maths.Matrix3x3.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_Subtraction*
        name: Subtraction
        nameWithType: Matrix3x3.Subtraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.Subtraction
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_Subtraction*
        name: Subtraction
        nameWithType: Matrix3x3.Subtraction
        qualifiedName: Engine.Core.Maths.Matrix3x3.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_Subtraction
  Engine.Core.Maths.Matrix3x3.op_UnaryNegation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Matrix3x3.UnaryNegation
        qualifiedName: Engine.Core.Maths.Matrix3x3.UnaryNegation
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: Matrix3x3.UnaryNegation
        qualifiedName: Engine.Core.Maths.Matrix3x3.UnaryNegation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_UnaryNegation
  Engine.Core.Maths.Matrix3x3.op_Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_Division*
        name: Division
        nameWithType: Matrix3x3.Division
        qualifiedName: Engine.Core.Maths.Matrix3x3.Division
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_Division*
        name: Division
        nameWithType: Matrix3x3.Division
        qualifiedName: Engine.Core.Maths.Matrix3x3.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_Division
  Engine.Core.Maths.Matrix3x3.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix3x3.op_Implicit*
        name: Implicit
        nameWithType: Matrix3x3.Implicit
        qualifiedName: Engine.Core.Maths.Matrix3x3.Implicit
      VB:
      - id: Engine.Core.Maths.Matrix3x3.op_Implicit*
        name: Widening
        nameWithType: Matrix3x3.Widening
        qualifiedName: Engine.Core.Maths.Matrix3x3.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Matrix3x3.op_Implicit
  Engine.Core.Maths.Matrix.I3x3:
    name:
      CSharp:
      - id: Engine.Core.Maths.Matrix.I3x3
        name: I3x3
        nameWithType: Matrix.I3x3
        qualifiedName: Engine.Core.Maths.Matrix.I3x3
      VB:
      - id: Engine.Core.Maths.Matrix.I3x3
        name: I3x3
        nameWithType: Matrix.I3x3
        qualifiedName: Engine.Core.Maths.Matrix.I3x3
    isDefinition: true
    parent: Engine.Core.Maths.Matrix
    commentId: F:Engine.Core.Maths.Matrix.I3x3
  Engine.Core.Maths.MatrixMxN.RowCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RowCount*
        name: RowCount
        nameWithType: MatrixMxN.RowCount
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowCount
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RowCount*
        name: RowCount
        nameWithType: MatrixMxN.RowCount
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RowCount
  Engine.Core.Maths.MatrixMxN.ColumnCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.ColumnCount*
        name: ColumnCount
        nameWithType: MatrixMxN.ColumnCount
        qualifiedName: Engine.Core.Maths.MatrixMxN.ColumnCount
      VB:
      - id: Engine.Core.Maths.MatrixMxN.ColumnCount*
        name: ColumnCount
        nameWithType: MatrixMxN.ColumnCount
        qualifiedName: Engine.Core.Maths.MatrixMxN.ColumnCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.ColumnCount
  Engine.Core.Maths.MatrixMxN.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Item*
        name: Item
        nameWithType: MatrixMxN.Item
        qualifiedName: Engine.Core.Maths.MatrixMxN.Item
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Item*
        name: Item
        nameWithType: MatrixMxN.Item
        qualifiedName: Engine.Core.Maths.MatrixMxN.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Item
  Engine.Core.Maths.MatrixMxN.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.#ctor*
        name: MatrixMxN
        nameWithType: MatrixMxN.MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN.MatrixMxN
      VB:
      - id: Engine.Core.Maths.MatrixMxN.#ctor*
        name: MatrixMxN
        nameWithType: MatrixMxN.MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN.MatrixMxN
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.#ctor
  System.Collections.Generic.List{Engine.Core.Maths.Vector}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Maths.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Engine.Core.Maths.Vector
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Maths.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Engine.Core.Maths.Vector
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Maths.Vector}
  Engine.Core.Maths.MatrixMxN.GetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetValue*
        name: GetValue
        nameWithType: MatrixMxN.GetValue
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetValue
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetValue*
        name: GetValue
        nameWithType: MatrixMxN.GetValue
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetValue
  Engine.Core.Maths.MatrixMxN.SetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.SetValue*
        name: SetValue
        nameWithType: MatrixMxN.SetValue
        qualifiedName: Engine.Core.Maths.MatrixMxN.SetValue
      VB:
      - id: Engine.Core.Maths.MatrixMxN.SetValue*
        name: SetValue
        nameWithType: MatrixMxN.SetValue
        qualifiedName: Engine.Core.Maths.MatrixMxN.SetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.SetValue
  Engine.Core.Maths.Vector:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Engine.Core.Maths.Vector
      VB:
      - id: Engine.Core.Maths.Vector
        name: Vector
        nameWithType: Vector
        qualifiedName: Engine.Core.Maths.Vector
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Vector
  Engine.Core.Maths.MatrixMxN.GetRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetRow*
        name: GetRow
        nameWithType: MatrixMxN.GetRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetRow
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetRow*
        name: GetRow
        nameWithType: MatrixMxN.GetRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetRow
  Engine.Core.Maths.MatrixMxN.GetColumn*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetColumn*
        name: GetColumn
        nameWithType: MatrixMxN.GetColumn
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetColumn
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetColumn*
        name: GetColumn
        nameWithType: MatrixMxN.GetColumn
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetColumn
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetColumn
  Engine.Core.Maths.MatrixMxN.AddRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.AddRow*
        name: AddRow
        nameWithType: MatrixMxN.AddRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.AddRow
      VB:
      - id: Engine.Core.Maths.MatrixMxN.AddRow*
        name: AddRow
        nameWithType: MatrixMxN.AddRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.AddRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.AddRow
  Engine.Core.Maths.MatrixMxN.InsertRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.InsertRow*
        name: InsertRow
        nameWithType: MatrixMxN.InsertRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.InsertRow
      VB:
      - id: Engine.Core.Maths.MatrixMxN.InsertRow*
        name: InsertRow
        nameWithType: MatrixMxN.InsertRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.InsertRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.InsertRow
  Engine.Core.Maths.MatrixMxN.RemoveRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RemoveRow*
        name: RemoveRow
        nameWithType: MatrixMxN.RemoveRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.RemoveRow
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RemoveRow*
        name: RemoveRow
        nameWithType: MatrixMxN.RemoveRow
        qualifiedName: Engine.Core.Maths.MatrixMxN.RemoveRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RemoveRow
  Engine.Core.Maths.MatrixMxN.RemoveColumn*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RemoveColumn*
        name: RemoveColumn
        nameWithType: MatrixMxN.RemoveColumn
        qualifiedName: Engine.Core.Maths.MatrixMxN.RemoveColumn
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RemoveColumn*
        name: RemoveColumn
        nameWithType: MatrixMxN.RemoveColumn
        qualifiedName: Engine.Core.Maths.MatrixMxN.RemoveColumn
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RemoveColumn
  Engine.Core.Maths.MatrixMxN.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.SwapRows*
        name: SwapRows
        nameWithType: MatrixMxN.SwapRows
        qualifiedName: Engine.Core.Maths.MatrixMxN.SwapRows
      VB:
      - id: Engine.Core.Maths.MatrixMxN.SwapRows*
        name: SwapRows
        nameWithType: MatrixMxN.SwapRows
        qualifiedName: Engine.Core.Maths.MatrixMxN.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.SwapRows
  Engine.Core.Maths.MatrixMxN.ScalarMultiplication*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
        name: ScalarMultiplication
        nameWithType: MatrixMxN.ScalarMultiplication
        qualifiedName: Engine.Core.Maths.MatrixMxN.ScalarMultiplication
      VB:
      - id: Engine.Core.Maths.MatrixMxN.ScalarMultiplication*
        name: ScalarMultiplication
        nameWithType: MatrixMxN.ScalarMultiplication
        qualifiedName: Engine.Core.Maths.MatrixMxN.ScalarMultiplication
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.ScalarMultiplication
  Engine.Core.Maths.MatrixMxN.ScalarDivision*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.ScalarDivision*
        name: ScalarDivision
        nameWithType: MatrixMxN.ScalarDivision
        qualifiedName: Engine.Core.Maths.MatrixMxN.ScalarDivision
      VB:
      - id: Engine.Core.Maths.MatrixMxN.ScalarDivision*
        name: ScalarDivision
        nameWithType: MatrixMxN.ScalarDivision
        qualifiedName: Engine.Core.Maths.MatrixMxN.ScalarDivision
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.ScalarDivision
  Engine.Core.Maths.MatrixMxN.Multiplication*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Multiplication*
        name: Multiplication
        nameWithType: MatrixMxN.Multiplication
        qualifiedName: Engine.Core.Maths.MatrixMxN.Multiplication
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Multiplication*
        name: Multiplication
        nameWithType: MatrixMxN.Multiplication
        qualifiedName: Engine.Core.Maths.MatrixMxN.Multiplication
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Multiplication
  Engine.Core.Maths.MatrixMxN.Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Addition*
        name: Addition
        nameWithType: MatrixMxN.Addition
        qualifiedName: Engine.Core.Maths.MatrixMxN.Addition
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Addition*
        name: Addition
        nameWithType: MatrixMxN.Addition
        qualifiedName: Engine.Core.Maths.MatrixMxN.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Addition
  Engine.Core.Maths.MatrixMxN.Substraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Substraction*
        name: Substraction
        nameWithType: MatrixMxN.Substraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.Substraction
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Substraction*
        name: Substraction
        nameWithType: MatrixMxN.Substraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.Substraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Substraction
  Engine.Core.Maths.MatrixMxN.RowAddition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RowAddition*
        name: RowAddition
        nameWithType: MatrixMxN.RowAddition
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowAddition
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RowAddition*
        name: RowAddition
        nameWithType: MatrixMxN.RowAddition
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowAddition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RowAddition
  Engine.Core.Maths.MatrixMxN.RowSubstraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RowSubstraction*
        name: RowSubstraction
        nameWithType: MatrixMxN.RowSubstraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowSubstraction
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RowSubstraction*
        name: RowSubstraction
        nameWithType: MatrixMxN.RowSubstraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowSubstraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RowSubstraction
  Engine.Core.Maths.MatrixMxN.RowOperation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.RowOperation*
        name: RowOperation
        nameWithType: MatrixMxN.RowOperation
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowOperation
      VB:
      - id: Engine.Core.Maths.MatrixMxN.RowOperation*
        name: RowOperation
        nameWithType: MatrixMxN.RowOperation
        qualifiedName: Engine.Core.Maths.MatrixMxN.RowOperation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.RowOperation
  Engine.Core.Maths.MatrixMxN.Operation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Operation*
        name: Operation
        nameWithType: MatrixMxN.Operation
        qualifiedName: Engine.Core.Maths.MatrixMxN.Operation
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Operation*
        name: Operation
        nameWithType: MatrixMxN.Operation
        qualifiedName: Engine.Core.Maths.MatrixMxN.Operation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Operation
  Engine.Core.Maths.MatrixMxN.Transpose*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Transpose*
        name: Transpose
        nameWithType: MatrixMxN.Transpose
        qualifiedName: Engine.Core.Maths.MatrixMxN.Transpose
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Transpose*
        name: Transpose
        nameWithType: MatrixMxN.Transpose
        qualifiedName: Engine.Core.Maths.MatrixMxN.Transpose
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Transpose
  Engine.Core.Maths.MatrixMxN.GetSubMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetSubMatrix*
        name: GetSubMatrix
        nameWithType: MatrixMxN.GetSubMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetSubMatrix
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetSubMatrix*
        name: GetSubMatrix
        nameWithType: MatrixMxN.GetSubMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetSubMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetSubMatrix
  System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Engine.Core.Maths.MatrixMxN
        name: MatrixMxN
        nameWithType: MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Engine.Core.Maths.MatrixMxN
        name: MatrixMxN
        nameWithType: MatrixMxN
        qualifiedName: Engine.Core.Maths.MatrixMxN
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Engine.Core.Maths.MatrixMxN}
  Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*
        name: Get2x2SubMatrices
        nameWithType: MatrixMxN.Get2x2SubMatrices
        qualifiedName: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices
      VB:
      - id: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices*
        name: Get2x2SubMatrices
        nameWithType: MatrixMxN.Get2x2SubMatrices
        qualifiedName: Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.Get2x2SubMatrices
  Engine.Core.Maths.MatrixMxN.GetMinorMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetMinorMatrix*
        name: GetMinorMatrix
        nameWithType: MatrixMxN.GetMinorMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetMinorMatrix
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetMinorMatrix*
        name: GetMinorMatrix
        nameWithType: MatrixMxN.GetMinorMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetMinorMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetMinorMatrix
  Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*
        name: GetCofactorMatrix
        nameWithType: MatrixMxN.GetCofactorMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix*
        name: GetCofactorMatrix
        nameWithType: MatrixMxN.GetCofactorMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetCofactorMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetCofactorMatrix
  Engine.Core.Maths.MatrixMxN.GetDeterminant*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetDeterminant*
        name: GetDeterminant
        nameWithType: MatrixMxN.GetDeterminant
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetDeterminant
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetDeterminant*
        name: GetDeterminant
        nameWithType: MatrixMxN.GetDeterminant
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetDeterminant
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetDeterminant
  Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*
        name: GetAdjointMatrix
        nameWithType: MatrixMxN.GetAdjointMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix*
        name: GetAdjointMatrix
        nameWithType: MatrixMxN.GetAdjointMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetAdjointMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetAdjointMatrix
  Engine.Core.Maths.MatrixMxN.ToVector3*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.ToVector3*
        name: ToVector3
        nameWithType: MatrixMxN.ToVector3
        qualifiedName: Engine.Core.Maths.MatrixMxN.ToVector3
      VB:
      - id: Engine.Core.Maths.MatrixMxN.ToVector3*
        name: ToVector3
        nameWithType: MatrixMxN.ToVector3
        qualifiedName: Engine.Core.Maths.MatrixMxN.ToVector3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.ToVector3
  Engine.Core.Maths.MatrixMxN.ToVector*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.ToVector*
        name: ToVector
        nameWithType: MatrixMxN.ToVector
        qualifiedName: Engine.Core.Maths.MatrixMxN.ToVector
      VB:
      - id: Engine.Core.Maths.MatrixMxN.ToVector*
        name: ToVector
        nameWithType: MatrixMxN.ToVector
        qualifiedName: Engine.Core.Maths.MatrixMxN.ToVector
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.ToVector
  Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: MatrixMxN.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix*
        name: GetIdentityMatrix
        nameWithType: MatrixMxN.GetIdentityMatrix
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetIdentityMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetIdentityMatrix
  Engine.Core.Maths.MatrixMxN.GetInverse*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.GetInverse*
        name: GetInverse
        nameWithType: MatrixMxN.GetInverse
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetInverse
      VB:
      - id: Engine.Core.Maths.MatrixMxN.GetInverse*
        name: GetInverse
        nameWithType: MatrixMxN.GetInverse
        qualifiedName: Engine.Core.Maths.MatrixMxN.GetInverse
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.GetInverse
  Engine.Core.Maths.MatrixMxN.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_Multiply*
        name: Multiply
        nameWithType: MatrixMxN.Multiply
        qualifiedName: Engine.Core.Maths.MatrixMxN.Multiply
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_Multiply*
        name: Multiply
        nameWithType: MatrixMxN.Multiply
        qualifiedName: Engine.Core.Maths.MatrixMxN.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Multiply
  Engine.Core.Maths.MatrixMxN.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_Addition*
        name: Addition
        nameWithType: MatrixMxN.Addition
        qualifiedName: Engine.Core.Maths.MatrixMxN.Addition
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_Addition*
        name: Addition
        nameWithType: MatrixMxN.Addition
        qualifiedName: Engine.Core.Maths.MatrixMxN.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Addition
  Engine.Core.Maths.MatrixMxN.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_Subtraction*
        name: Subtraction
        nameWithType: MatrixMxN.Subtraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.Subtraction
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_Subtraction*
        name: Subtraction
        nameWithType: MatrixMxN.Subtraction
        qualifiedName: Engine.Core.Maths.MatrixMxN.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Subtraction
  Engine.Core.Maths.MatrixMxN.op_UnaryNegation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: MatrixMxN.UnaryNegation
        qualifiedName: Engine.Core.Maths.MatrixMxN.UnaryNegation
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_UnaryNegation*
        name: UnaryNegation
        nameWithType: MatrixMxN.UnaryNegation
        qualifiedName: Engine.Core.Maths.MatrixMxN.UnaryNegation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_UnaryNegation
  Engine.Core.Maths.MatrixMxN.op_Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_Division*
        name: Division
        nameWithType: MatrixMxN.Division
        qualifiedName: Engine.Core.Maths.MatrixMxN.Division
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_Division*
        name: Division
        nameWithType: MatrixMxN.Division
        qualifiedName: Engine.Core.Maths.MatrixMxN.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Division
  Engine.Core.Maths.MatrixMxN.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MatrixMxN.op_Implicit*
        name: Implicit
        nameWithType: MatrixMxN.Implicit
        qualifiedName: Engine.Core.Maths.MatrixMxN.Implicit
      VB:
      - id: Engine.Core.Maths.MatrixMxN.op_Implicit*
        name: Widening
        nameWithType: MatrixMxN.Widening
        qualifiedName: Engine.Core.Maths.MatrixMxN.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MatrixMxN.op_Implicit
  Engine.Core.Maths.MirrorMatrix3x3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MirrorMatrix3x3.#ctor*
        name: MirrorMatrix3x3
        nameWithType: MirrorMatrix3x3.MirrorMatrix3x3
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3.MirrorMatrix3x3
      VB:
      - id: Engine.Core.Maths.MirrorMatrix3x3.#ctor*
        name: MirrorMatrix3x3
        nameWithType: MirrorMatrix3x3.MirrorMatrix3x3
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3.MirrorMatrix3x3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MirrorMatrix3x3.#ctor
  Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4*:
    name:
      CSharp:
      - id: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: MirrorMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4
      VB:
      - id: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: MirrorMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.MirrorMatrix3x3.ToMatrix4x4
  Engine.Core.Maths.MirrorMatrix3x3:
    name:
      CSharp:
      - id: Engine.Core.Maths.MirrorMatrix3x3
        name: MirrorMatrix3x3
        nameWithType: MirrorMatrix3x3
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3
      VB:
      - id: Engine.Core.Maths.MirrorMatrix3x3
        name: MirrorMatrix3x3
        nameWithType: MirrorMatrix3x3
        qualifiedName: Engine.Core.Maths.MirrorMatrix3x3
    isDefinition: true
    commentId: T:Engine.Core.Maths.MirrorMatrix3x3
  Engine.Core.Maths.Plane.N*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.N*
        name: N
        nameWithType: Plane.N
        qualifiedName: Engine.Core.Maths.Plane.N
      VB:
      - id: Engine.Core.Maths.Plane.N*
        name: N
        nameWithType: Plane.N
        qualifiedName: Engine.Core.Maths.Plane.N
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.N
  Engine.Core.Maths.Plane.P*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.P*
        name: P
        nameWithType: Plane.P
        qualifiedName: Engine.Core.Maths.Plane.P
      VB:
      - id: Engine.Core.Maths.Plane.P*
        name: P
        nameWithType: Plane.P
        qualifiedName: Engine.Core.Maths.Plane.P
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.P
  Engine.Core.Maths.Plane.B*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.B*
        name: B
        nameWithType: Plane.B
        qualifiedName: Engine.Core.Maths.Plane.B
      VB:
      - id: Engine.Core.Maths.Plane.B*
        name: B
        nameWithType: Plane.B
        qualifiedName: Engine.Core.Maths.Plane.B
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.B
  Engine.Core.Maths.Plane.S1*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.S1*
        name: S1
        nameWithType: Plane.S1
        qualifiedName: Engine.Core.Maths.Plane.S1
      VB:
      - id: Engine.Core.Maths.Plane.S1*
        name: S1
        nameWithType: Plane.S1
        qualifiedName: Engine.Core.Maths.Plane.S1
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.S1
  Engine.Core.Maths.Plane.S2*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.S2*
        name: S2
        nameWithType: Plane.S2
        qualifiedName: Engine.Core.Maths.Plane.S2
      VB:
      - id: Engine.Core.Maths.Plane.S2*
        name: S2
        nameWithType: Plane.S2
        qualifiedName: Engine.Core.Maths.Plane.S2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.S2
  Engine.Core.Maths.Plane.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.#ctor*
        name: Plane
        nameWithType: Plane.Plane
        qualifiedName: Engine.Core.Maths.Plane.Plane
      VB:
      - id: Engine.Core.Maths.Plane.#ctor*
        name: Plane
        nameWithType: Plane.Plane
        qualifiedName: Engine.Core.Maths.Plane.Plane
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.#ctor
  Engine.Core.Maths.Plane.PlaneSetupType:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.PlaneSetupType
        name: Plane.PlaneSetupType
        nameWithType: Plane.PlaneSetupType
        qualifiedName: Engine.Core.Maths.Plane.PlaneSetupType
      VB:
      - id: Engine.Core.Maths.Plane.PlaneSetupType
        name: Plane.PlaneSetupType
        nameWithType: Plane.PlaneSetupType
        qualifiedName: Engine.Core.Maths.Plane.PlaneSetupType
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Plane.PlaneSetupType
  Engine.Core.Maths.Plane.GetPoint_00X*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.GetPoint_00X*
        name: GetPoint_00X
        nameWithType: Plane.GetPoint_00X
        qualifiedName: Engine.Core.Maths.Plane.GetPoint_00X
      VB:
      - id: Engine.Core.Maths.Plane.GetPoint_00X*
        name: GetPoint_00X
        nameWithType: Plane.GetPoint_00X
        qualifiedName: Engine.Core.Maths.Plane.GetPoint_00X
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.GetPoint_00X
  Engine.Core.Maths.Plane.Contains*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.Contains*
        name: Contains
        nameWithType: Plane.Contains
        qualifiedName: Engine.Core.Maths.Plane.Contains
      VB:
      - id: Engine.Core.Maths.Plane.Contains*
        name: Contains
        nameWithType: Plane.Contains
        qualifiedName: Engine.Core.Maths.Plane.Contains
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.Contains
  Engine.Core.Maths.Plane.GetPositionVectorAt*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.GetPositionVectorAt*
        name: GetPositionVectorAt
        nameWithType: Plane.GetPositionVectorAt
        qualifiedName: Engine.Core.Maths.Plane.GetPositionVectorAt
      VB:
      - id: Engine.Core.Maths.Plane.GetPositionVectorAt*
        name: GetPositionVectorAt
        nameWithType: Plane.GetPositionVectorAt
        qualifiedName: Engine.Core.Maths.Plane.GetPositionVectorAt
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.GetPositionVectorAt
  Engine.Core.Maths.Plane.Intersects*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.Intersects*
        name: Intersects
        nameWithType: Plane.Intersects
        qualifiedName: Engine.Core.Maths.Plane.Intersects
      VB:
      - id: Engine.Core.Maths.Plane.Intersects*
        name: Intersects
        nameWithType: Plane.Intersects
        qualifiedName: Engine.Core.Maths.Plane.Intersects
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.Intersects
  Engine.Core.Maths.Plane.Intersection*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.Intersection*
        name: Intersection
        nameWithType: Plane.Intersection
        qualifiedName: Engine.Core.Maths.Plane.Intersection
      VB:
      - id: Engine.Core.Maths.Plane.Intersection*
        name: Intersection
        nameWithType: Plane.Intersection
        qualifiedName: Engine.Core.Maths.Plane.Intersection
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.Intersection
  Engine.Core.Maths.Plane.Distance*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Plane.Distance*
        name: Distance
        nameWithType: Plane.Distance
        qualifiedName: Engine.Core.Maths.Plane.Distance
      VB:
      - id: Engine.Core.Maths.Plane.Distance*
        name: Distance
        nameWithType: Plane.Distance
        qualifiedName: Engine.Core.Maths.Plane.Distance
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Plane.Distance
  Engine.Core.Maths.Quaternion.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Quaternion.Item*
        name: Item
        nameWithType: Quaternion.Item
        qualifiedName: Engine.Core.Maths.Quaternion.Item
      VB:
      - id: Engine.Core.Maths.Quaternion.Item*
        name: Item
        nameWithType: Quaternion.Item
        qualifiedName: Engine.Core.Maths.Quaternion.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Quaternion.Item
  Engine.Core.Maths.Quaternion.GetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Quaternion.GetValue*
        name: GetValue
        nameWithType: Quaternion.GetValue
        qualifiedName: Engine.Core.Maths.Quaternion.GetValue
      VB:
      - id: Engine.Core.Maths.Quaternion.GetValue*
        name: GetValue
        nameWithType: Quaternion.GetValue
        qualifiedName: Engine.Core.Maths.Quaternion.GetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Quaternion.GetValue
  Engine.Core.Maths.Quaternion.SetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Quaternion.SetValue*
        name: SetValue
        nameWithType: Quaternion.SetValue
        qualifiedName: Engine.Core.Maths.Quaternion.SetValue
      VB:
      - id: Engine.Core.Maths.Quaternion.SetValue*
        name: SetValue
        nameWithType: Quaternion.SetValue
        qualifiedName: Engine.Core.Maths.Quaternion.SetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Quaternion.SetValue
  Engine.Core.Maths.RotationMatrix2x2.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix2x2.#ctor*
        name: RotationMatrix2x2
        nameWithType: RotationMatrix2x2.RotationMatrix2x2
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2.RotationMatrix2x2
      VB:
      - id: Engine.Core.Maths.RotationMatrix2x2.#ctor*
        name: RotationMatrix2x2
        nameWithType: RotationMatrix2x2.RotationMatrix2x2
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2.RotationMatrix2x2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationMatrix2x2.#ctor
  Engine.Core.Maths.RotationMatrix2x2:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix2x2
        name: RotationMatrix2x2
        nameWithType: RotationMatrix2x2
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2
      VB:
      - id: Engine.Core.Maths.RotationMatrix2x2
        name: RotationMatrix2x2
        nameWithType: RotationMatrix2x2
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationMatrix2x2
  Engine.Core.Maths.RotationMatrix2x2.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix2x2.op_Implicit*
        name: Implicit
        nameWithType: RotationMatrix2x2.Implicit
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2.Implicit
      VB:
      - id: Engine.Core.Maths.RotationMatrix2x2.op_Implicit*
        name: Widening
        nameWithType: RotationMatrix2x2.Widening
        qualifiedName: Engine.Core.Maths.RotationMatrix2x2.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationMatrix2x2.op_Implicit
  Engine.Core.Maths.RotationMatrix3x3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix3x3.#ctor*
        name: RotationMatrix3x3
        nameWithType: RotationMatrix3x3.RotationMatrix3x3
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3
      VB:
      - id: Engine.Core.Maths.RotationMatrix3x3.#ctor*
        name: RotationMatrix3x3
        nameWithType: RotationMatrix3x3.RotationMatrix3x3
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.RotationMatrix3x3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationMatrix3x3.#ctor
  Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: RotationMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4
      VB:
      - id: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: RotationMatrix3x3.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationMatrix3x3.ToMatrix4x4
  Engine.Core.Maths.RotationMatrix3x3.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationMatrix3x3.op_Implicit*
        name: Implicit
        nameWithType: RotationMatrix3x3.Implicit
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.Implicit
      VB:
      - id: Engine.Core.Maths.RotationMatrix3x3.op_Implicit*
        name: Widening
        nameWithType: RotationMatrix3x3.Widening
        qualifiedName: Engine.Core.Maths.RotationMatrix3x3.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationMatrix3x3.op_Implicit
  Engine.Core.Maths.Vector3.Zero:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Zero
        name: Zero
        nameWithType: Vector3.Zero
        qualifiedName: Engine.Core.Maths.Vector3.Zero
      VB:
      - id: Engine.Core.Maths.Vector3.Zero
        name: Zero
        nameWithType: Vector3.Zero
        qualifiedName: Engine.Core.Maths.Vector3.Zero
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: F:Engine.Core.Maths.Vector3.Zero
  Engine.Core.Maths.Vector3.One:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.One
        name: One
        nameWithType: Vector3.One
        qualifiedName: Engine.Core.Maths.Vector3.One
      VB:
      - id: Engine.Core.Maths.Vector3.One
        name: One
        nameWithType: Vector3.One
        qualifiedName: Engine.Core.Maths.Vector3.One
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: F:Engine.Core.Maths.Vector3.One
  Engine.Core.Maths.Vector3.Length:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Length
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Engine.Core.Maths.Vector3.Length
      VB:
      - id: Engine.Core.Maths.Vector3.Length
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Engine.Core.Maths.Vector3.Length
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: P:Engine.Core.Maths.Vector3.Length
  Engine.Core.Maths.Vector3.LengthSquared:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.LengthSquared
        name: LengthSquared
        nameWithType: Vector3.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector3.LengthSquared
      VB:
      - id: Engine.Core.Maths.Vector3.LengthSquared
        name: LengthSquared
        nameWithType: Vector3.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector3.LengthSquared
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: P:Engine.Core.Maths.Vector3.LengthSquared
  Engine.Core.Maths.Vector3.Normalized:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Normalized
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Engine.Core.Maths.Vector3.Normalized
      VB:
      - id: Engine.Core.Maths.Vector3.Normalized
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Engine.Core.Maths.Vector3.Normalized
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: P:Engine.Core.Maths.Vector3.Normalized
  Engine.Core.Maths.Vector3.Dimension:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Dimension
        name: Dimension
        nameWithType: Vector3.Dimension
        qualifiedName: Engine.Core.Maths.Vector3.Dimension
      VB:
      - id: Engine.Core.Maths.Vector3.Dimension
        name: Dimension
        nameWithType: Vector3.Dimension
        qualifiedName: Engine.Core.Maths.Vector3.Dimension
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: P:Engine.Core.Maths.Vector3.Dimension
  Engine.Core.Maths.Vector3.Item(System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Item(System.Int32)
        name: Item
        nameWithType: Vector3.Item
        qualifiedName: Engine.Core.Maths.Vector3.Item
      - name: '['
        nameWithType: '['
        qualifiedName: '['
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: ']'
        nameWithType: ']'
        qualifiedName: ']'
      VB:
      - id: Engine.Core.Maths.Vector3.Item(System.Int32)
        name: Item
        nameWithType: Vector3.Item
        qualifiedName: Engine.Core.Maths.Vector3.Item
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: P:Engine.Core.Maths.Vector3.Item(System.Int32)
  Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.ToMatrix(Engine.Core.Maths.Vector3,System.Boolean)
  Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Normalize(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.GetLength(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: AngleBetween
        nameWithType: Vector3.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector3.AngleBetween
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: AngleBetween
        nameWithType: Vector3.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector3.AngleBetween
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.AngleBetween(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: OrthogonalityCheck
        nameWithType: Vector3.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector3.OrthogonalityCheck
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
        name: OrthogonalityCheck
        nameWithType: Vector3.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector3.OrthogonalityCheck
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.OrthogonalityCheck(Engine.Core.Maths.Vector3,Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.Normalize:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Normalize
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Normalize
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Normalize
  Engine.Core.Maths.Vector3.GetLength:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.GetLength
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.GetLength
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.GetLength
  Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.CrossProduct(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.DotProduct(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.ScalarProduct(System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
        name: ScalarProduct
        nameWithType: Vector3.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector3.ScalarProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
        name: ScalarProduct
        nameWithType: Vector3.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector3.ScalarProduct
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.ScalarProduct(System.Single)
  Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Addition(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
        name: Substraction
        nameWithType: Vector3.Substraction
        qualifiedName: Engine.Core.Maths.Vector3.Substraction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
        name: Substraction
        nameWithType: Vector3.Substraction
        qualifiedName: Engine.Core.Maths.Vector3.Substraction
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Substraction(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.Division(System.Single):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Division(System.Single)
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Division(System.Single)
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Division(System.Single)
  Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
        name: IsPerpendicularTo
        nameWithType: Vector3.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector3.IsPerpendicularTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
        name: IsPerpendicularTo
        nameWithType: Vector3.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector3.IsPerpendicularTo
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.IsPerpendicularTo(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.GetNormalVector(System.Int32):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
        name: GetNormalVector
        nameWithType: Vector3.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector3.GetNormalVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
        name: GetNormalVector
        nameWithType: Vector3.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector3.GetNormalVector
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.GetNormalVector(System.Int32)
  Engine.Core.Maths.Vector3.IsZero:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.IsZero
        name: IsZero
        nameWithType: Vector3.IsZero
        qualifiedName: Engine.Core.Maths.Vector3.IsZero
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.IsZero
        name: IsZero
        nameWithType: Vector3.IsZero
        qualifiedName: Engine.Core.Maths.Vector3.IsZero
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.IsZero
  Engine.Core.Maths.Vector3.ToMatrix(System.Boolean):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.ToMatrix(System.Boolean)
  Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Engine.Core.Maths.Vector3
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Vector3)
  Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane):
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Engine.Core.Maths.Plane
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: Engine.Core.Maths.Plane
        name: Plane
        nameWithType: Plane
        qualifiedName: Engine.Core.Maths.Plane
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: Engine.Core.Maths.Vector3
    commentId: M:Engine.Core.Maths.Vector3.Project(Engine.Core.Maths.Plane)
  Engine.Core.Maths.RotationVector3.X1*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.X1*
        name: X1
        nameWithType: RotationVector3.X1
        qualifiedName: Engine.Core.Maths.RotationVector3.X1
      VB:
      - id: Engine.Core.Maths.RotationVector3.X1*
        name: X1
        nameWithType: RotationVector3.X1
        qualifiedName: Engine.Core.Maths.RotationVector3.X1
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.X1
  Engine.Core.Maths.RotationVector3.X2*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.X2*
        name: X2
        nameWithType: RotationVector3.X2
        qualifiedName: Engine.Core.Maths.RotationVector3.X2
      VB:
      - id: Engine.Core.Maths.RotationVector3.X2*
        name: X2
        nameWithType: RotationVector3.X2
        qualifiedName: Engine.Core.Maths.RotationVector3.X2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.X2
  Engine.Core.Maths.RotationVector3.X3*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.X3*
        name: X3
        nameWithType: RotationVector3.X3
        qualifiedName: Engine.Core.Maths.RotationVector3.X3
      VB:
      - id: Engine.Core.Maths.RotationVector3.X3*
        name: X3
        nameWithType: RotationVector3.X3
        qualifiedName: Engine.Core.Maths.RotationVector3.X3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.X3
  Engine.Core.Maths.RotationVector3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.#ctor*
        name: RotationVector3
        nameWithType: RotationVector3.RotationVector3
        qualifiedName: Engine.Core.Maths.RotationVector3.RotationVector3
      VB:
      - id: Engine.Core.Maths.RotationVector3.#ctor*
        name: RotationVector3
        nameWithType: RotationVector3.RotationVector3
        qualifiedName: Engine.Core.Maths.RotationVector3.RotationVector3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.#ctor
  Engine.Core.Maths.RotationVector3.GetDegreeRotation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.GetDegreeRotation*
        name: GetDegreeRotation
        nameWithType: RotationVector3.GetDegreeRotation
        qualifiedName: Engine.Core.Maths.RotationVector3.GetDegreeRotation
      VB:
      - id: Engine.Core.Maths.RotationVector3.GetDegreeRotation*
        name: GetDegreeRotation
        nameWithType: RotationVector3.GetDegreeRotation
        qualifiedName: Engine.Core.Maths.RotationVector3.GetDegreeRotation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.GetDegreeRotation
  Engine.Core.Maths.RotationVector3.SetRotation*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.SetRotation*
        name: SetRotation
        nameWithType: RotationVector3.SetRotation
        qualifiedName: Engine.Core.Maths.RotationVector3.SetRotation
      VB:
      - id: Engine.Core.Maths.RotationVector3.SetRotation*
        name: SetRotation
        nameWithType: RotationVector3.SetRotation
        qualifiedName: Engine.Core.Maths.RotationVector3.SetRotation
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.SetRotation
  Engine.Core.Maths.RotationVector3:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3
        name: RotationVector3
        nameWithType: RotationVector3
        qualifiedName: Engine.Core.Maths.RotationVector3
      VB:
      - id: Engine.Core.Maths.RotationVector3
        name: RotationVector3
        nameWithType: RotationVector3
        qualifiedName: Engine.Core.Maths.RotationVector3
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.RotationVector3
  Engine.Core.Maths.RotationVector3.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.op_Addition*
        name: Addition
        nameWithType: RotationVector3.Addition
        qualifiedName: Engine.Core.Maths.RotationVector3.Addition
      VB:
      - id: Engine.Core.Maths.RotationVector3.op_Addition*
        name: Addition
        nameWithType: RotationVector3.Addition
        qualifiedName: Engine.Core.Maths.RotationVector3.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.op_Addition
  Engine.Core.Maths.RotationVector3.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.RotationVector3.op_Implicit*
        name: Implicit
        nameWithType: RotationVector3.Implicit
        qualifiedName: Engine.Core.Maths.RotationVector3.Implicit
      VB:
      - id: Engine.Core.Maths.RotationVector3.op_Implicit*
        name: Widening
        nameWithType: RotationVector3.Widening
        qualifiedName: Engine.Core.Maths.RotationVector3.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.RotationVector3.op_Implicit
  Engine.Core.Maths.ShearMatrix2x2.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix2x2.#ctor*
        name: ShearMatrix2x2
        nameWithType: ShearMatrix2x2.ShearMatrix2x2
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2.ShearMatrix2x2
      VB:
      - id: Engine.Core.Maths.ShearMatrix2x2.#ctor*
        name: ShearMatrix2x2
        nameWithType: ShearMatrix2x2.ShearMatrix2x2
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2.ShearMatrix2x2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix2x2.#ctor
  Engine.Core.Maths.ShearMatrix2x2:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix2x2
        name: ShearMatrix2x2
        nameWithType: ShearMatrix2x2
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2
      VB:
      - id: Engine.Core.Maths.ShearMatrix2x2
        name: ShearMatrix2x2
        nameWithType: ShearMatrix2x2
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.ShearMatrix2x2
  Engine.Core.Maths.ShearMatrix2x2.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix2x2.op_Implicit*
        name: Implicit
        nameWithType: ShearMatrix2x2.Implicit
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2.Implicit
      VB:
      - id: Engine.Core.Maths.ShearMatrix2x2.op_Implicit*
        name: Widening
        nameWithType: ShearMatrix2x2.Widening
        qualifiedName: Engine.Core.Maths.ShearMatrix2x2.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix2x2.op_Implicit
  Engine.Core.Maths.ShearMatrix3D.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D.#ctor*
        name: ShearMatrix3D
        nameWithType: ShearMatrix3D.ShearMatrix3D
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.ShearMatrix3D
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D.#ctor*
        name: ShearMatrix3D
        nameWithType: ShearMatrix3D.ShearMatrix3D
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.ShearMatrix3D
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix3D.#ctor
  Engine.Core.Maths.ShearMatrix3D.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D.op_Implicit*
        name: Implicit
        nameWithType: ShearMatrix3D.Implicit
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Implicit
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D.op_Implicit*
        name: Widening
        nameWithType: ShearMatrix3D.Widening
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix3D.op_Implicit
  Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: ShearMatrix3D.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4*
        name: ToMatrix4x4
        nameWithType: ShearMatrix3D.ToMatrix4x4
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix3D.ToMatrix4x4
  Engine.Core.Maths.ShearMatrix3D.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D.op_Multiply*
        name: Multiply
        nameWithType: ShearMatrix3D.Multiply
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Multiply
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D.op_Multiply*
        name: Multiply
        nameWithType: ShearMatrix3D.Multiply
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix3D.op_Multiply
  Engine.Core.Maths.ShearMatrix3D.Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.ShearMatrix3D.Multiply*
        name: Multiply
        nameWithType: ShearMatrix3D.Multiply
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Multiply
      VB:
      - id: Engine.Core.Maths.ShearMatrix3D.Multiply*
        name: Multiply
        nameWithType: ShearMatrix3D.Multiply
        qualifiedName: Engine.Core.Maths.ShearMatrix3D.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.ShearMatrix3D.Multiply
  Engine.Core.Maths.Straight.OA*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.OA*
        name: OA
        nameWithType: Straight.OA
        qualifiedName: Engine.Core.Maths.Straight.OA
      VB:
      - id: Engine.Core.Maths.Straight.OA*
        name: OA
        nameWithType: Straight.OA
        qualifiedName: Engine.Core.Maths.Straight.OA
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.OA
  Engine.Core.Maths.Straight.OB*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.OB*
        name: OB
        nameWithType: Straight.OB
        qualifiedName: Engine.Core.Maths.Straight.OB
      VB:
      - id: Engine.Core.Maths.Straight.OB*
        name: OB
        nameWithType: Straight.OB
        qualifiedName: Engine.Core.Maths.Straight.OB
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.OB
  Engine.Core.Maths.Straight.Dir*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.Dir*
        name: Dir
        nameWithType: Straight.Dir
        qualifiedName: Engine.Core.Maths.Straight.Dir
      VB:
      - id: Engine.Core.Maths.Straight.Dir*
        name: Dir
        nameWithType: Straight.Dir
        qualifiedName: Engine.Core.Maths.Straight.Dir
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.Dir
  Engine.Core.Maths.Straight.LineSetupType:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.LineSetupType
        name: Straight.LineSetupType
        nameWithType: Straight.LineSetupType
        qualifiedName: Engine.Core.Maths.Straight.LineSetupType
      VB:
      - id: Engine.Core.Maths.Straight.LineSetupType
        name: Straight.LineSetupType
        nameWithType: Straight.LineSetupType
        qualifiedName: Engine.Core.Maths.Straight.LineSetupType
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Straight.LineSetupType
  Engine.Core.Maths.Straight.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.#ctor*
        name: Straight
        nameWithType: Straight.Straight
        qualifiedName: Engine.Core.Maths.Straight.Straight
      VB:
      - id: Engine.Core.Maths.Straight.#ctor*
        name: Straight
        nameWithType: Straight.Straight
        qualifiedName: Engine.Core.Maths.Straight.Straight
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.#ctor
  Engine.Core.Maths.Straight.GetPointAt*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.GetPointAt*
        name: GetPointAt
        nameWithType: Straight.GetPointAt
        qualifiedName: Engine.Core.Maths.Straight.GetPointAt
      VB:
      - id: Engine.Core.Maths.Straight.GetPointAt*
        name: GetPointAt
        nameWithType: Straight.GetPointAt
        qualifiedName: Engine.Core.Maths.Straight.GetPointAt
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.GetPointAt
  Engine.Core.Maths.Straight.Intersection*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.Intersection*
        name: Intersection
        nameWithType: Straight.Intersection
        qualifiedName: Engine.Core.Maths.Straight.Intersection
      VB:
      - id: Engine.Core.Maths.Straight.Intersection*
        name: Intersection
        nameWithType: Straight.Intersection
        qualifiedName: Engine.Core.Maths.Straight.Intersection
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.Intersection
  Engine.Core.Maths.Straight.Distance*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Straight.Distance*
        name: Distance
        nameWithType: Straight.Distance
        qualifiedName: Engine.Core.Maths.Straight.Distance
      VB:
      - id: Engine.Core.Maths.Straight.Distance*
        name: Distance
        nameWithType: Straight.Distance
        qualifiedName: Engine.Core.Maths.Straight.Distance
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Straight.Distance
  System.Collections.Generic.IEnumerable{System.Single}:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.IEnumerable`1
        name: IEnumerable
        nameWithType: IEnumerable
        qualifiedName: System.Collections.Generic.IEnumerable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.IEnumerable{System.Single}
  Engine.Core.Maths.Vector.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Item*
        name: Item
        nameWithType: Vector.Item
        qualifiedName: Engine.Core.Maths.Vector.Item
      VB:
      - id: Engine.Core.Maths.Vector.Item*
        name: Item
        nameWithType: Vector.Item
        qualifiedName: Engine.Core.Maths.Vector.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Item
  Engine.Core.Maths.Vector.Length*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Length*
        name: Length
        nameWithType: Vector.Length
        qualifiedName: Engine.Core.Maths.Vector.Length
      VB:
      - id: Engine.Core.Maths.Vector.Length*
        name: Length
        nameWithType: Vector.Length
        qualifiedName: Engine.Core.Maths.Vector.Length
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Length
  Engine.Core.Maths.Vector.Dimension*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Dimension*
        name: Dimension
        nameWithType: Vector.Dimension
        qualifiedName: Engine.Core.Maths.Vector.Dimension
      VB:
      - id: Engine.Core.Maths.Vector.Dimension*
        name: Dimension
        nameWithType: Vector.Dimension
        qualifiedName: Engine.Core.Maths.Vector.Dimension
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Dimension
  Engine.Core.Maths.Vector.LengthSquared*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.LengthSquared*
        name: LengthSquared
        nameWithType: Vector.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector.LengthSquared
      VB:
      - id: Engine.Core.Maths.Vector.LengthSquared*
        name: LengthSquared
        nameWithType: Vector.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector.LengthSquared
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.LengthSquared
  Engine.Core.Maths.Vector.Normalized*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Normalized*
        name: Normalized
        nameWithType: Vector.Normalized
        qualifiedName: Engine.Core.Maths.Vector.Normalized
      VB:
      - id: Engine.Core.Maths.Vector.Normalized*
        name: Normalized
        nameWithType: Vector.Normalized
        qualifiedName: Engine.Core.Maths.Vector.Normalized
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Normalized
  Engine.Core.Maths.Vector.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.#ctor*
        name: Vector
        nameWithType: Vector.Vector
        qualifiedName: Engine.Core.Maths.Vector.Vector
      VB:
      - id: Engine.Core.Maths.Vector.#ctor*
        name: Vector
        nameWithType: Vector.Vector
        qualifiedName: Engine.Core.Maths.Vector.Vector
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.#ctor
  Engine.Core.Maths.Vector.Normalize*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Normalize*
        name: Normalize
        nameWithType: Vector.Normalize
        qualifiedName: Engine.Core.Maths.Vector.Normalize
      VB:
      - id: Engine.Core.Maths.Vector.Normalize*
        name: Normalize
        nameWithType: Vector.Normalize
        qualifiedName: Engine.Core.Maths.Vector.Normalize
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Normalize
  Engine.Core.Maths.Vector.GetLength*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.GetLength*
        name: GetLength
        nameWithType: Vector.GetLength
        qualifiedName: Engine.Core.Maths.Vector.GetLength
      VB:
      - id: Engine.Core.Maths.Vector.GetLength*
        name: GetLength
        nameWithType: Vector.GetLength
        qualifiedName: Engine.Core.Maths.Vector.GetLength
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.GetLength
  Engine.Core.Maths.Vector.IsDimensionEqual*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.IsDimensionEqual*
        name: IsDimensionEqual
        nameWithType: Vector.IsDimensionEqual
        qualifiedName: Engine.Core.Maths.Vector.IsDimensionEqual
      VB:
      - id: Engine.Core.Maths.Vector.IsDimensionEqual*
        name: IsDimensionEqual
        nameWithType: Vector.IsDimensionEqual
        qualifiedName: Engine.Core.Maths.Vector.IsDimensionEqual
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.IsDimensionEqual
  Engine.Core.Maths.Vector.SetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.SetValue*
        name: SetValue
        nameWithType: Vector.SetValue
        qualifiedName: Engine.Core.Maths.Vector.SetValue
      VB:
      - id: Engine.Core.Maths.Vector.SetValue*
        name: SetValue
        nameWithType: Vector.SetValue
        qualifiedName: Engine.Core.Maths.Vector.SetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.SetValue
  Engine.Core.Maths.Vector.GetValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.GetValue*
        name: GetValue
        nameWithType: Vector.GetValue
        qualifiedName: Engine.Core.Maths.Vector.GetValue
      VB:
      - id: Engine.Core.Maths.Vector.GetValue*
        name: GetValue
        nameWithType: Vector.GetValue
        qualifiedName: Engine.Core.Maths.Vector.GetValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.GetValue
  Engine.Core.Maths.Vector.AddValue*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.AddValue*
        name: AddValue
        nameWithType: Vector.AddValue
        qualifiedName: Engine.Core.Maths.Vector.AddValue
      VB:
      - id: Engine.Core.Maths.Vector.AddValue*
        name: AddValue
        nameWithType: Vector.AddValue
        qualifiedName: Engine.Core.Maths.Vector.AddValue
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.AddValue
  Engine.Core.Maths.Vector.DotProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.DotProduct*
        name: DotProduct
        nameWithType: Vector.DotProduct
        qualifiedName: Engine.Core.Maths.Vector.DotProduct
      VB:
      - id: Engine.Core.Maths.Vector.DotProduct*
        name: DotProduct
        nameWithType: Vector.DotProduct
        qualifiedName: Engine.Core.Maths.Vector.DotProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.DotProduct
  Engine.Core.Maths.Vector.ScalarProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector.ScalarProduct
      VB:
      - id: Engine.Core.Maths.Vector.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector.ScalarProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.ScalarProduct
  Engine.Core.Maths.Vector.CrossProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.CrossProduct*
        name: CrossProduct
        nameWithType: Vector.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector.CrossProduct
      VB:
      - id: Engine.Core.Maths.Vector.CrossProduct*
        name: CrossProduct
        nameWithType: Vector.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector.CrossProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.CrossProduct
  Engine.Core.Maths.Vector.Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Addition*
        name: Addition
        nameWithType: Vector.Addition
        qualifiedName: Engine.Core.Maths.Vector.Addition
      VB:
      - id: Engine.Core.Maths.Vector.Addition*
        name: Addition
        nameWithType: Vector.Addition
        qualifiedName: Engine.Core.Maths.Vector.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Addition
  Engine.Core.Maths.Vector.Substraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Substraction*
        name: Substraction
        nameWithType: Vector.Substraction
        qualifiedName: Engine.Core.Maths.Vector.Substraction
      VB:
      - id: Engine.Core.Maths.Vector.Substraction*
        name: Substraction
        nameWithType: Vector.Substraction
        qualifiedName: Engine.Core.Maths.Vector.Substraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Substraction
  Engine.Core.Maths.Vector.Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Division*
        name: Division
        nameWithType: Vector.Division
        qualifiedName: Engine.Core.Maths.Vector.Division
      VB:
      - id: Engine.Core.Maths.Vector.Division*
        name: Division
        nameWithType: Vector.Division
        qualifiedName: Engine.Core.Maths.Vector.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Division
  Engine.Core.Maths.Vector.Dot*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Dot*
        name: Dot
        nameWithType: Vector.Dot
        qualifiedName: Engine.Core.Maths.Vector.Dot
      VB:
      - id: Engine.Core.Maths.Vector.Dot*
        name: Dot
        nameWithType: Vector.Dot
        qualifiedName: Engine.Core.Maths.Vector.Dot
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Dot
  Engine.Core.Maths.Vector.Cross*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Cross*
        name: Cross
        nameWithType: Vector.Cross
        qualifiedName: Engine.Core.Maths.Vector.Cross
      VB:
      - id: Engine.Core.Maths.Vector.Cross*
        name: Cross
        nameWithType: Vector.Cross
        qualifiedName: Engine.Core.Maths.Vector.Cross
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Cross
  Engine.Core.Maths.Vector.Scalar*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.Scalar*
        name: Scalar
        nameWithType: Vector.Scalar
        qualifiedName: Engine.Core.Maths.Vector.Scalar
      VB:
      - id: Engine.Core.Maths.Vector.Scalar*
        name: Scalar
        nameWithType: Vector.Scalar
        qualifiedName: Engine.Core.Maths.Vector.Scalar
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.Scalar
  Engine.Core.Maths.Vector.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.op_Addition*
        name: Addition
        nameWithType: Vector.Addition
        qualifiedName: Engine.Core.Maths.Vector.Addition
      VB:
      - id: Engine.Core.Maths.Vector.op_Addition*
        name: Addition
        nameWithType: Vector.Addition
        qualifiedName: Engine.Core.Maths.Vector.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.op_Addition
  Engine.Core.Maths.Vector.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.op_Subtraction*
        name: Subtraction
        nameWithType: Vector.Subtraction
        qualifiedName: Engine.Core.Maths.Vector.Subtraction
      VB:
      - id: Engine.Core.Maths.Vector.op_Subtraction*
        name: Subtraction
        nameWithType: Vector.Subtraction
        qualifiedName: Engine.Core.Maths.Vector.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.op_Subtraction
  Engine.Core.Maths.Vector.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.op_Multiply*
        name: Multiply
        nameWithType: Vector.Multiply
        qualifiedName: Engine.Core.Maths.Vector.Multiply
      VB:
      - id: Engine.Core.Maths.Vector.op_Multiply*
        name: Multiply
        nameWithType: Vector.Multiply
        qualifiedName: Engine.Core.Maths.Vector.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.op_Multiply
  Engine.Core.Maths.Vector.op_Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.op_Division*
        name: Division
        nameWithType: Vector.Division
        qualifiedName: Engine.Core.Maths.Vector.Division
      VB:
      - id: Engine.Core.Maths.Vector.op_Division*
        name: Division
        nameWithType: Vector.Division
        qualifiedName: Engine.Core.Maths.Vector.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.op_Division
  Engine.Core.Maths.Vector.ToMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.ToMatrix*
        name: ToMatrix
        nameWithType: Vector.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector.ToMatrix
      VB:
      - id: Engine.Core.Maths.Vector.ToMatrix*
        name: ToMatrix
        nameWithType: Vector.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector.ToMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.ToMatrix
  Engine.Core.Maths.Vector.GetEnumerator*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector.GetEnumerator*
        name: GetEnumerator
        nameWithType: Vector.GetEnumerator
        qualifiedName: Engine.Core.Maths.Vector.GetEnumerator
      VB:
      - id: Engine.Core.Maths.Vector.GetEnumerator*
        name: GetEnumerator
        nameWithType: Vector.GetEnumerator
        qualifiedName: Engine.Core.Maths.Vector.GetEnumerator
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector.GetEnumerator
  System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator:
    name:
      CSharp:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable<Single>.GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable<System.Single>.GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Collections.Generic.IEnumerable`1.GetEnumerator
        name: GetEnumerator
        nameWithType: IEnumerable(Of Single).GetEnumerator
        qualifiedName: System.Collections.Generic.IEnumerable(Of System.Single).GetEnumerator
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
    parent: System.Collections.Generic.IEnumerable{System.Single}
    commentId: M:System.Collections.Generic.IEnumerable{System.Single}.GetEnumerator
  Engine.Core.Maths.Vector2:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Engine.Core.Maths.Vector2
      VB:
      - id: Engine.Core.Maths.Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Engine.Core.Maths.Vector2
    isDefinition: true
    parent: Engine.Core.Maths
    commentId: T:Engine.Core.Maths.Vector2
  Engine.Core.Maths.Vector2.X*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.X*
        name: X
        nameWithType: Vector2.X
        qualifiedName: Engine.Core.Maths.Vector2.X
      VB:
      - id: Engine.Core.Maths.Vector2.X*
        name: X
        nameWithType: Vector2.X
        qualifiedName: Engine.Core.Maths.Vector2.X
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.X
  Engine.Core.Maths.Vector2.Y*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Y*
        name: Y
        nameWithType: Vector2.Y
        qualifiedName: Engine.Core.Maths.Vector2.Y
      VB:
      - id: Engine.Core.Maths.Vector2.Y*
        name: Y
        nameWithType: Vector2.Y
        qualifiedName: Engine.Core.Maths.Vector2.Y
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Y
  Engine.Core.Maths.Vector2.Length*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Length*
        name: Length
        nameWithType: Vector2.Length
        qualifiedName: Engine.Core.Maths.Vector2.Length
      VB:
      - id: Engine.Core.Maths.Vector2.Length*
        name: Length
        nameWithType: Vector2.Length
        qualifiedName: Engine.Core.Maths.Vector2.Length
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Length
  Engine.Core.Maths.Vector2.LengthSquared*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.LengthSquared*
        name: LengthSquared
        nameWithType: Vector2.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector2.LengthSquared
      VB:
      - id: Engine.Core.Maths.Vector2.LengthSquared*
        name: LengthSquared
        nameWithType: Vector2.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector2.LengthSquared
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.LengthSquared
  Engine.Core.Maths.Vector2.Normalized*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Normalized*
        name: Normalized
        nameWithType: Vector2.Normalized
        qualifiedName: Engine.Core.Maths.Vector2.Normalized
      VB:
      - id: Engine.Core.Maths.Vector2.Normalized*
        name: Normalized
        nameWithType: Vector2.Normalized
        qualifiedName: Engine.Core.Maths.Vector2.Normalized
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Normalized
  Engine.Core.Maths.Vector2.Dimension*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Dimension*
        name: Dimension
        nameWithType: Vector2.Dimension
        qualifiedName: Engine.Core.Maths.Vector2.Dimension
      VB:
      - id: Engine.Core.Maths.Vector2.Dimension*
        name: Dimension
        nameWithType: Vector2.Dimension
        qualifiedName: Engine.Core.Maths.Vector2.Dimension
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Dimension
  Engine.Core.Maths.Vector2.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Item*
        name: Item
        nameWithType: Vector2.Item
        qualifiedName: Engine.Core.Maths.Vector2.Item
      VB:
      - id: Engine.Core.Maths.Vector2.Item*
        name: Item
        nameWithType: Vector2.Item
        qualifiedName: Engine.Core.Maths.Vector2.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Item
  Engine.Core.Maths.Vector2.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.#ctor*
        name: Vector2
        nameWithType: Vector2.Vector2
        qualifiedName: Engine.Core.Maths.Vector2.Vector2
      VB:
      - id: Engine.Core.Maths.Vector2.#ctor*
        name: Vector2
        nameWithType: Vector2.Vector2
        qualifiedName: Engine.Core.Maths.Vector2.Vector2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.#ctor
  Engine.Core.Maths.Vector2.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.op_Multiply*
        name: Multiply
        nameWithType: Vector2.Multiply
        qualifiedName: Engine.Core.Maths.Vector2.Multiply
      VB:
      - id: Engine.Core.Maths.Vector2.op_Multiply*
        name: Multiply
        nameWithType: Vector2.Multiply
        qualifiedName: Engine.Core.Maths.Vector2.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.op_Multiply
  Engine.Core.Maths.Vector2.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.op_Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Engine.Core.Maths.Vector2.Addition
      VB:
      - id: Engine.Core.Maths.Vector2.op_Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Engine.Core.Maths.Vector2.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.op_Addition
  Engine.Core.Maths.Vector2.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.op_Subtraction*
        name: Subtraction
        nameWithType: Vector2.Subtraction
        qualifiedName: Engine.Core.Maths.Vector2.Subtraction
      VB:
      - id: Engine.Core.Maths.Vector2.op_Subtraction*
        name: Subtraction
        nameWithType: Vector2.Subtraction
        qualifiedName: Engine.Core.Maths.Vector2.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.op_Subtraction
  Engine.Core.Maths.Vector2.op_Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.op_Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Engine.Core.Maths.Vector2.Division
      VB:
      - id: Engine.Core.Maths.Vector2.op_Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Engine.Core.Maths.Vector2.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.op_Division
  Engine.Core.Maths.Vector2.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.op_Implicit*
        name: Implicit
        nameWithType: Vector2.Implicit
        qualifiedName: Engine.Core.Maths.Vector2.Implicit
      VB:
      - id: Engine.Core.Maths.Vector2.op_Implicit*
        name: Widening
        nameWithType: Vector2.Widening
        qualifiedName: Engine.Core.Maths.Vector2.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.op_Implicit
  Engine.Core.Maths.Vector2.ToMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.ToMatrix*
        name: ToMatrix
        nameWithType: Vector2.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector2.ToMatrix
      VB:
      - id: Engine.Core.Maths.Vector2.ToMatrix*
        name: ToMatrix
        nameWithType: Vector2.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector2.ToMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.ToMatrix
  Engine.Core.Maths.Vector2.CrossProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.CrossProduct*
        name: CrossProduct
        nameWithType: Vector2.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector2.CrossProduct
      VB:
      - id: Engine.Core.Maths.Vector2.CrossProduct*
        name: CrossProduct
        nameWithType: Vector2.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector2.CrossProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.CrossProduct
  Engine.Core.Maths.Vector2.DotProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.DotProduct*
        name: DotProduct
        nameWithType: Vector2.DotProduct
        qualifiedName: Engine.Core.Maths.Vector2.DotProduct
      VB:
      - id: Engine.Core.Maths.Vector2.DotProduct*
        name: DotProduct
        nameWithType: Vector2.DotProduct
        qualifiedName: Engine.Core.Maths.Vector2.DotProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.DotProduct
  Engine.Core.Maths.Vector2.Normalize*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Normalize*
        name: Normalize
        nameWithType: Vector2.Normalize
        qualifiedName: Engine.Core.Maths.Vector2.Normalize
      VB:
      - id: Engine.Core.Maths.Vector2.Normalize*
        name: Normalize
        nameWithType: Vector2.Normalize
        qualifiedName: Engine.Core.Maths.Vector2.Normalize
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Normalize
  Engine.Core.Maths.Vector2.GetLength*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.GetLength*
        name: GetLength
        nameWithType: Vector2.GetLength
        qualifiedName: Engine.Core.Maths.Vector2.GetLength
      VB:
      - id: Engine.Core.Maths.Vector2.GetLength*
        name: GetLength
        nameWithType: Vector2.GetLength
        qualifiedName: Engine.Core.Maths.Vector2.GetLength
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.GetLength
  Engine.Core.Maths.Vector2.AngleBetween*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.AngleBetween*
        name: AngleBetween
        nameWithType: Vector2.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector2.AngleBetween
      VB:
      - id: Engine.Core.Maths.Vector2.AngleBetween*
        name: AngleBetween
        nameWithType: Vector2.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector2.AngleBetween
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.AngleBetween
  Engine.Core.Maths.Vector2.OrthogonalityCheck*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.OrthogonalityCheck*
        name: OrthogonalityCheck
        nameWithType: Vector2.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector2.OrthogonalityCheck
      VB:
      - id: Engine.Core.Maths.Vector2.OrthogonalityCheck*
        name: OrthogonalityCheck
        nameWithType: Vector2.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector2.OrthogonalityCheck
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.OrthogonalityCheck
  Engine.Core.Maths.Vector2.ScalarProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector2.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector2.ScalarProduct
      VB:
      - id: Engine.Core.Maths.Vector2.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector2.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector2.ScalarProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.ScalarProduct
  Engine.Core.Maths.Vector2.Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Engine.Core.Maths.Vector2.Addition
      VB:
      - id: Engine.Core.Maths.Vector2.Addition*
        name: Addition
        nameWithType: Vector2.Addition
        qualifiedName: Engine.Core.Maths.Vector2.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Addition
  Engine.Core.Maths.Vector2.Substraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Substraction*
        name: Substraction
        nameWithType: Vector2.Substraction
        qualifiedName: Engine.Core.Maths.Vector2.Substraction
      VB:
      - id: Engine.Core.Maths.Vector2.Substraction*
        name: Substraction
        nameWithType: Vector2.Substraction
        qualifiedName: Engine.Core.Maths.Vector2.Substraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Substraction
  Engine.Core.Maths.Vector2.Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Engine.Core.Maths.Vector2.Division
      VB:
      - id: Engine.Core.Maths.Vector2.Division*
        name: Division
        nameWithType: Vector2.Division
        qualifiedName: Engine.Core.Maths.Vector2.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.Division
  Engine.Core.Maths.Vector2.IsPerpendicularTo*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.IsPerpendicularTo*
        name: IsPerpendicularTo
        nameWithType: Vector2.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector2.IsPerpendicularTo
      VB:
      - id: Engine.Core.Maths.Vector2.IsPerpendicularTo*
        name: IsPerpendicularTo
        nameWithType: Vector2.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector2.IsPerpendicularTo
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.IsPerpendicularTo
  Engine.Core.Maths.Vector2.GetNormalVector*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.GetNormalVector*
        name: GetNormalVector
        nameWithType: Vector2.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector2.GetNormalVector
      VB:
      - id: Engine.Core.Maths.Vector2.GetNormalVector*
        name: GetNormalVector
        nameWithType: Vector2.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector2.GetNormalVector
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.GetNormalVector
  Engine.Core.Maths.Vector2.IsZero*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector2.IsZero*
        name: IsZero
        nameWithType: Vector2.IsZero
        qualifiedName: Engine.Core.Maths.Vector2.IsZero
      VB:
      - id: Engine.Core.Maths.Vector2.IsZero*
        name: IsZero
        nameWithType: Vector2.IsZero
        qualifiedName: Engine.Core.Maths.Vector2.IsZero
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector2.IsZero
  Engine.Core.Maths.Vector3.X1*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.X1*
        name: X1
        nameWithType: Vector3.X1
        qualifiedName: Engine.Core.Maths.Vector3.X1
      VB:
      - id: Engine.Core.Maths.Vector3.X1*
        name: X1
        nameWithType: Vector3.X1
        qualifiedName: Engine.Core.Maths.Vector3.X1
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.X1
  Engine.Core.Maths.Vector3.X2*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.X2*
        name: X2
        nameWithType: Vector3.X2
        qualifiedName: Engine.Core.Maths.Vector3.X2
      VB:
      - id: Engine.Core.Maths.Vector3.X2*
        name: X2
        nameWithType: Vector3.X2
        qualifiedName: Engine.Core.Maths.Vector3.X2
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.X2
  Engine.Core.Maths.Vector3.X3*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.X3*
        name: X3
        nameWithType: Vector3.X3
        qualifiedName: Engine.Core.Maths.Vector3.X3
      VB:
      - id: Engine.Core.Maths.Vector3.X3*
        name: X3
        nameWithType: Vector3.X3
        qualifiedName: Engine.Core.Maths.Vector3.X3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.X3
  Engine.Core.Maths.Vector3.Length*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Length*
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Engine.Core.Maths.Vector3.Length
      VB:
      - id: Engine.Core.Maths.Vector3.Length*
        name: Length
        nameWithType: Vector3.Length
        qualifiedName: Engine.Core.Maths.Vector3.Length
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Length
  Engine.Core.Maths.Vector3.LengthSquared*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.LengthSquared*
        name: LengthSquared
        nameWithType: Vector3.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector3.LengthSquared
      VB:
      - id: Engine.Core.Maths.Vector3.LengthSquared*
        name: LengthSquared
        nameWithType: Vector3.LengthSquared
        qualifiedName: Engine.Core.Maths.Vector3.LengthSquared
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.LengthSquared
  Engine.Core.Maths.Vector3.Normalized*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Normalized*
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Engine.Core.Maths.Vector3.Normalized
      VB:
      - id: Engine.Core.Maths.Vector3.Normalized*
        name: Normalized
        nameWithType: Vector3.Normalized
        qualifiedName: Engine.Core.Maths.Vector3.Normalized
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Normalized
  Engine.Core.Maths.Vector3.Dimension*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Dimension*
        name: Dimension
        nameWithType: Vector3.Dimension
        qualifiedName: Engine.Core.Maths.Vector3.Dimension
      VB:
      - id: Engine.Core.Maths.Vector3.Dimension*
        name: Dimension
        nameWithType: Vector3.Dimension
        qualifiedName: Engine.Core.Maths.Vector3.Dimension
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Dimension
  Engine.Core.Maths.Vector3.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Item*
        name: Item
        nameWithType: Vector3.Item
        qualifiedName: Engine.Core.Maths.Vector3.Item
      VB:
      - id: Engine.Core.Maths.Vector3.Item*
        name: Item
        nameWithType: Vector3.Item
        qualifiedName: Engine.Core.Maths.Vector3.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Item
  Engine.Core.Maths.Vector3.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.#ctor*
        name: Vector3
        nameWithType: Vector3.Vector3
        qualifiedName: Engine.Core.Maths.Vector3.Vector3
      VB:
      - id: Engine.Core.Maths.Vector3.#ctor*
        name: Vector3
        nameWithType: Vector3.Vector3
        qualifiedName: Engine.Core.Maths.Vector3.Vector3
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.#ctor
  Engine.Core.Maths.Vector3.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.op_Multiply*
        name: Multiply
        nameWithType: Vector3.Multiply
        qualifiedName: Engine.Core.Maths.Vector3.Multiply
      VB:
      - id: Engine.Core.Maths.Vector3.op_Multiply*
        name: Multiply
        nameWithType: Vector3.Multiply
        qualifiedName: Engine.Core.Maths.Vector3.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.op_Multiply
  Engine.Core.Maths.Vector3.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.op_Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
      VB:
      - id: Engine.Core.Maths.Vector3.op_Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.op_Addition
  Engine.Core.Maths.Vector3.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.op_Subtraction*
        name: Subtraction
        nameWithType: Vector3.Subtraction
        qualifiedName: Engine.Core.Maths.Vector3.Subtraction
      VB:
      - id: Engine.Core.Maths.Vector3.op_Subtraction*
        name: Subtraction
        nameWithType: Vector3.Subtraction
        qualifiedName: Engine.Core.Maths.Vector3.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.op_Subtraction
  Engine.Core.Maths.Vector3.op_Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.op_Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
      VB:
      - id: Engine.Core.Maths.Vector3.op_Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.op_Division
  Engine.Core.Maths.Vector3.op_Implicit*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.op_Implicit*
        name: Implicit
        nameWithType: Vector3.Implicit
        qualifiedName: Engine.Core.Maths.Vector3.Implicit
      VB:
      - id: Engine.Core.Maths.Vector3.op_Implicit*
        name: Widening
        nameWithType: Vector3.Widening
        qualifiedName: Engine.Core.Maths.Vector3.Widening
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.op_Implicit
  Engine.Core.Maths.Vector3.ToMatrix*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.ToMatrix*
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
      VB:
      - id: Engine.Core.Maths.Vector3.ToMatrix*
        name: ToMatrix
        nameWithType: Vector3.ToMatrix
        qualifiedName: Engine.Core.Maths.Vector3.ToMatrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.ToMatrix
  Engine.Core.Maths.Vector3.CrossProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.CrossProduct*
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
      VB:
      - id: Engine.Core.Maths.Vector3.CrossProduct*
        name: CrossProduct
        nameWithType: Vector3.CrossProduct
        qualifiedName: Engine.Core.Maths.Vector3.CrossProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.CrossProduct
  Engine.Core.Maths.Vector3.DotProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.DotProduct*
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
      VB:
      - id: Engine.Core.Maths.Vector3.DotProduct*
        name: DotProduct
        nameWithType: Vector3.DotProduct
        qualifiedName: Engine.Core.Maths.Vector3.DotProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.DotProduct
  Engine.Core.Maths.Vector3.Normalize*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Normalize*
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
      VB:
      - id: Engine.Core.Maths.Vector3.Normalize*
        name: Normalize
        nameWithType: Vector3.Normalize
        qualifiedName: Engine.Core.Maths.Vector3.Normalize
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Normalize
  Engine.Core.Maths.Vector3.GetLength*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.GetLength*
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
      VB:
      - id: Engine.Core.Maths.Vector3.GetLength*
        name: GetLength
        nameWithType: Vector3.GetLength
        qualifiedName: Engine.Core.Maths.Vector3.GetLength
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.GetLength
  Engine.Core.Maths.Vector3.AngleBetween*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.AngleBetween*
        name: AngleBetween
        nameWithType: Vector3.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector3.AngleBetween
      VB:
      - id: Engine.Core.Maths.Vector3.AngleBetween*
        name: AngleBetween
        nameWithType: Vector3.AngleBetween
        qualifiedName: Engine.Core.Maths.Vector3.AngleBetween
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.AngleBetween
  Engine.Core.Maths.Vector3.OrthogonalityCheck*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.OrthogonalityCheck*
        name: OrthogonalityCheck
        nameWithType: Vector3.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector3.OrthogonalityCheck
      VB:
      - id: Engine.Core.Maths.Vector3.OrthogonalityCheck*
        name: OrthogonalityCheck
        nameWithType: Vector3.OrthogonalityCheck
        qualifiedName: Engine.Core.Maths.Vector3.OrthogonalityCheck
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.OrthogonalityCheck
  Engine.Core.Maths.Vector3.ScalarProduct*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector3.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector3.ScalarProduct
      VB:
      - id: Engine.Core.Maths.Vector3.ScalarProduct*
        name: ScalarProduct
        nameWithType: Vector3.ScalarProduct
        qualifiedName: Engine.Core.Maths.Vector3.ScalarProduct
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.ScalarProduct
  Engine.Core.Maths.Vector3.Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
      VB:
      - id: Engine.Core.Maths.Vector3.Addition*
        name: Addition
        nameWithType: Vector3.Addition
        qualifiedName: Engine.Core.Maths.Vector3.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Addition
  Engine.Core.Maths.Vector3.Substraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Substraction*
        name: Substraction
        nameWithType: Vector3.Substraction
        qualifiedName: Engine.Core.Maths.Vector3.Substraction
      VB:
      - id: Engine.Core.Maths.Vector3.Substraction*
        name: Substraction
        nameWithType: Vector3.Substraction
        qualifiedName: Engine.Core.Maths.Vector3.Substraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Substraction
  Engine.Core.Maths.Vector3.Division*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
      VB:
      - id: Engine.Core.Maths.Vector3.Division*
        name: Division
        nameWithType: Vector3.Division
        qualifiedName: Engine.Core.Maths.Vector3.Division
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Division
  Engine.Core.Maths.Vector3.IsPerpendicularTo*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.IsPerpendicularTo*
        name: IsPerpendicularTo
        nameWithType: Vector3.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector3.IsPerpendicularTo
      VB:
      - id: Engine.Core.Maths.Vector3.IsPerpendicularTo*
        name: IsPerpendicularTo
        nameWithType: Vector3.IsPerpendicularTo
        qualifiedName: Engine.Core.Maths.Vector3.IsPerpendicularTo
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.IsPerpendicularTo
  Engine.Core.Maths.Vector3.GetNormalVector*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.GetNormalVector*
        name: GetNormalVector
        nameWithType: Vector3.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector3.GetNormalVector
      VB:
      - id: Engine.Core.Maths.Vector3.GetNormalVector*
        name: GetNormalVector
        nameWithType: Vector3.GetNormalVector
        qualifiedName: Engine.Core.Maths.Vector3.GetNormalVector
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.GetNormalVector
  Engine.Core.Maths.Vector3.IsZero*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.IsZero*
        name: IsZero
        nameWithType: Vector3.IsZero
        qualifiedName: Engine.Core.Maths.Vector3.IsZero
      VB:
      - id: Engine.Core.Maths.Vector3.IsZero*
        name: IsZero
        nameWithType: Vector3.IsZero
        qualifiedName: Engine.Core.Maths.Vector3.IsZero
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.IsZero
  Engine.Core.Maths.Vector3.Project*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Vector3.Project*
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
      VB:
      - id: Engine.Core.Maths.Vector3.Project*
        name: Project
        nameWithType: Vector3.Project
        qualifiedName: Engine.Core.Maths.Vector3.Project
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Vector3.Project
  Engine.Core.Maths.Obsolete:
    name:
      CSharp:
      - name: Engine.Core.Maths.Obsolete
        nameWithType: Engine.Core.Maths.Obsolete
        qualifiedName: Engine.Core.Maths.Obsolete
      VB:
      - name: Engine.Core.Maths.Obsolete
        nameWithType: Engine.Core.Maths.Obsolete
        qualifiedName: Engine.Core.Maths.Obsolete
    isDefinition: true
    commentId: N:Engine.Core.Maths.Obsolete
  Engine.Core.Maths.Obsolete.Matrix:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix
        name: Matrix
        nameWithType: Matrix
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix
        name: Matrix
        nameWithType: Matrix
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix
    isDefinition: true
    parent: Engine.Core.Maths.Obsolete
    commentId: T:Engine.Core.Maths.Obsolete.Matrix
  Engine.Core.Maths.Obsolete.Gaussian.GaussianResult:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
        name: Gaussian.GaussianResult
        nameWithType: Gaussian.GaussianResult
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
      VB:
      - id: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
        name: Gaussian.GaussianResult
        nameWithType: Gaussian.GaussianResult
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
    isDefinition: true
    parent: Engine.Core.Maths.Obsolete
    commentId: T:Engine.Core.Maths.Obsolete.Gaussian.GaussianResult
  Engine.Core.Maths.Obsolete.Gaussian.Elimination*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Gaussian.Elimination*
        name: Elimination
        nameWithType: Gaussian.Elimination
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian.Elimination
      VB:
      - id: Engine.Core.Maths.Obsolete.Gaussian.Elimination*
        name: Elimination
        nameWithType: Gaussian.Elimination
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian.Elimination
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Gaussian.Elimination
  Engine.Core.Maths.Obsolete.Gaussian:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Gaussian
        name: Gaussian
        nameWithType: Gaussian
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian
      VB:
      - id: Engine.Core.Maths.Obsolete.Gaussian
        name: Gaussian
        nameWithType: Gaussian
        qualifiedName: Engine.Core.Maths.Obsolete.Gaussian
    isDefinition: true
    commentId: T:Engine.Core.Maths.Obsolete.Gaussian
  System.ObsoleteAttribute.#ctor:
    name:
      CSharp:
      - id: System.ObsoleteAttribute.#ctor
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ObsoleteAttribute.#ctor
        name: ObsoleteAttribute
        nameWithType: ObsoleteAttribute.ObsoleteAttribute
        qualifiedName: System.ObsoleteAttribute.ObsoleteAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ObsoleteAttribute
    commentId: M:System.ObsoleteAttribute.#ctor
  System.Collections.Generic.List{System.Collections.Generic.List{System.Single}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Collections.Generic.List{System.Single}}
  Engine.Core.Maths.Obsolete.Matrix.Values*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.Values*
        name: Values
        nameWithType: Matrix.Values
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Values
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.Values*
        name: Values
        nameWithType: Matrix.Values
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Values
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.Values
  Engine.Core.Maths.Obsolete.Matrix.RowCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.RowCount*
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.RowCount
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.RowCount*
        name: RowCount
        nameWithType: Matrix.RowCount
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.RowCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.RowCount
  Engine.Core.Maths.Obsolete.Matrix.ColumnCount*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ColumnCount
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.ColumnCount*
        name: ColumnCount
        nameWithType: Matrix.ColumnCount
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ColumnCount
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.ColumnCount
  Engine.Core.Maths.Obsolete.Matrix.Item*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.Item*
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Item
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.Item*
        name: Item
        nameWithType: Matrix.Item
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Item
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.Item
  Engine.Core.Maths.Obsolete.Matrix.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.#ctor*
        name: Matrix
        nameWithType: Matrix.Matrix
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Matrix
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.#ctor*
        name: Matrix
        nameWithType: Matrix.Matrix
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Matrix
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.#ctor
  Engine.Core.Maths.Obsolete.Matrix.op_Multiply*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Multiply*
        name: Multiply
        nameWithType: Matrix.Multiply
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Multiply
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Multiply*
        name: Multiply
        nameWithType: Matrix.Multiply
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Multiply
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.op_Multiply
  Engine.Core.Maths.Obsolete.Matrix.op_Addition*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Addition*
        name: Addition
        nameWithType: Matrix.Addition
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Addition
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Addition*
        name: Addition
        nameWithType: Matrix.Addition
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Addition
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.op_Addition
  Engine.Core.Maths.Obsolete.Matrix.op_Subtraction*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Subtraction*
        name: Subtraction
        nameWithType: Matrix.Subtraction
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Subtraction
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.op_Subtraction*
        name: Subtraction
        nameWithType: Matrix.Subtraction
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.Subtraction
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.op_Subtraction
  Engine.Core.Maths.Obsolete.Matrix.ConvertTo*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.ConvertTo*
        name: ConvertTo
        nameWithType: Matrix.ConvertTo
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ConvertTo
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.ConvertTo*
        name: ConvertTo
        nameWithType: Matrix.ConvertTo
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ConvertTo
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.ConvertTo
  Engine.Core.Maths.Obsolete.Matrix.GetRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.GetRow*
        name: GetRow
        nameWithType: Matrix.GetRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.GetRow
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.GetRow*
        name: GetRow
        nameWithType: Matrix.GetRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.GetRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.GetRow
  Engine.Core.Maths.Obsolete.Matrix.GetColumn*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.GetColumn*
        name: GetColumn
        nameWithType: Matrix.GetColumn
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.GetColumn
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.GetColumn*
        name: GetColumn
        nameWithType: Matrix.GetColumn
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.GetColumn
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.GetColumn
  Engine.Core.Maths.Obsolete.Matrix.ScaleRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.ScaleRow*
        name: ScaleRow
        nameWithType: Matrix.ScaleRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ScaleRow
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.ScaleRow*
        name: ScaleRow
        nameWithType: Matrix.ScaleRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.ScaleRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.ScaleRow
  Engine.Core.Maths.Obsolete.Matrix.SwapRows*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.SwapRows*
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.SwapRows
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.SwapRows*
        name: SwapRows
        nameWithType: Matrix.SwapRows
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.SwapRows
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.SwapRows
  Engine.Core.Maths.Obsolete.Matrix.AddRow*:
    name:
      CSharp:
      - id: Engine.Core.Maths.Obsolete.Matrix.AddRow*
        name: AddRow
        nameWithType: Matrix.AddRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.AddRow
      VB:
      - id: Engine.Core.Maths.Obsolete.Matrix.AddRow*
        name: AddRow
        nameWithType: Matrix.AddRow
        qualifiedName: Engine.Core.Maths.Obsolete.Matrix.AddRow
    isDefinition: true
    commentId: Overload:Engine.Core.Maths.Obsolete.Matrix.AddRow
  Engine.Core.Physics.Optics:
    name:
      CSharp:
      - name: Engine.Core.Physics.Optics
        nameWithType: Engine.Core.Physics.Optics
        qualifiedName: Engine.Core.Physics.Optics
      VB:
      - name: Engine.Core.Physics.Optics
        nameWithType: Engine.Core.Physics.Optics
        qualifiedName: Engine.Core.Physics.Optics
    isDefinition: true
    commentId: N:Engine.Core.Physics.Optics
  Engine.Core.Physics.Optics.LensType:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.LensType
        name: LensType
        nameWithType: LensType
        qualifiedName: Engine.Core.Physics.Optics.LensType
      VB:
      - id: Engine.Core.Physics.Optics.LensType
        name: LensType
        nameWithType: LensType
        qualifiedName: Engine.Core.Physics.Optics.LensType
    isDefinition: true
    parent: Engine.Core.Physics.Optics
    commentId: T:Engine.Core.Physics.Optics.LensType
  Engine.Core.Physics.Optics.Lens.Type*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.Type*
        name: Type
        nameWithType: Lens.Type
        qualifiedName: Engine.Core.Physics.Optics.Lens.Type
      VB:
      - id: Engine.Core.Physics.Optics.Lens.Type*
        name: Type
        nameWithType: Lens.Type
        qualifiedName: Engine.Core.Physics.Optics.Lens.Type
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.Type
  Engine.Core.Physics.Optics.Lens.FovX*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.FovX*
        name: FovX
        nameWithType: Lens.FovX
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovX
      VB:
      - id: Engine.Core.Physics.Optics.Lens.FovX*
        name: FovX
        nameWithType: Lens.FovX
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovX
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.FovX
  Engine.Core.Physics.Optics.Lens.FovY*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.FovY*
        name: FovY
        nameWithType: Lens.FovY
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovY
      VB:
      - id: Engine.Core.Physics.Optics.Lens.FovY*
        name: FovY
        nameWithType: Lens.FovY
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovY
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.FovY
  Engine.Core.Physics.Optics.Lens.FovXRad*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.FovXRad*
        name: FovXRad
        nameWithType: Lens.FovXRad
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovXRad
      VB:
      - id: Engine.Core.Physics.Optics.Lens.FovXRad*
        name: FovXRad
        nameWithType: Lens.FovXRad
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovXRad
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.FovXRad
  Engine.Core.Physics.Optics.Lens.FovYRad*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.FovYRad*
        name: FovYRad
        nameWithType: Lens.FovYRad
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovYRad
      VB:
      - id: Engine.Core.Physics.Optics.Lens.FovYRad*
        name: FovYRad
        nameWithType: Lens.FovYRad
        qualifiedName: Engine.Core.Physics.Optics.Lens.FovYRad
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.FovYRad
  Engine.Core.Physics.Optics.Lens.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.#ctor*
        name: Lens
        nameWithType: Lens.Lens
        qualifiedName: Engine.Core.Physics.Optics.Lens.Lens
      VB:
      - id: Engine.Core.Physics.Optics.Lens.#ctor*
        name: Lens
        nameWithType: Lens.Lens
        qualifiedName: Engine.Core.Physics.Optics.Lens.Lens
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.#ctor
  Camera:
    name:
      CSharp:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
      VB:
      - id: Camera
        name: Camera
        nameWithType: Camera
        qualifiedName: Camera
        isExternal: true
    isDefinition: true
  Engine.Core.Physics.Optics.Lens.CreateRay*:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens.CreateRay*
        name: CreateRay
        nameWithType: Lens.CreateRay
        qualifiedName: Engine.Core.Physics.Optics.Lens.CreateRay
      VB:
      - id: Engine.Core.Physics.Optics.Lens.CreateRay*
        name: CreateRay
        nameWithType: Lens.CreateRay
        qualifiedName: Engine.Core.Physics.Optics.Lens.CreateRay
    isDefinition: true
    commentId: Overload:Engine.Core.Physics.Optics.Lens.CreateRay
  Engine.Core.Physics.Optics.Lens:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.Lens
        name: Lens
        nameWithType: Lens
        qualifiedName: Engine.Core.Physics.Optics.Lens
      VB:
      - id: Engine.Core.Physics.Optics.Lens
        name: Lens
        nameWithType: Lens
        qualifiedName: Engine.Core.Physics.Optics.Lens
    isDefinition: true
    commentId: T:Engine.Core.Physics.Optics.Lens
  Engine.Core.Physics.Optics.LightRay:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.LightRay
        name: LightRay
        nameWithType: LightRay
        qualifiedName: Engine.Core.Physics.Optics.LightRay
      VB:
      - id: Engine.Core.Physics.Optics.LightRay
        name: LightRay
        nameWithType: LightRay
        qualifiedName: Engine.Core.Physics.Optics.LightRay
    isDefinition: true
    commentId: T:Engine.Core.Physics.Optics.LightRay
  Engine.Core.Physics.Optics.LightSource:
    name:
      CSharp:
      - id: Engine.Core.Physics.Optics.LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: Engine.Core.Physics.Optics.LightSource
      VB:
      - id: Engine.Core.Physics.Optics.LightSource
        name: LightSource
        nameWithType: LightSource
        qualifiedName: Engine.Core.Physics.Optics.LightSource
    isDefinition: true
    commentId: T:Engine.Core.Physics.Optics.LightSource
  Engine.Core.SceneManagement.Scene.SceneId*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene.SceneId*
        name: SceneId
        nameWithType: Scene.SceneId
        qualifiedName: Engine.Core.SceneManagement.Scene.SceneId
      VB:
      - id: Engine.Core.SceneManagement.Scene.SceneId*
        name: SceneId
        nameWithType: Scene.SceneId
        qualifiedName: Engine.Core.SceneManagement.Scene.SceneId
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.Scene.SceneId
  Engine.Core.SceneManagement.Scene.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene.#ctor*
        name: Scene
        nameWithType: Scene.Scene
        qualifiedName: Engine.Core.SceneManagement.Scene.Scene
      VB:
      - id: Engine.Core.SceneManagement.Scene.#ctor*
        name: Scene
        nameWithType: Scene.Scene
        qualifiedName: Engine.Core.SceneManagement.Scene.Scene
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.Scene.#ctor
  Engine.Core.SceneManagement.Scene:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Engine.Core.SceneManagement.Scene
      VB:
      - id: Engine.Core.SceneManagement.Scene
        name: Scene
        nameWithType: Scene
        qualifiedName: Engine.Core.SceneManagement.Scene
    isDefinition: true
    parent: Engine.Core.SceneManagement
    commentId: T:Engine.Core.SceneManagement.Scene
  Engine.Core.SceneManagement:
    name:
      CSharp:
      - name: Engine.Core.SceneManagement
        nameWithType: Engine.Core.SceneManagement
        qualifiedName: Engine.Core.SceneManagement
      VB:
      - name: Engine.Core.SceneManagement
        nameWithType: Engine.Core.SceneManagement
        qualifiedName: Engine.Core.SceneManagement
    isDefinition: true
    commentId: N:Engine.Core.SceneManagement
  Engine.Core.SceneManagement.Scene.Name:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene.Name
        name: Name
        nameWithType: Scene.Name
        qualifiedName: Engine.Core.SceneManagement.Scene.Name
      VB:
      - id: Engine.Core.SceneManagement.Scene.Name
        name: Name
        nameWithType: Scene.Name
        qualifiedName: Engine.Core.SceneManagement.Scene.Name
    isDefinition: true
    parent: Engine.Core.SceneManagement.Scene
    commentId: F:Engine.Core.SceneManagement.Scene.Name
  Engine.Core.SceneManagement.Scene.SceneId:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene.SceneId
        name: SceneId
        nameWithType: Scene.SceneId
        qualifiedName: Engine.Core.SceneManagement.Scene.SceneId
      VB:
      - id: Engine.Core.SceneManagement.Scene.SceneId
        name: SceneId
        nameWithType: Scene.SceneId
        qualifiedName: Engine.Core.SceneManagement.Scene.SceneId
    isDefinition: true
    parent: Engine.Core.SceneManagement.Scene
    commentId: P:Engine.Core.SceneManagement.Scene.SceneId
  GCS3:
    name:
      CSharp:
      - id: GCS3
        name: GCS3
        nameWithType: GCS3
        qualifiedName: GCS3
        isExternal: true
      VB:
      - id: GCS3
        name: GCS3
        nameWithType: GCS3
        qualifiedName: GCS3
        isExternal: true
    isDefinition: true
    commentId: '!:GCS3'
  Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*
        name: GlobalCoordinateSystem
        nameWithType: Scene3D.GlobalCoordinateSystem
        qualifiedName: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
      VB:
      - id: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem*
        name: GlobalCoordinateSystem
        nameWithType: Scene3D.GlobalCoordinateSystem
        qualifiedName: Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.Scene3D.GlobalCoordinateSystem
  Engine.Core.SceneManagement.Scene3D.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene3D.#ctor*
        name: Scene3D
        nameWithType: Scene3D.Scene3D
        qualifiedName: Engine.Core.SceneManagement.Scene3D.Scene3D
      VB:
      - id: Engine.Core.SceneManagement.Scene3D.#ctor*
        name: Scene3D
        nameWithType: Scene3D.Scene3D
        qualifiedName: Engine.Core.SceneManagement.Scene3D.Scene3D
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.Scene3D.#ctor
  Engine.Core.SceneManagement.Scene3D:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.Scene3D
        name: Scene3D
        nameWithType: Scene3D
        qualifiedName: Engine.Core.SceneManagement.Scene3D
      VB:
      - id: Engine.Core.SceneManagement.Scene3D
        name: Scene3D
        nameWithType: Scene3D
        qualifiedName: Engine.Core.SceneManagement.Scene3D
    isDefinition: true
    commentId: T:Engine.Core.SceneManagement.Scene3D
  Engine.Core.SceneManagement.SceneManager:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.SceneManager
        name: SceneManager
        nameWithType: SceneManager
        qualifiedName: Engine.Core.SceneManagement.SceneManager
      VB:
      - id: Engine.Core.SceneManagement.SceneManager
        name: SceneManager
        nameWithType: SceneManager
        qualifiedName: Engine.Core.SceneManagement.SceneManager
    isDefinition: true
    parent: Engine.Core.SceneManagement
    commentId: T:Engine.Core.SceneManagement.SceneManager
  Engine.Core.SceneManagement.SceneManager.#ctor*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.SceneManager.#ctor*
        name: SceneManager
        nameWithType: SceneManager.SceneManager
        qualifiedName: Engine.Core.SceneManagement.SceneManager.SceneManager
      VB:
      - id: Engine.Core.SceneManagement.SceneManager.#ctor*
        name: SceneManager
        nameWithType: SceneManager.SceneManager
        qualifiedName: Engine.Core.SceneManagement.SceneManager.SceneManager
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.SceneManager.#ctor
  Engine.Core.SceneManagement.SceneManager.AddScene*:
    name:
      CSharp:
      - id: Engine.Core.SceneManagement.SceneManager.AddScene*
        name: AddScene
        nameWithType: SceneManager.AddScene
        qualifiedName: Engine.Core.SceneManagement.SceneManager.AddScene
      VB:
      - id: Engine.Core.SceneManagement.SceneManager.AddScene*
        name: AddScene
        nameWithType: SceneManager.AddScene
        qualifiedName: Engine.Core.SceneManagement.SceneManager.AddScene
    isDefinition: true
    commentId: Overload:Engine.Core.SceneManagement.SceneManager.AddScene
  Engine.Rendering.ColorExtension.Interpolate*:
    name:
      CSharp:
      - id: Engine.Rendering.ColorExtension.Interpolate*
        name: Interpolate
        nameWithType: ColorExtension.Interpolate
        qualifiedName: Engine.Rendering.ColorExtension.Interpolate
      VB:
      - id: Engine.Rendering.ColorExtension.Interpolate*
        name: Interpolate
        nameWithType: ColorExtension.Interpolate
        qualifiedName: Engine.Rendering.ColorExtension.Interpolate
    isDefinition: true
    commentId: Overload:Engine.Rendering.ColorExtension.Interpolate
  Engine.Rendering.ColorExtension:
    name:
      CSharp:
      - id: Engine.Rendering.ColorExtension
        name: ColorExtension
        nameWithType: ColorExtension
        qualifiedName: Engine.Rendering.ColorExtension
      VB:
      - id: Engine.Rendering.ColorExtension
        name: ColorExtension
        nameWithType: ColorExtension
        qualifiedName: Engine.Rendering.ColorExtension
    isDefinition: true
    commentId: T:Engine.Rendering.ColorExtension
  Engine.Rendering:
    name:
      CSharp:
      - name: Engine.Rendering
        nameWithType: Engine.Rendering
        qualifiedName: Engine.Rendering
      VB:
      - name: Engine.Rendering
        nameWithType: Engine.Rendering
        qualifiedName: Engine.Rendering
    isDefinition: true
    commentId: N:Engine.Rendering
  Engine.Rendering.Projection:
    name:
      CSharp:
      - id: Engine.Rendering.Projection
        name: Projection
        nameWithType: Projection
        qualifiedName: Engine.Rendering.Projection
      VB:
      - id: Engine.Rendering.Projection
        name: Projection
        nameWithType: Projection
        qualifiedName: Engine.Rendering.Projection
    isDefinition: true
    parent: Engine.Rendering
    commentId: T:Engine.Rendering.Projection
  PictureBox:
    name:
      CSharp:
      - id: PictureBox
        name: PictureBox
        nameWithType: PictureBox
        qualifiedName: PictureBox
        isExternal: true
      VB:
      - id: PictureBox
        name: PictureBox
        nameWithType: PictureBox
        qualifiedName: PictureBox
        isExternal: true
    isDefinition: true
  Engine.Rendering.RenderImage.#ctor*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderImage.#ctor*
        name: RenderImage
        nameWithType: RenderImage.RenderImage
        qualifiedName: Engine.Rendering.RenderImage.RenderImage
      VB:
      - id: Engine.Rendering.RenderImage.#ctor*
        name: RenderImage
        nameWithType: RenderImage.RenderImage
        qualifiedName: Engine.Rendering.RenderImage.RenderImage
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderImage.#ctor
  Engine.Rendering.RenderImage.Render*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderImage.Render*
        name: Render
        nameWithType: RenderImage.Render
        qualifiedName: Engine.Rendering.RenderImage.Render
      VB:
      - id: Engine.Rendering.RenderImage.Render*
        name: Render
        nameWithType: RenderImage.Render
        qualifiedName: Engine.Rendering.RenderImage.Render
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderImage.Render
  Engine.Rendering.RenderImage:
    name:
      CSharp:
      - id: Engine.Rendering.RenderImage
        name: RenderImage
        nameWithType: RenderImage
        qualifiedName: Engine.Rendering.RenderImage
      VB:
      - id: Engine.Rendering.RenderImage
        name: RenderImage
        nameWithType: RenderImage
        qualifiedName: Engine.Rendering.RenderImage
    isDefinition: true
    commentId: T:Engine.Rendering.RenderImage
  Engine.Rendering.RenderingConstants.ScreenHeight*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderingConstants.ScreenHeight*
        name: ScreenHeight
        nameWithType: RenderingConstants.ScreenHeight
        qualifiedName: Engine.Rendering.RenderingConstants.ScreenHeight
      VB:
      - id: Engine.Rendering.RenderingConstants.ScreenHeight*
        name: ScreenHeight
        nameWithType: RenderingConstants.ScreenHeight
        qualifiedName: Engine.Rendering.RenderingConstants.ScreenHeight
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderingConstants.ScreenHeight
  Engine.Rendering.RenderingConstants.ScreenWidth*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderingConstants.ScreenWidth*
        name: ScreenWidth
        nameWithType: RenderingConstants.ScreenWidth
        qualifiedName: Engine.Rendering.RenderingConstants.ScreenWidth
      VB:
      - id: Engine.Rendering.RenderingConstants.ScreenWidth*
        name: ScreenWidth
        nameWithType: RenderingConstants.ScreenWidth
        qualifiedName: Engine.Rendering.RenderingConstants.ScreenWidth
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderingConstants.ScreenWidth
  Engine.Rendering.RenderingConstants.HalfScreenHeight*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderingConstants.HalfScreenHeight*
        name: HalfScreenHeight
        nameWithType: RenderingConstants.HalfScreenHeight
        qualifiedName: Engine.Rendering.RenderingConstants.HalfScreenHeight
      VB:
      - id: Engine.Rendering.RenderingConstants.HalfScreenHeight*
        name: HalfScreenHeight
        nameWithType: RenderingConstants.HalfScreenHeight
        qualifiedName: Engine.Rendering.RenderingConstants.HalfScreenHeight
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderingConstants.HalfScreenHeight
  Engine.Rendering.RenderingConstants.HalfScreenWidth*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderingConstants.HalfScreenWidth*
        name: HalfScreenWidth
        nameWithType: RenderingConstants.HalfScreenWidth
        qualifiedName: Engine.Rendering.RenderingConstants.HalfScreenWidth
      VB:
      - id: Engine.Rendering.RenderingConstants.HalfScreenWidth*
        name: HalfScreenWidth
        nameWithType: RenderingConstants.HalfScreenWidth
        qualifiedName: Engine.Rendering.RenderingConstants.HalfScreenWidth
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderingConstants.HalfScreenWidth
  Engine.Rendering.RenderingConstants:
    name:
      CSharp:
      - id: Engine.Rendering.RenderingConstants
        name: RenderingConstants
        nameWithType: RenderingConstants
        qualifiedName: Engine.Rendering.RenderingConstants
      VB:
      - id: Engine.Rendering.RenderingConstants
        name: RenderingConstants
        nameWithType: RenderingConstants
        qualifiedName: Engine.Rendering.RenderingConstants
    isDefinition: true
    commentId: T:Engine.Rendering.RenderingConstants
  Engine.Rendering.RenderPoint.#ctor*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderPoint.#ctor*
        name: RenderPoint
        nameWithType: RenderPoint.RenderPoint
        qualifiedName: Engine.Rendering.RenderPoint.RenderPoint
      VB:
      - id: Engine.Rendering.RenderPoint.#ctor*
        name: RenderPoint
        nameWithType: RenderPoint.RenderPoint
        qualifiedName: Engine.Rendering.RenderPoint.RenderPoint
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderPoint.#ctor
  Engine.Rendering.RenderPoint.LerpColor*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderPoint.LerpColor*
        name: LerpColor
        nameWithType: RenderPoint.LerpColor
        qualifiedName: Engine.Rendering.RenderPoint.LerpColor
      VB:
      - id: Engine.Rendering.RenderPoint.LerpColor*
        name: LerpColor
        nameWithType: RenderPoint.LerpColor
        qualifiedName: Engine.Rendering.RenderPoint.LerpColor
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderPoint.LerpColor
  Engine.Rendering.RenderPoint:
    name:
      CSharp:
      - id: Engine.Rendering.RenderPoint
        name: RenderPoint
        nameWithType: RenderPoint
        qualifiedName: Engine.Rendering.RenderPoint
      VB:
      - id: Engine.Rendering.RenderPoint
        name: RenderPoint
        nameWithType: RenderPoint
        qualifiedName: Engine.Rendering.RenderPoint
    isDefinition: true
    commentId: T:Engine.Rendering.RenderPoint
  Engine.Rendering.RenderTexture.#ctor*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderTexture.#ctor*
        name: RenderTexture
        nameWithType: RenderTexture.RenderTexture
        qualifiedName: Engine.Rendering.RenderTexture.RenderTexture
      VB:
      - id: Engine.Rendering.RenderTexture.#ctor*
        name: RenderTexture
        nameWithType: RenderTexture.RenderTexture
        qualifiedName: Engine.Rendering.RenderTexture.RenderTexture
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderTexture.#ctor
  Pixel:
    name:
      CSharp:
      - id: Pixel
        name: Pixel
        nameWithType: Pixel
        qualifiedName: Pixel
        isExternal: true
      VB:
      - id: Pixel
        name: Pixel
        nameWithType: Pixel
        qualifiedName: Pixel
        isExternal: true
    isDefinition: true
    commentId: '!:Pixel'
  Engine.Rendering.RenderTexture.RenderPixel*:
    name:
      CSharp:
      - id: Engine.Rendering.RenderTexture.RenderPixel*
        name: RenderPixel
        nameWithType: RenderTexture.RenderPixel
        qualifiedName: Engine.Rendering.RenderTexture.RenderPixel
      VB:
      - id: Engine.Rendering.RenderTexture.RenderPixel*
        name: RenderPixel
        nameWithType: RenderTexture.RenderPixel
        qualifiedName: Engine.Rendering.RenderTexture.RenderPixel
    isDefinition: true
    commentId: Overload:Engine.Rendering.RenderTexture.RenderPixel
  Engine.Rendering.RenderTexture:
    name:
      CSharp:
      - id: Engine.Rendering.RenderTexture
        name: RenderTexture
        nameWithType: RenderTexture
        qualifiedName: Engine.Rendering.RenderTexture
      VB:
      - id: Engine.Rendering.RenderTexture
        name: RenderTexture
        nameWithType: RenderTexture
        qualifiedName: Engine.Rendering.RenderTexture
    isDefinition: true
    commentId: T:Engine.Rendering.RenderTexture
